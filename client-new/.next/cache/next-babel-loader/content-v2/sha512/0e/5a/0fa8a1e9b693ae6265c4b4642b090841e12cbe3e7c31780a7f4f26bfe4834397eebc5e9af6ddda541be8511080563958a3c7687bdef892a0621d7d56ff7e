{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\2012b\\\\WebstormProjects\\\\ecommerce-MERN\\\\client-new\\\\src\\\\components\\\\Layout\\\\store-nav\\\\store-nav.tsx\";\nimport React from 'react';\nimport StoreNavWrapper, { StoreNavLinks } from './store-nav.style';\nimport useFetch from \"@/hooks/useFetch\";\nimport { API_BASE_URL } from \"@/utils/config\";\nimport NavLink from \"@/components/Layout/nav-link/nav-link\";\nimport { CategoryMobile } from \"@/components/Others/placeholder/placeholder\";\n\nconst StoreNav = ({\n  className,\n  items = []\n}) => {\n  const [data, isLoading] = useFetch(`${API_BASE_URL}/api/v1/category/`);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(CategoryMobile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 20\n    }, this);\n  }\n\n  if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(StoreNavWrapper, {\n      className: className,\n      children: /*#__PURE__*/_jsxDEV(StoreNavLinks, {\n        children: data === null || data === void 0 ? void 0 : data.data.map((item, index) => /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"store-nav-link\",\n          href: item.id,\n          label: item.name,\n          dynamic: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nexport default StoreNav;","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/components/Layout/store-nav/store-nav.tsx"],"names":["React","StoreNavWrapper","StoreNavLinks","useFetch","API_BASE_URL","NavLink","CategoryMobile","StoreNav","className","items","data","isLoading","map","item","index","id","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,IAA0BC,aAA1B,QAA+C,mBAA/C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,SAAQC,cAAR,QAAiE,6CAAjE;;AAOA,MAAMC,QAAgD,GAAG,CAAC;AACxDC,EAAAA,SADwD;AAExDC,EAAAA,KAAK,GAAG;AAFgD,CAAD,KAGnD;AACF,QAAM,CAACC,IAAD,EAAOC,SAAP,IAAkBR,QAAQ,CAAE,GAAEC,YAAa,mBAAjB,CAAhC;;AACA,MAAGO,SAAH,EAAa;AACL,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACP;;AACD,MAAG,CAACA,SAAJ,EAAc;AACV,wBACI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEH,SAA5B;AAAA,6BACI,QAAC,aAAD;AAAA,kBACKE,IADL,aACKA,IADL,uBACKA,IAAI,CAAEA,IAAN,CAAWE,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACZ,QAAC,OAAD;AACI,UAAA,SAAS,EAAC,gBADd;AAEI,UAAA,IAAI,EAAED,IAAI,CAACE,EAFf;AAGI,UAAA,KAAK,EAAEF,IAAI,CAACG,IAHhB;AAII,UAAA,OAAO,EAAE;AAJb,WAKSF,KALT;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;AAIJ,CA5BD;;AA8BA,eAAeP,QAAf","sourcesContent":["import React from 'react';\r\nimport StoreNavWrapper, { StoreNavLinks } from './store-nav.style';\r\nimport useFetch from \"@/hooks/useFetch\";\r\nimport {API_BASE_URL} from \"@/utils/config\";\r\nimport NavLink from \"@/components/Layout/nav-link/nav-link\";\r\nimport {CategoryMobile, SidebarLoader, SidebarMobileLoader} from \"@/components/Others/placeholder/placeholder\";\r\n\r\ntype StoreNavProps = {\r\n  className?: string;\r\n  items?: any[];\r\n};\r\n\r\nconst StoreNav: React.FunctionComponent<StoreNavProps> = ({\r\n  className,\r\n  items = [],\r\n}) => {\r\n    const [data, isLoading]=useFetch(`${API_BASE_URL}/api/v1/category/`)\r\n    if(isLoading){\r\n            return <CategoryMobile/>\r\n    }\r\n    if(!isLoading){\r\n        return (\r\n            <StoreNavWrapper className={className}>\r\n                <StoreNavLinks>\r\n                    {data?.data.map((item, index) => (\r\n                        <NavLink\r\n                            className=\"store-nav-link\"\r\n                            href={item.id}\r\n                            label={item.name}\r\n                            dynamic={true}\r\n                            key={index}\r\n                        />\r\n                    ))}\r\n                </StoreNavLinks>\r\n            </StoreNavWrapper>\r\n        );\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport default StoreNav;\r\n"]},"metadata":{},"sourceType":"module"}