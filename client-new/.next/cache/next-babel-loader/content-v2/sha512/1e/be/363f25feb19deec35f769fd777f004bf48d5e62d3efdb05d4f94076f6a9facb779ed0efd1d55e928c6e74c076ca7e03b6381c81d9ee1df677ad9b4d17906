{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/popover/popover.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from './useOnClickOutside';\nimport PopoverWrapper from './popover.style';\n\nvar Popover = function Popover(_ref) {\n  _s();\n\n  var className = _ref.className,\n      handler = _ref.handler,\n      content = _ref.content,\n      direction = _ref.direction;\n\n  // Popover State\n  var _useState = useState(false),\n      state = _useState[0],\n      setState = _useState[1]; // Ref\n\n\n  var ref = useRef(); // Add all classs to an array\n\n  var addAllClasses = ['popover-wrapper']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  } // Add direction class on popover content\n\n\n  if (direction) {\n    addAllClasses.push(direction);\n  } // Toggle Popover content\n\n\n  var handleToggle = function handleToggle(e) {\n    e.stopPropagation();\n    setState(function (state) {\n      return !state;\n    });\n  }; // Handle document click\n\n\n  var handleDocumentClick = function handleDocumentClick(e) {\n    e.stopPropagation();\n\n    if (state) {\n      handleToggle(e);\n    }\n  }; // Handle window event listener\n\n\n  useEffect(function () {\n    window.addEventListener('click', handleDocumentClick);\n    return function () {\n      window.removeEventListener('click', handleDocumentClick);\n    };\n  }); // Close popover on click outside\n\n  useOnClickOutside(ref, function () {\n    return setState(function (state) {\n      return false;\n    });\n  });\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    _jsxDEV(PopoverWrapper, {\n      className: addAllClasses.join(' '),\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popover-handler\",\n        onClick: handleToggle,\n        children: handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, _this), state && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popover-content\",\n        children: content && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner-wrap\",\n          onClick: handleToggle,\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this)\n  );\n};\n\n_s(Popover, \"6keVeuQQL4WjJKTEtI+7g/SUw/c=\", false, function () {\n  return [useOnClickOutside];\n});\n\n_c = Popover;\nexport default Popover;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popover\");","map":{"version":3,"sources":["/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/popover/popover.tsx"],"names":["React","useState","useEffect","useRef","useOnClickOutside","PopoverWrapper","Popover","className","handler","content","direction","state","setState","ref","addAllClasses","push","handleToggle","e","stopPropagation","handleDocumentClick","window","addEventListener","removeEventListener","join"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;AAUA,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,OAKlC;AAAA;;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,SACI,QADJA,SACI;;AACJ;AADI,kBAEsBT,QAAQ,CAAC,KAAD,CAF9B;AAAA,MAEGU,KAFH;AAAA,MAEUC,QAFV,iBAIJ;;;AACA,MAAMC,GAAG,GAAGV,MAAM,EAAlB,CALI,CAOJ;;AACA,MAAMW,aAAuB,GAAG,CAAC,iBAAD,CAAhC,CARI,CAUJ;;AACA,MAAIP,SAAJ,EAAe;AACbO,IAAAA,aAAa,CAACC,IAAd,CAAmBR,SAAnB;AACD,GAbG,CAeJ;;;AACA,MAAIG,SAAJ,EAAe;AACbI,IAAAA,aAAa,CAACC,IAAd,CAAmBL,SAAnB;AACD,GAlBG,CAoBJ;;;AACA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAW;AAC9BA,IAAAA,CAAC,CAACC,eAAF;AACAN,IAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,aAAW,CAACA,KAAZ;AAAA,KAAD,CAAR;AACD,GAHD,CArBI,CA0BJ;;;AACA,MAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACF,CAAD,EAAyC;AACnEA,IAAAA,CAAC,CAACC,eAAF;;AACA,QAAIP,KAAJ,EAAW;AACTK,MAAAA,YAAY,CAACC,CAAD,CAAZ;AACD;AACF,GALD,CA3BI,CAkCJ;;;AACAf,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,mBAAjC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,mBAApC;AACD,KAFD;AAGD,GALQ,CAAT,CAnCI,CA0CJ;;AACAf,EAAAA,iBAAiB,CAACS,GAAD,EAAM;AAAA,WAAMD,QAAQ,CAAC,UAACD,KAAD;AAAA,aAAW,KAAX;AAAA,KAAD,CAAd;AAAA,GAAN,CAAjB;AAEA;AAAA;AACI;AAEA,YAAC,cAAD;AAAgB,MAAA,SAAS,EAAEG,aAAa,CAACS,IAAd,CAAmB,GAAnB,CAA3B;AAAoD,MAAA,GAAG,EAAEV,GAAzD;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,OAAO,EAAEG,YAA1C;AAAA,kBACGR;AADH;AAAA;AAAA;AAAA;AAAA,eADA,EAICG,KAAK,iBACJ;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACGF,OAAO,iBACN;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,OAAO,EAAEO,YAArC;AAAA,oBACGP;AADH;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAkBD,CApED;;GAAMH,O;UAgDJF,iB;;;KAhDIE,O;AAsEN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from './useOnClickOutside';\nimport PopoverWrapper from './popover.style';\n\ntype PopoverProps = {\n  className?: string;\n  handler: React.ReactNode;\n  content: React.ReactNode;\n  direction?: 'left' | 'right';\n  handleToggle?: () => void;\n};\n\nconst Popover: React.FC<PopoverProps> = ({\n  className,\n  handler,\n  content,\n  direction,\n}) => {\n  // Popover State\n  const [state, setState] = useState(false);\n\n  // Ref\n  const ref = useRef();\n\n  // Add all classs to an array\n  const addAllClasses: string[] = ['popover-wrapper'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // Add direction class on popover content\n  if (direction) {\n    addAllClasses.push(direction);\n  }\n\n  // Toggle Popover content\n  const handleToggle = (e:any) => {\n    e.stopPropagation();\n    setState((state) => !state);\n  };\n\n  // Handle document click\n  const handleDocumentClick = (e: { stopPropagation: () => void; }) => {\n    e.stopPropagation();\n    if (state) {\n      handleToggle(e);\n    }\n  };\n\n  // Handle window event listener\n  useEffect(() => {\n    window.addEventListener('click', handleDocumentClick);\n    return () => {\n      window.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  // Close popover on click outside\n  useOnClickOutside(ref, () => setState((state) => false));\n\n  return (\n      // @ts-ignore\n\n      <PopoverWrapper className={addAllClasses.join(' ')} ref={ref}>\n      <div className=\"popover-handler\" onClick={handleToggle}>\n        {handler}\n      </div>\n      {state && (\n        <div className=\"popover-content\">\n          {content && (\n            <div className=\"inner-wrap\" onClick={handleToggle}>\n              {content}\n            </div>\n          )}\n        </div>\n      )}\n    </PopoverWrapper>\n  );\n};\n\nexport default Popover;\n"]},"metadata":{},"sourceType":"module"}