{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SHOP } from \"../defines\";\nconst initialState = {\n  sort: \"default\",\n  category: null,\n  subCategory: null,\n  currency: {\n    id: 'GBP',\n    defaultMessage: '£ Pounds',\n    icon: 'UKFlag'\n  },\n  billing: null,\n  address: null,\n  card: null\n};\n\nconst shopReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOP.SET_SORT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sort: action.sortType\n      });\n\n    case SHOP.SET_SUBCATEGORY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        subCategory: action.subCategory\n      });\n\n    case SHOP.SET_CURRENCY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currency: action.currency\n      });\n\n    case SHOP.SET_ADDRESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        address: action.address\n      });\n\n    case SHOP.SET_BILLING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        billing: action.billing\n      });\n\n    case SHOP.SET_CARD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        address: action.card\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/redux/reducers/shopReducer.ts"],"names":["SHOP","initialState","sort","category","subCategory","currency","id","defaultMessage","icon","billing","address","card","shopReducer","state","action","type","SET_SORT","sortType","SET_SUBCATEGORY","SET_CURRENCY","SET_ADDRESS","SET_BILLING","SET_CARD"],"mappings":";;;;;;AAAA,SAASA,IAAT,QAAqB,YAArB;AAGA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,IAAI,EAAE,SADwB;AAE9BC,EAAAA,QAAQ,EAAC,IAFqB;AAG9BC,EAAAA,WAAW,EAAE,IAHiB;AAI9BC,EAAAA,QAAQ,EAAG;AACTC,IAAAA,EAAE,EAAE,KADK;AAETC,IAAAA,cAAc,EAAE,UAFP;AAGTC,IAAAA,IAAI,EAAE;AAHG,GAJmB;AAS9BC,EAAAA,OAAO,EAAC,IATsB;AAU9BC,EAAAA,OAAO,EAAC,IAVsB;AAW9BC,EAAAA,IAAI,EAAC;AAXyB,CAAhC;;AAcA,MAAMC,WAAW,GAAG,CAACC,KAAgB,GAAGZ,YAApB,EAAkCa,MAAlC,KAAiD;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,IAAI,CAACgB,QAAV;AACE,6CACKH,KADL;AAEEX,QAAAA,IAAI,EAAEY,MAAM,CAACG;AAFf;;AAIF,SAAKjB,IAAI,CAACkB,eAAV;AACE,6CACKL,KADL;AAEET,QAAAA,WAAW,EAAEU,MAAM,CAACV;AAFtB;;AAIF,SAAKJ,IAAI,CAACmB,YAAV;AACE,6CACKN,KADL;AAEER,QAAAA,QAAQ,EAAES,MAAM,CAACT;AAFnB;;AAIF,SAAKL,IAAI,CAACoB,WAAV;AACE,6CACKP,KADL;AAEEH,QAAAA,OAAO,EAACI,MAAM,CAACJ;AAFjB;;AAIF,SAAKV,IAAI,CAACqB,WAAV;AACE,6CACKR,KADL;AAEEJ,QAAAA,OAAO,EAACK,MAAM,CAACL;AAFjB;;AAIF,SAAKT,IAAI,CAACsB,QAAV;AACE,6CACKT,KADL;AAEEH,QAAAA,OAAO,EAACI,MAAM,CAACH;AAFjB;;AAIF;AACE,aAAOE,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,WAAf","sourcesContent":["import { SHOP } from \"../defines\";\r\nimport {ShopStates} from \"@/redux/ReduxIntefaces\";\r\n\r\nconst initialState:ShopStates = {\r\n  sort: \"default\",\r\n  category:null,\r\n  subCategory: null,\r\n  currency:  {\r\n    id: 'GBP',\r\n    defaultMessage: '£ Pounds',\r\n    icon: 'UKFlag',\r\n  },\r\n  billing:null,\r\n  address:null,\r\n  card:null\r\n};\r\n\r\nconst shopReducer = (state:ShopStates = initialState, action:any) => {\r\n  switch (action.type) {\r\n    case SHOP.SET_SORT:\r\n      return {\r\n        ...state,\r\n        sort: action.sortType,\r\n      };\r\n    case SHOP.SET_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        subCategory: action.subCategory,\r\n      };\r\n    case SHOP.SET_CURRENCY:\r\n      return {\r\n        ...state,\r\n        currency: action.currency,\r\n      };\r\n    case SHOP.SET_ADDRESS:\r\n      return {\r\n        ...state,\r\n        address:action.address\r\n      }\r\n    case SHOP.SET_BILLING:\r\n      return {\r\n        ...state,\r\n        billing:action.billing\r\n      }\r\n    case SHOP.SET_CARD:\r\n      return {\r\n        ...state,\r\n        address:action.card\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default shopReducer;\r\n"]},"metadata":{},"sourceType":"module"}