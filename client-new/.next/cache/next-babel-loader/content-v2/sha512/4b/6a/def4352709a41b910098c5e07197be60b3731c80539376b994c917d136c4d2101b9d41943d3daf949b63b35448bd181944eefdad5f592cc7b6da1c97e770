{"ast":null,"code":"import styled from 'styled-components';\nimport css from '@styled-system/css';\nimport { shadow } from 'styled-system';\nexport var StyledForm = styled.form(_c = function _c(props) {\n  return css({\n    display: 'flex',\n    alignItems: 'center',\n    borderRadius: 'base',\n    overflow: 'hidden',\n    width: props.minimal ? '100%' : 700,\n    color: 'text.regular',\n    backgroundColor: props.minimal ? 'gray.400' : 'white'\n  });\n}, shadow);\n_c2 = StyledForm;\nexport var StyledInput = styled.input(css({\n  flexGrow: 1,\n  fontSize: 'base',\n  px: 20,\n  height: 38,\n  color: 'text.regular',\n  backgroundColor: 'inherit'\n}), {\n  border: 0,\n  '&:focus': {\n    outline: 0\n  },\n  '&::-webkit-input-placeholder, &::-moz-placeholder, &::-moz-placeholder, &::-ms-input-placeholder': {\n    fontSize: 'base',\n    color: 'text.regular',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis'\n  }\n});\nexport var StyledCategoryName = styled.span(css({\n  fontSize: 14,\n  fontWeight: 'bold',\n  lineHeight: '38px',\n  px: 15,\n  color: 'primary.regular',\n  backgroundColor: 'gray.200',\n  borderRadius: 'base'\n}), {\n  margin: '5px',\n  whiteSpace: 'nowrap',\n  textTransform: 'capitalize'\n});\nexport var StyledSearchButton = styled.button(css({\n  backgroundColor: 'grey',\n  color: 'white',\n  fontSize: 'base',\n  fontWeight: 'bold'\n}), {\n  display: 'flex',\n  height: 38,\n  alignItems: 'center',\n  border: 0,\n  outline: 0,\n  paddingLeft: 10,\n  paddingRight: 10,\n  cursor: 'pointer',\n  flexShrink: 0\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledForm$styled.form\");\n$RefreshReg$(_c2, \"StyledForm\");","map":{"version":3,"sources":["/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/search-box/search-box.style.tsx"],"names":["styled","css","shadow","StyledForm","form","props","display","alignItems","borderRadius","overflow","width","minimal","color","backgroundColor","StyledInput","input","flexGrow","fontSize","px","height","border","outline","whiteSpace","textOverflow","StyledCategoryName","span","fontWeight","lineHeight","margin","textTransform","StyledSearchButton","button","paddingLeft","paddingRight","cursor","flexShrink"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAO,IAAMC,UAAU,GAAGH,MAAM,CAACI,IAAP,MACxB,YAACC,KAAD;AAAA,SACEJ,GAAG,CAAC;AACFK,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,UAAU,EAAE,QAFV;AAGFC,IAAAA,YAAY,EAAE,MAHZ;AAIFC,IAAAA,QAAQ,EAAE,QAJR;AAKFC,IAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,GAAgB,MAAhB,GAAyB,GAL9B;AAMFC,IAAAA,KAAK,EAAE,cANL;AAOFC,IAAAA,eAAe,EAAER,KAAK,CAACM,OAAN,GAAgB,UAAhB,GAA6B;AAP5C,GAAD,CADL;AAAA,CADwB,EAWxBT,MAXwB,CAAnB;MAAMC,U;AAcb,OAAO,IAAMW,WAAW,GAAGd,MAAM,CAACe,KAAP,CACzBd,GAAG,CAAC;AACFe,EAAAA,QAAQ,EAAE,CADR;AAEFC,EAAAA,QAAQ,EAAE,MAFR;AAGFC,EAAAA,EAAE,EAAE,EAHF;AAIFC,EAAAA,MAAM,EAAE,EAJN;AAKFP,EAAAA,KAAK,EAAE,cALL;AAMFC,EAAAA,eAAe,EAAE;AANf,CAAD,CADsB,EASzB;AACEO,EAAAA,MAAM,EAAE,CADV;AAEE,aAAW;AACTC,IAAAA,OAAO,EAAE;AADA,GAFb;AAME,sGAAoG;AAClGJ,IAAAA,QAAQ,EAAE,MADwF;AAElGL,IAAAA,KAAK,EAAE,cAF2F;AAGlGU,IAAAA,UAAU,EAAE,QAHsF;AAIlGC,IAAAA,YAAY,EAAE;AAJoF;AANtG,CATyB,CAApB;AAwBP,OAAO,IAAMC,kBAAkB,GAAGxB,MAAM,CAACyB,IAAP,CAChCxB,GAAG,CAAC;AACFgB,EAAAA,QAAQ,EAAE,EADR;AAEFS,EAAAA,UAAU,EAAE,MAFV;AAGFC,EAAAA,UAAU,EAAE,MAHV;AAIFT,EAAAA,EAAE,EAAE,EAJF;AAKFN,EAAAA,KAAK,EAAE,iBALL;AAMFC,EAAAA,eAAe,EAAE,UANf;AAOFL,EAAAA,YAAY,EAAE;AAPZ,CAAD,CAD6B,EAUhC;AACEoB,EAAAA,MAAM,EAAE,KADV;AAEEN,EAAAA,UAAU,EAAE,QAFd;AAGEO,EAAAA,aAAa,EAAE;AAHjB,CAVgC,CAA3B;AAiBP,OAAO,IAAMC,kBAAkB,GAAG9B,MAAM,CAAC+B,MAAP,CAChC9B,GAAG,CAAC;AACFY,EAAAA,eAAe,EAAE,MADf;AAEFD,EAAAA,KAAK,EAAE,OAFL;AAGFK,EAAAA,QAAQ,EAAE,MAHR;AAIFS,EAAAA,UAAU,EAAE;AAJV,CAAD,CAD6B,EAOhC;AACEpB,EAAAA,OAAO,EAAE,MADX;AAEEa,EAAAA,MAAM,EAAE,EAFV;AAGEZ,EAAAA,UAAU,EAAE,QAHd;AAIEa,EAAAA,MAAM,EAAE,CAJV;AAKEC,EAAAA,OAAO,EAAE,CALX;AAMEW,EAAAA,WAAW,EAAE,EANf;AAOEC,EAAAA,YAAY,EAAE,EAPhB;AAQEC,EAAAA,MAAM,EAAE,SARV;AASEC,EAAAA,UAAU,EAAE;AATd,CAPgC,CAA3B","sourcesContent":["import styled from 'styled-components';\nimport css from '@styled-system/css';\nimport { shadow } from 'styled-system';\nexport const StyledForm = styled.form<any>(\n  (props) =>\n    css({\n      display: 'flex',\n      alignItems: 'center',\n      borderRadius: 'base',\n      overflow: 'hidden',\n      width: props.minimal ? '100%' : 700,\n      color: 'text.regular',\n      backgroundColor: props.minimal ? 'gray.400' : 'white',\n    }),\n  shadow\n);\n\nexport const StyledInput = styled.input(\n  css({\n    flexGrow: 1,\n    fontSize: 'base',\n    px: 20,\n    height: 38,\n    color: 'text.regular',\n    backgroundColor: 'inherit',\n  }),\n  {\n    border: 0,\n    '&:focus': {\n      outline: 0,\n    },\n\n    '&::-webkit-input-placeholder, &::-moz-placeholder, &::-moz-placeholder, &::-ms-input-placeholder': {\n      fontSize: 'base',\n      color: 'text.regular',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n    },\n  }\n);\n\nexport const StyledCategoryName = styled.span(\n  css({\n    fontSize: 14,\n    fontWeight: 'bold',\n    lineHeight: '38px',\n    px: 15,\n    color: 'primary.regular',\n    backgroundColor: 'gray.200',\n    borderRadius: 'base',\n  }),\n  {\n    margin: '5px',\n    whiteSpace: 'nowrap',\n    textTransform: 'capitalize',\n  }\n);\n\nexport const StyledSearchButton = styled.button(\n  css({\n    backgroundColor: 'grey',\n    color: 'white',\n    fontSize: 'base',\n    fontWeight: 'bold',\n  }),\n  {\n    display: 'flex',\n    height: 38,\n    alignItems: 'center',\n    border: 0,\n    outline: 0,\n    paddingLeft: 10,\n    paddingRight: 10,\n    cursor: 'pointer',\n    flexShrink: 0,\n  }\n);\n"]},"metadata":{},"sourceType":"module"}