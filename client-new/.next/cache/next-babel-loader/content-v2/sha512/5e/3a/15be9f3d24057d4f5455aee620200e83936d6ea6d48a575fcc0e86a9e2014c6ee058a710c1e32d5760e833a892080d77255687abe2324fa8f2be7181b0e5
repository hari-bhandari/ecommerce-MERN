{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\2012b\\\\WebstormProjects\\\\ecommerce-MERN\\\\client-new\\\\src\\\\components\\\\Layout\\\\popover\\\\popover.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from './useOnClickOutside';\nimport PopoverWrapper from './popover.style';\n\nvar Popover = function Popover(_ref) {\n  _s();\n\n  var className = _ref.className,\n      handler = _ref.handler,\n      content = _ref.content,\n      direction = _ref.direction;\n\n  // Popover State\n  var _useState = useState(false),\n      state = _useState[0],\n      setState = _useState[1]; // Ref\n\n\n  var ref = useRef(); // Add all classs to an array\n\n  var addAllClasses = ['popover-wrapper']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  } // Add direction class on popover content\n\n\n  if (direction) {\n    addAllClasses.push(direction);\n  } // Toggle Popover content\n\n\n  var handleToggle = function handleToggle(e) {\n    e.stopPropagation();\n    setState(function (state) {\n      return !state;\n    });\n  }; // Handle document click\n\n\n  var handleDocumentClick = function handleDocumentClick(e) {\n    e.stopPropagation();\n\n    if (state) {\n      handleToggle(e);\n    }\n  }; // Handle window event listener\n\n\n  useEffect(function () {\n    window.addEventListener('click', handleDocumentClick);\n    return function () {\n      window.removeEventListener('click', handleDocumentClick);\n    };\n  }); // Close popover on click outside\n\n  useOnClickOutside(ref, function () {\n    return setState(function (state) {\n      return false;\n    });\n  });\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    _jsxDEV(PopoverWrapper, {\n      className: addAllClasses.join(' '),\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popover-handler\",\n        onClick: handleToggle,\n        children: handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this), state && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popover-content\",\n        children: content && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner-wrap\",\n          onClick: handleToggle,\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this)\n  );\n};\n\n_s(Popover, \"6keVeuQQL4WjJKTEtI+7g/SUw/c=\", false, function () {\n  return [useOnClickOutside];\n});\n\n_c = Popover;\nexport default Popover;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popover\");","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/components/Layout/popover/popover.tsx"],"names":["React","useState","useEffect","useRef","useOnClickOutside","PopoverWrapper","Popover","className","handler","content","direction","state","setState","ref","addAllClasses","push","handleToggle","e","stopPropagation","handleDocumentClick","window","addEventListener","removeEventListener","join"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;AAUA,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,OAKO;AAAA;;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,SACI,QADJA,SACI;;AAC7C;AAD6C,kBAEnBT,QAAQ,CAAC,KAAD,CAFW;AAAA,MAEtCU,KAFsC;AAAA,MAE/BC,QAF+B,iBAI7C;;;AACA,MAAMC,GAAG,GAAGV,MAAM,EAAlB,CAL6C,CAO7C;;AACA,MAAMW,aAAuB,GAAG,CAAC,iBAAD,CAAhC,CAR6C,CAU7C;;AACA,MAAIP,SAAJ,EAAe;AACbO,IAAAA,aAAa,CAACC,IAAd,CAAmBR,SAAnB;AACD,GAb4C,CAe7C;;;AACA,MAAIG,SAAJ,EAAe;AACbI,IAAAA,aAAa,CAACC,IAAd,CAAmBL,SAAnB;AACD,GAlB4C,CAoB7C;;;AACA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAW;AAC9BA,IAAAA,CAAC,CAACC,eAAF;AACAN,IAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,aAAW,CAACA,KAAZ;AAAA,KAAD,CAAR;AACD,GAHD,CArB6C,CA0B7C;;;AACA,MAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACF,CAAD,EAAyC;AACnEA,IAAAA,CAAC,CAACC,eAAF;;AACA,QAAIP,KAAJ,EAAW;AACTK,MAAAA,YAAY,CAACC,CAAD,CAAZ;AACD;AACF,GALD,CA3B6C,CAkC7C;;;AACAf,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,mBAAjC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,mBAApC;AACD,KAFD;AAGD,GALQ,CAAT,CAnC6C,CA0C7C;;AACAf,EAAAA,iBAAiB,CAACS,GAAD,EAAM;AAAA,WAAMD,QAAQ,CAAC,UAACD,KAAD;AAAA,aAAW,KAAX;AAAA,KAAD,CAAd;AAAA,GAAN,CAAjB;AAEA;AAAA;AACI;AAEA,YAAC,cAAD;AAAgB,MAAA,SAAS,EAAEG,aAAa,CAACS,IAAd,CAAmB,GAAnB,CAA3B;AAAoD,MAAA,GAAG,EAAEV,GAAzD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,OAAO,EAAEG,YAA1C;AAAA,kBACGR;AADH;AAAA;AAAA;AAAA;AAAA,eADF,EAIGG,KAAK,iBACF;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACGF,OAAO,iBACJ;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,OAAO,EAAEO,YAArC;AAAA,oBACGP;AADH;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,eALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAkBD,CApED;;GAAMH,O;UAgDJF,iB;;;KAhDIE,O;AAsEN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport useOnClickOutside from './useOnClickOutside';\r\nimport PopoverWrapper from './popover.style';\r\n\r\ntype PopoverProps = {\r\n  className?: string;\r\n  handler: React.ReactNode;\r\n  content: React.ReactNode;\r\n  direction?: 'left' | 'right';\r\n  handleToggle?: () => void;\r\n};\r\n\r\nconst Popover: React.FC<PopoverProps> = ({\r\n                                           className,\r\n                                           handler,\r\n                                           content,\r\n                                           direction,\r\n                                         }) => {\r\n  // Popover State\r\n  const [state, setState] = useState(false);\r\n\r\n  // Ref\r\n  const ref = useRef();\r\n\r\n  // Add all classs to an array\r\n  const addAllClasses: string[] = ['popover-wrapper'];\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className);\r\n  }\r\n\r\n  // Add direction class on popover content\r\n  if (direction) {\r\n    addAllClasses.push(direction);\r\n  }\r\n\r\n  // Toggle Popover content\r\n  const handleToggle = (e:any) => {\r\n    e.stopPropagation();\r\n    setState((state) => !state);\r\n  };\r\n\r\n  // Handle document click\r\n  const handleDocumentClick = (e: { stopPropagation: () => void; }) => {\r\n    e.stopPropagation();\r\n    if (state) {\r\n      handleToggle(e);\r\n    }\r\n  };\r\n\r\n  // Handle window event listener\r\n  useEffect(() => {\r\n    window.addEventListener('click', handleDocumentClick);\r\n    return () => {\r\n      window.removeEventListener('click', handleDocumentClick);\r\n    };\r\n  });\r\n\r\n  // Close popover on click outside\r\n  useOnClickOutside(ref, () => setState((state) => false));\r\n\r\n  return (\r\n      // @ts-ignore\r\n\r\n      <PopoverWrapper className={addAllClasses.join(' ')} ref={ref}>\r\n        <div className=\"popover-handler\" onClick={handleToggle}>\r\n          {handler}\r\n        </div>\r\n        {state && (\r\n            <div className=\"popover-content\">\r\n              {content && (\r\n                  <div className=\"inner-wrap\" onClick={handleToggle}>\r\n                    {content}\r\n                  </div>\r\n              )}\r\n            </div>\r\n        )}\r\n      </PopoverWrapper>\r\n  );\r\n};\r\n\r\nexport default Popover;\r\n"]},"metadata":{},"sourceType":"module"}