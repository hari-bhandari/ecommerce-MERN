{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\2012b\\\\WebstormProjects\\\\ecommerce-MERN\\\\client-new\\\\src\\\\components\\\\Layout\\\\store-nav\\\\store-nav.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport StoreNavWrapper, { StoreNavLinks } from './store-nav.style';\nimport useFetch from \"@/hooks/useFetch\";\nimport { API_BASE_URL } from \"@/utils/config\";\nimport NavLink from \"@/components/Layout/nav-link/nav-link\";\nimport { CategoryMobile } from \"@/components/Others/placeholder/placeholder\";\n\nvar StoreNav = function StoreNav(_ref) {\n  _s();\n\n  var className = _ref.className,\n      _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items;\n\n  var _useFetch = useFetch(\"\".concat(API_BASE_URL, \"/api/v1/category/\")),\n      _useFetch2 = _slicedToArray(_useFetch, 2),\n      data = _useFetch2[0],\n      isLoading = _useFetch2[1];\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(CategoryMobile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 20\n    }, _this);\n  }\n\n  if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(StoreNavWrapper, {\n      className: className,\n      children: /*#__PURE__*/_jsxDEV(StoreNavLinks, {\n        children: data === null || data === void 0 ? void 0 : data.data.map(function (item, index) {\n          return /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"store-nav-link\",\n            href: item.id,\n            label: item.name,\n            intlId: item.id,\n            dynamic: true\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, _this);\n  }\n};\n\n_s(StoreNav, \"NmgInhJWaAKMjGOtESybr3nPkRU=\", false, function () {\n  return [useFetch];\n});\n\n_c = StoreNav;\nexport default StoreNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreNav\");","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/components/Layout/store-nav/store-nav.tsx"],"names":["React","StoreNavWrapper","StoreNavLinks","useFetch","API_BASE_URL","NavLink","CategoryMobile","StoreNav","className","items","data","isLoading","map","item","index","id","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,IAA0BC,aAA1B,QAA+C,mBAA/C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,SAAQC,cAAR,QAAiE,6CAAjE;;AAOA,IAAMC,QAAgD,GAAG,SAAnDA,QAAmD,OAGnD;AAAA;;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,wBADJC,KACI;AAAA,MADJA,KACI,2BADI,EACJ;;AAAA,kBACsBN,QAAQ,WAAIC,YAAJ,uBAD9B;AAAA;AAAA,MACKM,IADL;AAAA,MACWC,SADX;;AAEF,MAAGA,SAAH,EAAa;AACL,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,aAAP;AACP;;AACD,MAAG,CAACA,SAAJ,EAAc;AACV,wBACI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEH,SAA5B;AAAA,6BACI,QAAC,aAAD;AAAA,kBACKE,IADL,aACKA,IADL,uBACKA,IAAI,CAAEA,IAAN,CAAWE,GAAX,CAAe,UAACC,IAAD,EAAOC,KAAP;AAAA,8BACZ,QAAC,OAAD;AACI,YAAA,SAAS,EAAC,gBADd;AAEI,YAAA,IAAI,EAAED,IAAI,CAACE,EAFf;AAGI,YAAA,KAAK,EAAEF,IAAI,CAACG,IAHhB;AAII,YAAA,MAAM,EAAEH,IAAI,CAACE,EAJjB;AAKI,YAAA,OAAO,EAAE;AALb,aAMSD,KANT;AAAA;AAAA;AAAA;AAAA,mBADY;AAAA,SAAf;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ;AAgBH;AAIJ,CA7BD;;GAAMP,Q;UAIsBJ,Q;;;KAJtBI,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport StoreNavWrapper, { StoreNavLinks } from './store-nav.style';\r\nimport useFetch from \"@/hooks/useFetch\";\r\nimport {API_BASE_URL} from \"@/utils/config\";\r\nimport NavLink from \"@/components/Layout/nav-link/nav-link\";\r\nimport {CategoryMobile, SidebarLoader, SidebarMobileLoader} from \"@/components/Others/placeholder/placeholder\";\r\n\r\ntype StoreNavProps = {\r\n  className?: string;\r\n  items?: any[];\r\n};\r\n\r\nconst StoreNav: React.FunctionComponent<StoreNavProps> = ({\r\n  className,\r\n  items = [],\r\n}) => {\r\n    const [data, isLoading]=useFetch(`${API_BASE_URL}/api/v1/category/`)\r\n    if(isLoading){\r\n            return <CategoryMobile/>\r\n    }\r\n    if(!isLoading){\r\n        return (\r\n            <StoreNavWrapper className={className}>\r\n                <StoreNavLinks>\r\n                    {data?.data.map((item, index) => (\r\n                        <NavLink\r\n                            className=\"store-nav-link\"\r\n                            href={item.id}\r\n                            label={item.name}\r\n                            intlId={item.id}\r\n                            dynamic={true}\r\n                            key={index}\r\n                        />\r\n                    ))}\r\n                </StoreNavLinks>\r\n            </StoreNavWrapper>\r\n        );\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport default StoreNav;\r\n"]},"metadata":{},"sourceType":"module"}