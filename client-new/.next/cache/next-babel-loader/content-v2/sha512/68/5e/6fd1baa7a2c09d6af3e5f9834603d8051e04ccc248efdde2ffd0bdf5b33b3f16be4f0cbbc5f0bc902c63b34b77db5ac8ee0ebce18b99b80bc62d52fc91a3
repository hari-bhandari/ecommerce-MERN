{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/header/menu/language-switcher/language-switcher.tsx\";\nimport React from 'react';\nimport { Box, SelectedItem, Flag, MenuItem } from './language-switcher.style';\nimport Popover from '../../../../../../pick/packages/shop/src/components/popover/popover';\nimport { FormattedMessage } from 'react-intl';\nimport * as flagIcons from '../../../assets/icons/flags';\nimport { useLocale } from '../../../../../../pick/packages/shop/src/contexts/language/language.provider';\nimport { LANGUAGE_MENU } from '../../../../../../pick/packages/shop/src/site-settings/site-navigation'; // @ts-ignore\n\nconst FlagIcon = ({\n  name\n}) => {\n  // @ts-ignore\n  const TagName = flagIcons[name];\n  return !!TagName ? /*#__PURE__*/_jsxDEV(TagName, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Invalid icon \", name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 36\n  }, this);\n}; // @ts-ignore\n\n\nconst LanguageMenu = ({\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: LANGUAGE_MENU.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClick,\n      value: item.id,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(FlagIcon, {\n          name: item.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: item.id,\n        defaultMessage: item.defaultMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\nconst LanguageSwitcher = () => {\n  const {\n    locale,\n    changeLanguage\n  } = useLocale();\n  const selectedLanguage = LANGUAGE_MENU.find(x => x.id === locale);\n\n  const languageChangeHandler = e => {\n    changeLanguage(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Popover, {\n      className: \"right\",\n      handler: /*#__PURE__*/_jsxDEV(SelectedItem, {\n        children: [/*#__PURE__*/_jsxDEV(Flag, {\n          children: /*#__PURE__*/_jsxDEV(FlagIcon, {\n            name: selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.id,\n            defaultMessage: selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.defaultMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this),\n      content: /*#__PURE__*/_jsxDEV(LanguageMenu, {\n        onClick: languageChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default LanguageSwitcher;","map":{"version":3,"sources":["/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/header/menu/language-switcher/language-switcher.tsx"],"names":["React","Box","SelectedItem","Flag","MenuItem","Popover","FormattedMessage","flagIcons","useLocale","LANGUAGE_MENU","FlagIcon","name","TagName","LanguageMenu","onClick","map","item","id","icon","defaultMessage","LanguageSwitcher","locale","changeLanguage","selectedLanguage","find","x","languageChangeHandler","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,IAA5B,EAAkCC,QAAlC,QAAkD,2BAAlD;AACA,OAAOC,OAAP,MAAoB,qEAApB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,6BAA3B;AACA,SAASC,SAAT,QAA0B,8EAA1B;AACA,SAASC,aAAT,QAA8B,wEAA9B,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B;AACA,QAAMC,OAAO,GAAGL,SAAS,CAACI,IAAD,CAAzB;AACA,SAAO,CAAC,CAACC,OAAF,gBAAY,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAZ,gBAA0B;AAAA,gCAAiBD,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjC;AACD,CAJD,C,CAMA;;;AACA,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACpC,sBACE;AAAA,cACGL,aAAa,CAACM,GAAd,CAAmBC,IAAD,iBACjB,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEF,OAAnB;AAA0C,MAAA,KAAK,EAAEE,IAAI,CAACC,EAAtD;AAAA,8BACE;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAED,IAAI,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,gBAAD;AAAkB,QAAA,EAAE,EAAEF,IAAI,CAACC,EAA3B;AAA+B,QAAA,cAAc,EAAED,IAAI,CAACG;AAApD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAAiCH,IAAI,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAYD,CAbD;;AAeA,MAAMG,gBAA8B,GAAG,MAAM;AAC3C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA6Bd,SAAS,EAA5C;AACA,QAAMe,gBAAgB,GAAGd,aAAa,CAACe,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACR,EAAF,KAASI,MAAnC,CAAzB;;AACA,QAAMK,qBAAqB,GAAIC,CAAD,IAAqC;AACjEL,IAAAA,cAAc,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAGA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,OAAD;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,OAAO,eACL,QAAC,YAAD;AAAA,gCACE,QAAC,IAAD;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEN,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEL;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE,QAAC,gBAAD;AACE,YAAA,EAAE,EAAEK,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEN,EADxB;AAEE,YAAA,cAAc,EAAEM,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEJ;AAFpC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAeE,MAAA,OAAO,eAAE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEO;AAAvB;AAAA;AAAA;AAAA;AAAA;AAfX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3BD;;AA6BA,eAAeN,gBAAf","sourcesContent":["import React from 'react';\nimport { Box, SelectedItem, Flag, MenuItem } from './language-switcher.style';\nimport Popover from '../../../../../../pick/packages/shop/src/components/popover/popover';\nimport { FormattedMessage } from 'react-intl';\nimport * as flagIcons from '../../../assets/icons/flags';\nimport { useLocale } from '../../../../../../pick/packages/shop/src/contexts/language/language.provider';\nimport { LANGUAGE_MENU } from '../../../../../../pick/packages/shop/src/site-settings/site-navigation';\n\n// @ts-ignore\nconst FlagIcon = ({ name }) => {\n  // @ts-ignore\n  const TagName = flagIcons[name];\n  return !!TagName ? <TagName /> : <p>Invalid icon {name}</p>;\n};\n\n// @ts-ignore\nconst LanguageMenu = ({ onClick }) => {\n  return (\n    <>\n      {LANGUAGE_MENU.map((item) => (\n        <MenuItem onClick={onClick} key={item.id} value={item.id}>\n          <span>\n            <FlagIcon name={item.icon} />\n          </span>\n          <FormattedMessage id={item.id} defaultMessage={item.defaultMessage} />\n        </MenuItem>\n      ))}\n    </>\n  );\n};\n\nconst LanguageSwitcher: React.FC<{}> = () => {\n  const { locale, changeLanguage } = useLocale();\n  const selectedLanguage = LANGUAGE_MENU.find((x) => x.id === locale);\n  const languageChangeHandler = (e: { target: { value: any; }; }) => {\n    changeLanguage(e.target.value);\n  };\n  return (\n    <Box>\n      <Popover\n        className=\"right\"\n        handler={\n          <SelectedItem>\n            <Flag>\n              <FlagIcon name={selectedLanguage?.icon} />\n            </Flag>\n            <span>\n              <FormattedMessage\n                id={selectedLanguage?.id}\n                defaultMessage={selectedLanguage?.defaultMessage}\n              />\n            </span>\n          </SelectedItem>\n        }\n        content={<LanguageMenu onClick={languageChangeHandler} />}\n      />\n    </Box>\n  );\n};\n\nexport default LanguageSwitcher;\n"]},"metadata":{},"sourceType":"module"}