{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/store-nav/store-nav.tsx\";\nimport React from 'react';\nimport StoreNavWrapper, { StoreNavLinks } from './store-nav.style';\nimport useFetch from \"@/hooks/useFetch\";\nimport { API_BASE_URL } from \"@/utils/config\";\nimport NavLink from \"@/components/nav-link/nav-link\";\n\nconst StoreNav = ({\n  className,\n  items = []\n}) => {\n  const [data, isLoading] = useFetch(`${API_BASE_URL}/api/v1/category/`);\n\n  if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(StoreNavWrapper, {\n      className: className,\n      children: /*#__PURE__*/_jsxDEV(StoreNavLinks, {\n        children: [data === null || data === void 0 ? void 0 : data.data.map((item, index) => /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"store-nav-link\",\n          href: item.href,\n          label: item.defaultMessage,\n          intlId: item.id,\n          dynamic: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)), \"d\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\nexport default StoreNav;","map":{"version":3,"sources":["/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/store-nav/store-nav.tsx"],"names":["React","StoreNavWrapper","StoreNavLinks","useFetch","API_BASE_URL","NavLink","StoreNav","className","items","data","isLoading","map","item","index","href","defaultMessage","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,IAA0BC,aAA1B,QAA+C,mBAA/C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAOC,OAAP,MAAoB,gCAApB;;AAOA,MAAMC,QAAgD,GAAG,CAAC;AACxDC,EAAAA,SADwD;AAExDC,EAAAA,KAAK,GAAG;AAFgD,CAAD,KAGnD;AACF,QAAM,CAACC,IAAD,EAAOC,SAAP,IAAkBP,QAAQ,CAAE,GAAEC,YAAa,mBAAjB,CAAhC;;AACA,MAAG,CAACM,SAAJ,EAAc;AACV,wBACI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEH,SAA5B;AAAA,6BACI,QAAC,aAAD;AAAA,mBACKE,IADL,aACKA,IADL,uBACKA,IAAI,CAAEA,IAAN,CAAWE,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACZ,QAAC,OAAD;AACI,UAAA,SAAS,EAAC,gBADd;AAEI,UAAA,IAAI,EAAED,IAAI,CAACE,IAFf;AAGI,UAAA,KAAK,EAAEF,IAAI,CAACG,cAHhB;AAII,UAAA,MAAM,EAAEH,IAAI,CAACI,EAJjB;AAKI,UAAA,OAAO,EAAE;AALb,WAMSH,KANT;AAAA;AAAA;AAAA;AAAA,gBADH,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AACD,SAAO,IAAP;AAGH,CA3BD;;AA6BA,eAAeP,QAAf","sourcesContent":["import React from 'react';\nimport StoreNavWrapper, { StoreNavLinks } from './store-nav.style';\nimport useFetch from \"@/hooks/useFetch\";\nimport {API_BASE_URL} from \"@/utils/config\";\nimport NavLink from \"@/components/nav-link/nav-link\";\n\ntype StoreNavProps = {\n  className?: string;\n  items?: any[];\n};\n\nconst StoreNav: React.FunctionComponent<StoreNavProps> = ({\n  className,\n  items = [],\n}) => {\n    const [data, isLoading]=useFetch(`${API_BASE_URL}/api/v1/category/`)\n    if(!isLoading){\n        return (\n            <StoreNavWrapper className={className}>\n                <StoreNavLinks>\n                    {data?.data.map((item, index) => (\n                        <NavLink\n                            className=\"store-nav-link\"\n                            href={item.href}\n                            label={item.defaultMessage}\n                            intlId={item.id}\n                            dynamic={true}\n                            key={index}\n                        />\n                    ))}\n                    d\n                </StoreNavLinks>\n            </StoreNavWrapper>\n        );\n    }\n    return null\n\n\n};\n\nexport default StoreNav;\n"]},"metadata":{},"sourceType":"module"}