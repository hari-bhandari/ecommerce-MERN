{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SHOP } from \"../defines\";\nimport useFetch from \"@/hooks/useFetch\";\nimport { API_BASE_URL } from \"@/utils/config\";\nexport var setSort = function setSort(sortType) {\n  return {\n    type: SHOP.SET_SORT,\n    sortType: sortType\n  };\n};\nexport var setSubCategory = function setSubCategory(subCategory) {\n  return {\n    type: SHOP.SET_SUBCATEGORY,\n    subCategory: subCategory\n  };\n};\nexport var setCategory = function setCategory(category) {\n  return {\n    type: SHOP.SET_CATEGORY,\n    category: category\n  };\n};\nexport var setCurrency = function setCurrency(currency) {\n  return {\n    type: SHOP.SET_CURRENCY,\n    currency: currency\n  };\n};\nexport var setDeliveryAddress = function setDeliveryAddress(address) {\n  return {\n    type: SHOP.SET_ADDRESS,\n    address: address\n  };\n};\nexport var setBilling = function setBilling(billing) {\n  return {\n    type: SHOP.SET_BILLING,\n    billing: billing\n  };\n};\nexport var setCARD = function setCARD(card) {\n  return {\n    type: SHOP.SET_CARD,\n    card: card\n  };\n};\nexport var setCurrencyData = function setCurrencyData() {\n  return /*#__PURE__*/function () {\n    var _s = $RefreshSig$();\n\n    var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _useFetch, _useFetch2, data, isLoading;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _s();\n\n              try {\n                _useFetch = useFetch(\"\".concat(API_BASE_URL, \"/api/v1/category/\")), _useFetch2 = _slicedToArray(_useFetch, 2), data = _useFetch2[0], isLoading = _useFetch2[1];\n                dispatch({\n                  type: SHOP.SET_CURRENCY_DATA,\n                  data: data,\n                  loading: isLoading\n                });\n              } catch (err) {\n                console.log(err);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }), \"NmgInhJWaAKMjGOtESybr3nPkRU=\", false, function () {\n      return [useFetch];\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; // export const setCurrencyData = () => async (dispatch:any) => {\n//\n//   try {\n//     const {data} = await axios.get(`https://api.twelvedata.com/exchange_rate?symbol=GBP/JPY,GBP/USD,GBP/EUR&apikey=5162d440a3334c558c253d678ed4802b`);\n//     dispatch({\n//       type: SHOP.SET_CURRENCY_DATA,\n//       data:data,\n//     })\n//\n//   } catch (err) {\n//     console.log(err)\n//   }\n// };","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/redux/actions/shopActions.ts"],"names":["SHOP","useFetch","API_BASE_URL","setSort","sortType","type","SET_SORT","setSubCategory","subCategory","SET_SUBCATEGORY","setCategory","category","SET_CATEGORY","setCurrency","currency","SET_CURRENCY","setDeliveryAddress","address","SET_ADDRESS","setBilling","billing","SET_BILLING","setCARD","card","SET_CARD","setCurrencyData","dispatch","data","isLoading","SET_CURRENCY_DATA","loading","err","console","log"],"mappings":";;;AAAA,SAAcA,IAAd,QAAyB,YAAzB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAKA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD;AAAA,SAAsB;AAC3CC,IAAAA,IAAI,EAAEL,IAAI,CAACM,QADgC;AAE3CF,IAAAA,QAAQ,EAARA;AAF2C,GAAtB;AAAA,CAAhB;AAKP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,WAAD;AAAA,SAAyB;AACrDH,IAAAA,IAAI,EAAEL,IAAI,CAACS,eAD0C;AAErDD,IAAAA,WAAW,EAAXA;AAFqD,GAAzB;AAAA,CAAvB;AAIP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAsB;AAC/CN,IAAAA,IAAI,EAAEL,IAAI,CAACY,YADoC;AAE/CD,IAAAA,QAAQ,EAARA;AAF+C,GAAtB;AAAA,CAApB;AAIP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAsB;AAC/CT,IAAAA,IAAI,EAAEL,IAAI,CAACe,YADoC;AAE/CD,IAAAA,QAAQ,EAARA;AAF+C,GAAtB;AAAA,CAApB;AAIP,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD;AAAA,SAAqB;AACrDZ,IAAAA,IAAI,EAAEL,IAAI,CAACkB,WAD0C;AAErDD,IAAAA,OAAO,EAAPA;AAFqD,GAArB;AAAA,CAA3B;AAIP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD;AAAA,SAAqB;AAC7Cf,IAAAA,IAAI,EAAEL,IAAI,CAACqB,WADkC;AAE7CD,IAAAA,OAAO,EAAPA;AAF6C,GAArB;AAAA,CAAnB;AAIP,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAkB;AACvClB,IAAAA,IAAI,EAAEL,IAAI,CAACwB,QAD4B;AAEvCD,IAAAA,IAAI,EAAJA;AAFuC,GAAlB;AAAA,CAAhB;AAMP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;;AAAA,2EAAM,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEnC,kBAAI;AAAA,4BACsBzB,QAAQ,WAAIC,YAAJ,uBAD9B,6CACKyB,IADL,kBACWC,SADX;AAEFF,gBAAAA,QAAQ,CAAC;AACPrB,kBAAAA,IAAI,EAAEL,IAAI,CAAC6B,iBADJ;AAEPF,kBAAAA,IAAI,EAACA,IAFE;AAGPG,kBAAAA,OAAO,EAACF;AAHD,iBAAD,CAAR;AAMD,eARD,CAQE,OAAOG,GAAP,EAAY;AACZC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AAZkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;AAAA,cAGH9B,QAHG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB,C,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {AUTH, SHOP} from \"../defines\";\r\nimport useFetch from \"@/hooks/useFetch\";\r\nimport {API_BASE_URL} from \"@/utils/config\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"@/redux/setAuthToken\";\r\n\r\n\r\nexport const setSort = (sortType:string) => ({\r\n  type: SHOP.SET_SORT,\r\n  sortType,\r\n});\r\n\r\nexport const setSubCategory = (subCategory:object) => ({\r\n  type: SHOP.SET_SUBCATEGORY,\r\n  subCategory,\r\n});\r\nexport const setCategory = (category:object) => ({\r\n  type: SHOP.SET_CATEGORY,\r\n  category,\r\n});\r\nexport const setCurrency = (currency:object) => ({\r\n  type: SHOP.SET_CURRENCY,\r\n  currency,\r\n});\r\nexport const setDeliveryAddress = (address:object) => ({\r\n  type: SHOP.SET_ADDRESS,\r\n  address,\r\n});\r\nexport const setBilling = (billing:object) => ({\r\n  type: SHOP.SET_BILLING,\r\n  billing,\r\n});\r\nexport const setCARD = (card:object) => ({\r\n  type: SHOP.SET_CARD,\r\n  card,\r\n});\r\n\r\n\r\nexport const setCurrencyData = () => async (dispatch:any) => {\r\n\r\n  try {\r\n    const [data, isLoading]=useFetch(`${API_BASE_URL}/api/v1/category/`)\r\n    dispatch({\r\n      type: SHOP.SET_CURRENCY_DATA,\r\n      data:data,\r\n      loading:isLoading\r\n    })\r\n\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n};\r\n// export const setCurrencyData = () => async (dispatch:any) => {\r\n//\r\n//   try {\r\n//     const {data} = await axios.get(`https://api.twelvedata.com/exchange_rate?symbol=GBP/JPY,GBP/USD,GBP/EUR&apikey=5162d440a3334c558c253d678ed4802b`);\r\n//     dispatch({\r\n//       type: SHOP.SET_CURRENCY_DATA,\r\n//       data:data,\r\n//     })\r\n//\r\n//   } catch (err) {\r\n//     console.log(err)\r\n//   }\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}