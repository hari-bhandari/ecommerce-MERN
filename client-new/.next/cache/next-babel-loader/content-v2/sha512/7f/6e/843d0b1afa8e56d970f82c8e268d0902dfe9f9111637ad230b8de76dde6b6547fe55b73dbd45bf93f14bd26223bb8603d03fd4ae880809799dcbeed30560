{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/tree-menu/tree-menu.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { usePrevious, useMeasure } from '../../assets/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './tree-menu.style';\nimport { Button } from 'components/button/button';\nimport { ArrowNext } from 'assets/icons/ArrowNext';\nimport * as Icons from 'assets/icons/category-icons';\nvar Tree = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  var children = _ref.children,\n      name = _ref.name,\n      icon = _ref.icon,\n      onClick = _ref.onClick,\n      dropdown = _ref.dropdown,\n      onToggleBtnClick = _ref.onToggleBtnClick,\n      depth = _ref.depth,\n      _ref$defaultOpen = _ref.defaultOpen,\n      defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen;\n\n  var _useState = useState(defaultOpen),\n      isOpen = _useState[0],\n      setOpen = _useState[1];\n\n  useEffect(function () {\n    setOpen(defaultOpen);\n  }, [defaultOpen]);\n  var previous = usePrevious(isOpen);\n\n  var _useMeasure = useMeasure(),\n      _useMeasure2 = _slicedToArray(_useMeasure, 2),\n      bind = _useMeasure2[0],\n      viewHeight = _useMeasure2[1].height;\n\n  var _useSpring = useSpring({\n    from: {\n      height: 0,\n      opacity: 0,\n      transform: 'translate3d(20px,0,0)'\n    },\n    to: {\n      height: isOpen ? viewHeight : 0,\n      opacity: isOpen ? 1 : 0,\n      transform: \"translate3d(\".concat(isOpen ? 0 : 20, \"px,0,0)\")\n    }\n  }),\n      height = _useSpring.height,\n      opacity = _useSpring.opacity,\n      transform = _useSpring.transform; // const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n  // @ts-ignore\n\n\n  var Icon = icon ? Icons[icon] : null;\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    depth: depth,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      open: isOpen,\n      depth: depth,\n      className: depth,\n      children: [Icon !== null && /*#__PURE__*/_jsxDEV(IconWrapper, {\n        depth: depth,\n        children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(Title, {\n        onClick: onClick,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, _this), dropdown === true && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick() {\n          return setOpen(!isOpen);\n        },\n        variant: \"text\",\n        className: \"toggleButton\",\n        children: /*#__PURE__*/_jsxDEV(ArrowNext, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        opacity: opacity,\n        height: isOpen && previous === isOpen ? 'auto' : height\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, _objectSpread(_objectSpread({\n        style: {\n          transform: transform\n        }\n      }, bind), {}, {\n        children: children\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, _this);\n}, \"A45YNx3uNae02YafACmgCxWEFMQ=\", false, function () {\n  return [usePrevious, useMeasure, useSpring];\n}));\n_c2 = Tree;\nexport var TreeMenu = function TreeMenu(_ref2) {\n  var data = _ref2.data,\n      className = _ref2.className,\n      _onClick = _ref2.onClick,\n      active = _ref2.active;\n\n  var handler = function handler(children) {\n    console.log({\n      children: children\n    });\n    return children.map(function (subOption) {\n      if (subOption.subCategory.length > 0) {\n        return /*#__PURE__*/_jsxDEV(Tree, {\n          name: subOption.name,\n          icon: subOption.image,\n          depth: \"child\",\n          onClick: function onClick() {\n            return _onClick(subOption.id);\n          },\n          defaultOpen: active === subOption.id\n        }, subOption.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, _this);\n      } // return (\n      //     <Tree\n      //         key={subOption.id}\n      //         name={subOption.name}\n      //         icon={subOption.image}\n      //         dropdown={!subOption.subCategory.length ? false : true}\n      //         depth='parent'\n      //         onClick={() => onClick(subOption.slug)}\n      //         defaultOpen={\n      //             active === subOption.slug ||\n      //             subOption.children.some((item:any) => item.slug === active)\n      //         }\n      //     >\n      //         {handler(subOption.children)}\n      //     </Tree>\n      // );\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: handler(data.data)\n  }, void 0, false);\n};\n_c3 = TreeMenu;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Tree$React.memo\");\n$RefreshReg$(_c2, \"Tree\");\n$RefreshReg$(_c3, \"TreeMenu\");","map":{"version":3,"sources":["/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/tree-menu/tree-menu.tsx"],"names":["React","useState","useEffect","usePrevious","useMeasure","useSpring","animated","Frame","Title","Content","Header","IconWrapper","Button","ArrowNext","Icons","Tree","memo","children","name","icon","onClick","dropdown","onToggleBtnClick","depth","defaultOpen","isOpen","setOpen","previous","bind","viewHeight","height","from","opacity","transform","to","Icon","TreeMenu","data","className","active","handler","console","log","map","subOption","subCategory","length","image","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { usePrevious, useMeasure } from '../../assets/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './tree-menu.style';\nimport { Button } from 'components/button/button';\nimport { ArrowNext } from 'assets/icons/ArrowNext';\n\nimport * as Icons from 'assets/icons/category-icons';\nconst Tree = React.memo(\n    ({\n         children,\n         name,\n         icon,\n         // isOpen,\n         onClick,\n         dropdown,\n         onToggleBtnClick,\n         depth,\n         defaultOpen = false,\n     }: any) => {\n        const [isOpen, setOpen] = useState(defaultOpen);\n        useEffect(() => {\n            setOpen(defaultOpen);\n        }, [defaultOpen]);\n        const previous = usePrevious(isOpen);\n        const [bind, { height: viewHeight }] = useMeasure();\n        const { height, opacity, transform } = useSpring<any>({\n            from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\n            to: {\n                height: isOpen ? viewHeight : 0,\n                opacity: isOpen ? 1 : 0,\n                transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`,\n            },\n        });\n        // const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n        // @ts-ignore\n        const Icon = icon ? Icons[icon] : null;\n        return (\n            <Frame depth={depth}>\n                <Header open={isOpen} depth={depth} className={depth}>\n                    {Icon !== null && (\n                        <IconWrapper depth={depth}>\n                            <Icon />\n                        </IconWrapper>\n                    )}\n                    <Title onClick={onClick}>{name}</Title>\n\n                    {dropdown === true && (\n                        <Button\n                            onClick={() => setOpen(!isOpen)}\n                            variant='text'\n                            className='toggleButton'\n                        >\n                            <ArrowNext  />\n                        </Button>\n                    )}\n                </Header>\n                <Content\n                    style={{\n                        opacity,\n                        height: isOpen && previous === isOpen ? 'auto' : height,\n                    }}\n                >\n                    <animated.div style={{ transform }} {...bind} children={children} />\n                </Content>\n            </Frame>\n        );\n    }\n);\n\ntype Props = {\n    className?: any;\n    data: any;\n    onClick: (slug: string) => void;\n    active?: string | string[];\n};\nexport const TreeMenu: React.FC<Props> = ({\n                                              data,\n                                              className,\n                                              onClick,\n                                              active,\n                                          }) => {\n    const handler = (children:any) => {\n        console.log({children})\n        return children.map((subOption:any) => {\n            if (subOption.subCategory.length>0) {\n                return (\n                    <Tree\n                        key={subOption.id}\n                        name={subOption.name}\n                        icon={subOption.image}\n                        depth='child'\n                        onClick={() => onClick(subOption.id)}\n                        defaultOpen={active === subOption.id}\n                    />\n                );\n            }\n            // return (\n            //     <Tree\n            //         key={subOption.id}\n            //         name={subOption.name}\n            //         icon={subOption.image}\n            //         dropdown={!subOption.subCategory.length ? false : true}\n            //         depth='parent'\n            //         onClick={() => onClick(subOption.slug)}\n            //         defaultOpen={\n            //             active === subOption.slug ||\n            //             subOption.children.some((item:any) => item.slug === active)\n            //         }\n            //     >\n            //         {handler(subOption.children)}\n            //     </Tree>\n            // );\n        });\n    };\n    return <>{handler(data.data)}</>;\n};\n"]},"metadata":{},"sourceType":"module"}