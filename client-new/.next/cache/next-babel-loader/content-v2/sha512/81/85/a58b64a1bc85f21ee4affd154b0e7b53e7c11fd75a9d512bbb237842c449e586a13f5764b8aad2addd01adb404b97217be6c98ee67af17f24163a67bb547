{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/header/search/suggestionPopup.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from \"@/components/popover/useOnClickOutside\";\nimport PopoverWrapper from \"./popup.style\";\n\nconst SuggestionPopup = ({\n  className,\n  content\n}) => {\n  // Popover State\n  const {\n    0: state,\n    1: setState\n  } = useState(true); // Ref\n\n  const ref = useRef(); // Add all classs to an array\n\n  const addAllClasses = ['popover-wrapper', 'left']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  } // Toggle Popover content\n\n\n  const handleToggle = e => {\n    e.stopPropagation();\n    setState(state => !state);\n  }; // Handle document click\n\n\n  const handleDocumentClick = e => {\n    e.stopPropagation();\n\n    if (state) {\n      handleToggle(e);\n    }\n  }; // Handle window event listener\n\n\n  useEffect(() => {\n    window.addEventListener('click', handleDocumentClick);\n    return () => {\n      window.removeEventListener('click', handleDocumentClick);\n    };\n  }); // Close popover on click outside\n\n  useOnClickOutside(ref, () => setState(state => false));\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    _jsxDEV(PopoverWrapper, {\n      className: addAllClasses.join(' '),\n      ref: ref,\n      children: state && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popover-content\",\n        children: content && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner-wrap\",\n          onClick: handleToggle,\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  );\n};\n\nexport default SuggestionPopup;","map":{"version":3,"sources":["/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/header/search/suggestionPopup.tsx"],"names":["React","useState","useEffect","useRef","useOnClickOutside","PopoverWrapper","SuggestionPopup","className","content","state","setState","ref","addAllClasses","push","handleToggle","e","stopPropagation","handleDocumentClick","window","addEventListener","removeEventListener","join"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,cAAP,MAA2B,eAA3B;;AAOA,MAAMC,eAAuC,GAAG,CAAC;AACJC,EAAAA,SADI;AAEJC,EAAAA;AAFI,CAAD,KAGD;AAC3C;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,IAAD,CAAlC,CAF2C,CAI3C;;AACA,QAAMU,GAAG,GAAGR,MAAM,EAAlB,CAL2C,CAO3C;;AACA,QAAMS,aAAuB,GAAG,CAAC,iBAAD,EAAmB,MAAnB,CAAhC,CAR2C,CAU3C;;AACA,MAAIL,SAAJ,EAAe;AACXK,IAAAA,aAAa,CAACC,IAAd,CAAmBN,SAAnB;AAEH,GAd0C,CAiB3C;;;AACA,QAAMO,YAAY,GAAIC,CAAD,IAAW;AAC5BA,IAAAA,CAAC,CAACC,eAAF;AACAN,IAAAA,QAAQ,CAAED,KAAD,IAAW,CAACA,KAAb,CAAR;AACH,GAHD,CAlB2C,CAuB3C;;;AACA,QAAMQ,mBAAmB,GAAIF,CAAD,IAAyC;AACjEA,IAAAA,CAAC,CAACC,eAAF;;AACA,QAAIP,KAAJ,EAAW;AACPK,MAAAA,YAAY,CAACC,CAAD,CAAZ;AACH;AACJ,GALD,CAxB2C,CA+B3C;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,mBAAjC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,mBAApC;AACH,KAFD;AAGH,GALQ,CAAT,CAhC2C,CAuC3C;;AACAb,EAAAA,iBAAiB,CAACO,GAAD,EAAM,MAAMD,QAAQ,CAAED,KAAD,IAAW,KAAZ,CAApB,CAAjB;AAEA;AAAA;AACI;AAEA,YAAC,cAAD;AAAgB,MAAA,SAAS,EAAEG,aAAa,CAACS,IAAd,CAAmB,GAAnB,CAA3B;AAAoD,MAAA,GAAG,EAAEV,GAAzD;AAAA,gBACKF,KAAK,iBACF;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACKD,OAAO,iBACJ;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,OAAO,EAAEM,YAArC;AAAA,oBACKN;AADL;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AAHJ;AAeH,CA5DD;;AA8DA,eAAeF,eAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from \"@/components/popover/useOnClickOutside\";\nimport PopoverWrapper from \"./popup.style\";\ntype PopoverProps = {\n    className?: string;\n    content: React.ReactNode;\n    handleToggle?: () => void;\n};\n\nconst SuggestionPopup: React.FC<PopoverProps> = ({\n                                             className,\n                                             content,\n                                         }) => {\n    // Popover State\n    const [state, setState] = useState(true);\n\n    // Ref\n    const ref = useRef();\n\n    // Add all classs to an array\n    const addAllClasses: string[] = ['popover-wrapper','left'];\n\n    // className prop checking\n    if (className) {\n        addAllClasses.push(className);\n\n    }\n\n\n    // Toggle Popover content\n    const handleToggle = (e:any) => {\n        e.stopPropagation();\n        setState((state) => !state);\n    };\n\n    // Handle document click\n    const handleDocumentClick = (e: { stopPropagation: () => void; }) => {\n        e.stopPropagation();\n        if (state) {\n            handleToggle(e);\n        }\n    };\n\n    // Handle window event listener\n    useEffect(() => {\n        window.addEventListener('click', handleDocumentClick);\n        return () => {\n            window.removeEventListener('click', handleDocumentClick);\n        };\n    });\n\n    // Close popover on click outside\n    useOnClickOutside(ref, () => setState((state) => false));\n\n    return (\n        // @ts-ignore\n\n        <PopoverWrapper className={addAllClasses.join(' ')} ref={ref}>\n            {state && (\n                <div className=\"popover-content\">\n                    {content && (\n                        <div className=\"inner-wrap\" onClick={handleToggle}>\n                            {content}\n                        </div>\n                    )}\n                </div>\n            )}\n        </PopoverWrapper>\n    );\n};\n\nexport default SuggestionPopup;\n"]},"metadata":{},"sourceType":"module"}