{"ast":null,"code":"import _defineProperty from \"/Users/hari/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/header/search/search.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { SearchBox } from '../../components/search-box/search-box';\nimport { useRouter } from 'next/router';\n\nvar Search = function Search(props) {\n  _s();\n\n  var _useState = useState(''),\n      search = _useState[0],\n      setSearch = _useState[1];\n\n  var router = useRouter();\n\n  var handleOnChange = function handleOnChange(e) {\n    var value = e.target.value;\n    setSearch(value);\n  };\n\n  var query = router.query;\n\n  var onSearch = function onSearch(e) {\n    e.preventDefault();\n    var type = query.type;\n  };\n\n  return /*#__PURE__*/_jsxDEV(SearchBox, _objectSpread({\n    onEnter: onSearch,\n    onChange: handleOnChange,\n    name: \"search\",\n    value: search,\n    placeholder: \"Search your products from here\",\n    categoryType: query.type || 'grocery',\n    buttonText: \"Search\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Search, \"HXlUVp06sQ7XVnsmiuxAIcXUyng=\", false, function () {\n  return [useRouter];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/header/search/search.tsx"],"names":["React","useState","SearchBox","useRouter","Search","props","search","setSearch","router","handleOnChange","e","value","target","query","onSearch","preventDefault","type"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,wCAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAUA,IAAMC,MAAuB,GAAG,SAA1BA,MAA0B,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACjBJ,QAAQ,CAAS,EAAT,CADS;AAAA,MACnCK,MADmC;AAAA,MAC5BC,SAD4B;;AAEzC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AAEA,MAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAqC;AAAA,QAClDC,KADkD,GACxCD,CAAC,CAACE,MADsC,CAClDD,KADkD;AAE1DJ,IAAAA,SAAS,CAACI,KAAD,CAAT;AACD,GAHD;;AAJyC,MAQhCE,KARgC,GAQtBL,MARsB,CAQhCK,KARgC;;AASzC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACJ,CAAD,EAAwC;AACvDA,IAAAA,CAAC,CAACK,cAAF;AADuD,QAE/CC,IAF+C,GAEtCH,KAFsC,CAE/CG,IAF+C;AAGxD,GAHD;;AAIA,sBACE,QAAC,SAAD;AACE,IAAA,OAAO,EAAEF,QADX;AAEE,IAAA,QAAQ,EAAEL,cAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEH,MAJT;AAKE,IAAA,WAAW,EAAE,gCALf;AAME,IAAA,YAAY,EAAEO,KAAK,CAACG,IAAN,IAAc,SAN9B;AAOE,IAAA,UAAU,EAAC;AAPb,KAQMX,KARN;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CAzBD;;GAAMD,M;UAEWD,S;;;KAFXC,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport { SearchBox } from '../../components/search-box/search-box';\nimport { useRouter } from 'next/router';\n\ninterface Props {\n  minimal?: boolean;\n  showButtonText?: boolean;\n  onSubmit?: () => void;\n  [key: string]: unknown;\n}\n\n\nconst Search: React.FC<Props> = (props) => {\n  const[search,setSearch]=useState<string>('')\n  const router = useRouter();\n\n  const handleOnChange = (e: { target: { value: any; }; }) => {\n    const { value } = e.target;\n    setSearch(value)\n  };\n  const {  query } = router;\n  const onSearch = (e: { preventDefault: () => void; }) => {\n    e.preventDefault();\n    const { type } = query;\n  };\n  return (\n    <SearchBox\n      onEnter={onSearch}\n      onChange={handleOnChange}\n      name=\"search\"\n      value={search}\n      placeholder= 'Search your products from here'\n      categoryType={query.type || 'grocery'}\n      buttonText='Search'\n      {...props}\n    />\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}