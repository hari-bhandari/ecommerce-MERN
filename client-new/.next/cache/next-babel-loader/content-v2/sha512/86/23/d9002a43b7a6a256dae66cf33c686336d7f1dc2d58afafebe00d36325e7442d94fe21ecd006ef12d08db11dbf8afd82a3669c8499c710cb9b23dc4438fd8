{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\2012b\\\\WebstormProjects\\\\ecommerce-MERN\\\\client-new\\\\src\\\\features\\\\carts\\\\cart-popup.tsx\";\nimport React, { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport Cart from './cart';\nimport CartPopupButton, { BoxedCartButton } from '@/components/cart/popup/cart-popup-button';\nimport { CartSlidePopup } from './cart.style';\nimport { useSelector } from \"react-redux\";\nimport { calculateTotalPrice } from \"../../utils/cartUtils\";\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup {\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: 3px 3px 5px 6px #23ff00;;\n    transform-origin: bottom right;\n\n\n    @media (max-width: 580px) {\n      max-width: none !important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0 !important;\n      background: ${themeGet('colors.white', '#ffffff')};\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n`;\n\nconst CartPopUp = ({\n  deviceType: {\n    mobile,\n    tablet,\n    desktop\n  }\n}) => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const cartState = useSelector(state => state.cartReducer);\n\n  const handleModal = () => {\n    openCaer;\n  };\n\n  let cartSliderClass = isOpen ? 'cartPopupFixed' : '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: mobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartPopupStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(CartPopupButton, {\n        className: \"product-cart\",\n        itemCount: cartState.length,\n        itemPostfix: cartState.length > 1 ? \"items\" : \"item\",\n        price: calculateTotalPrice(cartState),\n        pricePrefix: \"\\xA3\",\n        onClick: handleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartSlidePopup, {\n        className: cartSliderClass,\n        children: isOpen && /*#__PURE__*/_jsxDEV(Cart, {\n          onCloseBtnClick: () => {\n            setIsOpen(false);\n          },\n          scrollbarHeight: \"100vh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(BoxedCartButton, {\n        className: \"product-cart\",\n        itemCount: cartState.length,\n        itemPostfix: cartState.length > 1 ? 'items' : \"item\",\n        price: calculateTotalPrice(cartState),\n        pricePrefix: \"£\",\n        onClick: () => {\n          setIsOpen(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\nexport default CartPopUp;","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/features/carts/cart-popup.tsx"],"names":["React","useState","createGlobalStyle","themeGet","Cart","CartPopupButton","BoxedCartButton","CartSlidePopup","useSelector","calculateTotalPrice","CartPopupStyle","CartPopUp","deviceType","mobile","tablet","desktop","isOpen","setIsOpen","cartState","state","cartReducer","handleModal","openCaer","cartSliderClass","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,eAAP,IACEC,eADF,QAEO,2CAFP;AAGA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,mBAAR,QAAkC,uBAAlC;AACA,MAAMC,cAAc,GAAGR,iBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBC,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAA4B;AACxD;AACA;AACA;AACA;AACA,CApBA;;AA6BA,MAAMQ,SAA8B,GAAG,CAAC;AACEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB;AADd,CAAD,KAEO;AAC5C,QAAM;AAAA,OAACC,MAAD;AAAA,OAAQC;AAAR,MAAmBhB,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAMiB,SAAS,GAAGV,WAAW,CAAEW,KAAD,IAAeA,KAAK,CAACC,WAAtB,CAA7B;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,QAAQ;AACT,GAFD;;AAIA,MAAIC,eAAe,GAAGP,MAAM,GAAG,gBAAH,GAAsB,EAAlD;AAEA,sBACI;AAAA,cACGH,MAAM,gBACH;AAAA,8BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,SAAS,EAAEK,SAAS,CAACM,MAFzB;AAGI,QAAA,WAAW,EACTN,SAAS,CAACM,MAAV,GAAmB,CAAnB,GACI,OADJ,GAGI,MAPV;AAUI,QAAA,KAAK,EAAEf,mBAAmB,CAACS,SAAD,CAV9B;AAWI,QAAA,WAAW,EAAC,MAXhB;AAYI,QAAA,OAAO,EAAEG;AAZb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADG,gBAmBH;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEE,eAA3B;AAAA,kBACGP,MAAM,iBACH,QAAC,IAAD;AAAM,UAAA,eAAe,EAAE,MAAI;AAACC,YAAAA,SAAS,CAAC,KAAD,CAAT;AAAiB,WAA7C;AAA+C,UAAA,eAAe,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,eAAD;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,SAAS,EAAEC,SAAS,CAACM,MAFzB;AAGI,QAAA,WAAW,EACTN,SAAS,CAACM,MAAV,GAAmB,CAAnB,GACI,OADJ,GAEI,MANV;AASI,QAAA,KAAK,EAAEf,mBAAmB,CAACS,SAAD,CAT9B;AAUI,QAAA,WAAW,EAAE,GAVjB;AAWI,QAAA,OAAO,EAAE,MAAI;AAACD,UAAAA,SAAS,CAAC,IAAD,CAAT;AAAgB;AAXlC;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AApBN,mBADJ;AA6CD,CAzDD;;AA2DA,eAAeN,SAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\nimport { openModal, closeModal } from '@redq/reuse-modal';\r\nimport Cart from './cart';\r\nimport CartPopupButton, {\r\n  BoxedCartButton,\r\n} from '@/components/cart/popup/cart-popup-button';\r\nimport { CartSlidePopup } from './cart.style';\r\nimport {useSelector} from \"react-redux\";\r\nimport {calculateTotalPrice} from \"../../utils/cartUtils\";\r\nconst CartPopupStyle = createGlobalStyle`\r\n  .cartPopup {\r\n    top: auto !important;\r\n    left: auto !important;\r\n    bottom: 50px !important;\r\n    right: 50px !important;\r\n    box-shadow: 3px 3px 5px 6px #23ff00;;\r\n    transform-origin: bottom right;\r\n\r\n\r\n    @media (max-width: 580px) {\r\n      max-width: none !important;\r\n      width: 100% !important;\r\n      bottom: 0 !important;\r\n      left: 0 !important;\r\n      background: ${themeGet('colors.white', '#ffffff')};\r\n      overflow: initial !important;\r\n      transform-origin: bottom center;\r\n    }\r\n  }\r\n`;\r\ntype CartProps = {\r\n  deviceType: {\r\n    mobile: boolean;\r\n    tablet: boolean;\r\n    desktop: boolean;\r\n  };\r\n};\r\n\r\nconst CartPopUp: React.FC<CartProps> = ({\r\n                                          deviceType: { mobile, tablet, desktop },\r\n                                        }) => {\r\n  const [isOpen,setIsOpen]=useState(false);\r\n  const cartState = useSelector((state:any) => state.cartReducer);\r\n\r\n  const handleModal = () => {\r\n    openCaer\r\n  };\r\n\r\n  let cartSliderClass = isOpen ? 'cartPopupFixed' : '';\r\n\r\n  return (\r\n      <>\r\n        {mobile ? (\r\n            <>\r\n              <CartPopupStyle />\r\n              <CartPopupButton\r\n                  className='product-cart'\r\n                  itemCount={cartState.length}\r\n                  itemPostfix={\r\n                    cartState.length > 1 ? (\r\n                        \"items\"\r\n                    ) : (\r\n                        \"item\"\r\n                    )\r\n                  }\r\n                  price={calculateTotalPrice(cartState)}\r\n                  pricePrefix='£'\r\n                  onClick={handleModal}\r\n              />\r\n            </>\r\n        ) : (\r\n            <>\r\n              <CartSlidePopup className={cartSliderClass}>\r\n                {isOpen && (\r\n                    <Cart onCloseBtnClick={()=>{setIsOpen(false)}} scrollbarHeight='100vh' />\r\n                )}\r\n              </CartSlidePopup>\r\n\r\n              <BoxedCartButton\r\n                  className='product-cart'\r\n                  itemCount={cartState.length}\r\n                  itemPostfix={\r\n                    cartState.length > 1 ? (\r\n                        'items'                    ) : (\r\n                        \"item\"\r\n                    )\r\n                  }\r\n                  price={calculateTotalPrice(cartState)}\r\n                  pricePrefix={\"£\"}\r\n                  onClick={()=>{setIsOpen(true)}}\r\n              />\r\n            </>\r\n        )}\r\n      </>\r\n  );\r\n};\r\n\r\nexport default CartPopUp;\r\n"]},"metadata":{},"sourceType":"module"}