{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/tree-menu/tree-menu.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { usePrevious, useMeasure } from '../../assets/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './tree-menu.style';\nimport * as Icons from 'assets/icons/category-icons';\nconst Tree = /*#__PURE__*/React.memo(({\n  children,\n  name,\n  icon,\n  isOpen,\n  onClick,\n  depth,\n  defaultOpen = false\n}) => {\n  const previous = usePrevious(isOpen);\n  const [bind, {\n    height: viewHeight\n  }] = useMeasure();\n  const {\n    height,\n    opacity,\n    transform\n  } = useSpring({\n    from: {\n      height: 0,\n      opacity: 0,\n      transform: 'translate3d(20px,0,0)'\n    },\n    to: {\n      height: isOpen ? viewHeight : 0,\n      opacity: isOpen ? 1 : 0,\n      transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`\n    }\n  }); // @ts-ignore\n\n  const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    depth: depth,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      open: isOpen,\n      depth: depth,\n      className: depth,\n      children: [Icon !== null && /*#__PURE__*/_jsxDEV(IconWrapper, {\n        depth: depth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        onClick: onClick,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        opacity,\n        height: isOpen && previous === isOpen ? 'auto' : height\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, _objectSpread(_objectSpread({\n        style: {\n          transform\n        }\n      }, bind), {}, {\n        children: children\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n});\nexport const TreeMenu = ({\n  data,\n  onClick,\n  active\n}) => {\n  const handler = children => {\n    return children.map(subOption => {\n      if (!subOption.children) {\n        return /*#__PURE__*/_jsxDEV(Tree, {\n          name: subOption.title,\n          icon: subOption.icon,\n          depth: \"child\",\n          onClick: () => onClick(subOption.slug),\n          isOpen: active === subOption.slug\n        }, subOption.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tree, {\n        name: subOption.title,\n        icon: subOption.icon,\n        depth: \"parent\",\n        onClick: () => onClick(subOption.slug),\n        isOpen: active === subOption.slug || subOption.children.some(item => item.slug === active),\n        children: handler(subOption.children)\n      }, subOption.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: handler(data)\n  }, void 0, false);\n};","map":{"version":3,"sources":["/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/tree-menu/tree-menu.tsx"],"names":["React","usePrevious","useMeasure","useSpring","animated","Frame","Title","Content","Header","IconWrapper","Icons","Tree","memo","children","name","icon","isOpen","onClick","depth","defaultOpen","previous","bind","height","viewHeight","opacity","transform","from","to","Icon","TreeMenu","data","active","handler","map","subOption","title","slug","some","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { usePrevious, useMeasure } from '../../assets/hooks';\nimport { useSpring, animated } from 'react-spring';\nimport { Frame, Title, Content, Header, IconWrapper } from './tree-menu.style';\nimport * as Icons from 'assets/icons/category-icons';\nconst Tree = React.memo(\n  ({\n    children,\n    name,\n    icon,\n    isOpen,\n    onClick,\n    depth,\n    defaultOpen = false,\n  }: any) => {\n    const previous = usePrevious(isOpen);\n    const [bind, { height: viewHeight }] = useMeasure();\n    const { height, opacity, transform } = useSpring<any>({\n      from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\n      to: {\n        height: isOpen ? viewHeight : 0,\n        opacity: isOpen ? 1 : 0,\n        transform: `translate3d(${isOpen ? 0 : 20}px,0,0)`,\n      },\n    });\n    // @ts-ignore\n      const Icon = icon ? Icons[icon] : depth === 'child' ? Icons['Minus'] : null;\n    return (\n      <Frame depth={depth}>\n        <Header open={isOpen} depth={depth} className={depth}>\n          {Icon !== null && (\n            <IconWrapper depth={depth}>\n              {/*<Icon />*/}\n            </IconWrapper>\n          )}\n          <Title onClick={onClick}>{name}</Title>\n        </Header>\n        <Content\n          style={{\n            opacity,\n            height: isOpen && previous === isOpen ? 'auto' : height,\n          }}\n        >\n          <animated.div style={{ transform }} {...bind} children={children} />\n        </Content>\n      </Frame>\n    );\n  }\n);\n\ntype Props = {\n  className?: any;\n  data: any;\n  onClick: (slug: string) => void;\n  active: string | string[]|any;\n};\nexport const TreeMenu: React.FC<Props> = ({\n  data,\n  onClick,\n  active,\n}) => {\n  const handler = (children: any[]) => {\n    return children.map((subOption) => {\n      if (!subOption.children) {\n        return (\n          <Tree\n            key={subOption.title}\n            name={subOption.title}\n            icon={subOption.icon}\n            depth=\"child\"\n            onClick={() => onClick(subOption.slug)}\n            isOpen={active === subOption.slug}\n          />\n        );\n      }\n      return (\n        <Tree\n          key={subOption.title}\n          name={subOption.title}\n          icon={subOption.icon}\n          depth=\"parent\"\n          onClick={() => onClick(subOption.slug)}\n          isOpen={\n            active === subOption.slug ||\n            subOption.children.some((item: { slug: string | string[]; }) => item.slug === active)\n          }\n        >\n          {handler(subOption.children)}\n        </Tree>\n      );\n    });\n  };\n  return <>{handler(data)}</>;\n};\n"]},"metadata":{},"sourceType":"module"}