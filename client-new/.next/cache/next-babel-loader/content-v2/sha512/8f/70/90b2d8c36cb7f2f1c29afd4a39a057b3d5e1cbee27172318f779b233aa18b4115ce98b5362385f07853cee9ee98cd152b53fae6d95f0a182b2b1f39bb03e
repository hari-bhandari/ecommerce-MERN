{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/header/sidebar/sidebar.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Popover from 'components/popover/popover';\nimport { ArrowDropDown } from 'assets/icons/ArrowDropDown';\nimport { CategoryIcon } from 'assets/icons/CategoryIcon';\nimport { SidebarMobileLoader, SidebarLoader } from 'components/placeholder/placeholder';\nimport { CategoryWrapper, PopoverHandler, PopoverWrapper } from './sidebar.style';\nimport { TreeMenu } from 'components/tree-menu/tree-menu';\nimport useFetch from \"@/hooks/useFetch\";\nimport { API_BASE_URL } from \"@/utils/config\";\n\nvar SidebarCategory = function SidebarCategory(_ref) {\n  _s();\n\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop;\n\n  var _useFetch = useFetch(\"\".concat(API_BASE_URL, \"/api/v1/category/sub\")),\n      _useFetch2 = _slicedToArray(_useFetch, 2),\n      data = _useFetch2[0],\n      isLoading = _useFetch2[1];\n\n  var router = useRouter();\n  var pathname = router.pathname,\n      query = router.query;\n  var selectedQueries = query.category;\n\n  var onCategoryClick = function onCategoryClick(slug) {\n    var type = query.type,\n        rest = _objectWithoutProperties(query, [\"type\"]);\n\n    if (type) {\n      router.push({\n        pathname: pathname,\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          category: slug\n        })\n      }, {\n        pathname: \"/\".concat(type),\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          category: slug\n        })\n      });\n    } else {\n      router.push({\n        pathname: pathname,\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          category: slug\n        })\n      });\n    }\n  };\n\n  var isSidebarSticky = true;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SidebarMobileLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, _this);\n  }\n\n  if (!data) {\n    if (mobile || tablet) {\n      return /*#__PURE__*/_jsxDEV(SidebarMobileLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(SidebarLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CategoryWrapper, {\n    children: /*#__PURE__*/_jsxDEV(PopoverWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Popover, {\n        handler: /*#__PURE__*/_jsxDEV(PopoverHandler, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CategoryIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, _this), \"Select your Category\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ArrowDropDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, _this),\n        className: \"category-popover\",\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TreeMenu, {\n            data: data,\n            onClick: onCategoryClick,\n            active: selectedQueries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(SidebarCategory, \"YBy9UepPgkqek6JgtihFn6AoHKE=\", false, function () {\n  return [useFetch, useRouter];\n});\n\n_c = SidebarCategory;\nexport default SidebarCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarCategory\");","map":{"version":3,"sources":["/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/header/sidebar/sidebar.tsx"],"names":["React","useRouter","Popover","ArrowDropDown","CategoryIcon","SidebarMobileLoader","SidebarLoader","CategoryWrapper","PopoverHandler","PopoverWrapper","TreeMenu","useFetch","API_BASE_URL","SidebarCategory","deviceType","mobile","tablet","desktop","data","isLoading","router","pathname","query","selectedQueries","category","onCategoryClick","slug","type","rest","push","isSidebarSticky"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useRouter} from 'next/router';\nimport Link from 'next/link';\nimport Sticky from 'react-stickynode';\nimport {Scrollbars} from 'react-custom-scrollbars';\nimport Popover from 'components/popover/popover';\nimport {ArrowDropDown} from 'assets/icons/ArrowDropDown';\nimport {CategoryIcon} from 'assets/icons/CategoryIcon';\nimport {\n    SidebarMobileLoader,\n    SidebarLoader,\n} from 'components/placeholder/placeholder';\nimport {\n    CategoryWrapper,\n    TreeWrapper,\n    PopoverHandler,\n    PopoverWrapper,\n    SidebarWrapper,\n} from './sidebar.style';\nimport {SIDEBAR_DATA} from '../site-navigation'\nimport {TreeMenu} from 'components/tree-menu/tree-menu';\nimport useFetch from \"@/hooks/useFetch\";\nimport {API_BASE_URL} from \"@/utils/config\";\n\n\ntype SidebarCategoryProps = {\n    deviceType: {\n        mobile: boolean;\n        tablet: boolean;\n        desktop: boolean;\n    };\n};\n\nconst SidebarCategory: React.FC<SidebarCategoryProps> = ({deviceType: {mobile, tablet, desktop}}) => {\n    const [data, isLoading] = useFetch(`${API_BASE_URL}/api/v1/category/sub`)\n\n    const router = useRouter();\n\n    const {pathname, query} = router;\n    const selectedQueries = query.category;\n\n\n    const onCategoryClick = (slug: string) => {\n        const {type, ...rest} = query;\n        if (type) {\n            router.push(\n                {\n                    pathname,\n                    query: {...rest, category: slug},\n                },\n                {\n                    pathname: `/${type}`,\n                    query: {...rest, category: slug},\n                }\n            );\n        } else {\n            router.push({\n                pathname,\n                query: {...rest, category: slug},\n            });\n        }\n    };\n    const isSidebarSticky = true\n    if (isLoading) {\n        return <SidebarMobileLoader/>;\n    }\n    if (!data) {\n        if (mobile || tablet) {\n            return <SidebarMobileLoader/>;\n        }\n        return <SidebarLoader/>;\n    }\n    return (\n        <CategoryWrapper>\n            <PopoverWrapper>\n                <Popover\n                    handler={\n                        <PopoverHandler>\n                            <div>\n                                <CategoryIcon/>\n                                Select your Category\n                            </div>\n                            <div>\n                                <ArrowDropDown/>\n                            </div>\n                        </PopoverHandler>\n                    }\n                    className=\"category-popover\"\n                    content={\n                        <>\n                            <TreeMenu\n                                data={data}\n                                onClick={onCategoryClick}\n                                active={selectedQueries}\n                            />\n                        </>\n                    }\n                />\n            </PopoverWrapper>\n\n            {/*<SidebarWrapper>*/}\n            {/*    <Sticky enabled={isSidebarSticky} top={110} className={\"leftSideBar\"}>*/}\n            {/*        <Scrollbars*/}\n            {/*            universal*/}\n            {/*            autoHide*/}\n            {/*            autoHeight*/}\n            {/*            autoHeightMax={1000}*/}\n            {/*            renderView={(props) => (*/}\n            {/*                <div*/}\n            {/*                    {...props}*/}\n            {/*                    style={{*/}\n            {/*                        ...props.style,*/}\n            {/*                        marginLeft: props.style.marginRight,*/}\n            {/*                        marginRight: props.style.marginRight,*/}\n            {/*                    }}*/}\n            {/*                />*/}\n            {/*            )}*/}\n            {/*        >*/}\n            {/*            <TreeWrapper>*/}\n            {/*                <TreeMenu*/}\n            {/*                    data={data}*/}\n            {/*                    onClick={onCategoryClick}*/}\n            {/*                    active={selectedQueries}*/}\n            {/*                />*/}\n            {/*            </TreeWrapper>*/}\n            {/*        </Scrollbars>*/}\n            {/*    </Sticky>*/}\n            {/*</SidebarWrapper>*/}\n        </CategoryWrapper>\n    );\n};\n\nexport default SidebarCategory;\n"]},"metadata":{},"sourceType":"module"}