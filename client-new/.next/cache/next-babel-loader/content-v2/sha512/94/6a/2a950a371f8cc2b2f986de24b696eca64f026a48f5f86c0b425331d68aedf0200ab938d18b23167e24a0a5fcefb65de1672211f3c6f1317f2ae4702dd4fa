{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\2012b\\\\WebstormProjects\\\\ecommerce-MERN\\\\client-new\\\\src\\\\features\\\\checkouts\\\\Address.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TextField from '@/components/Others/forms/text-field';\nimport { Button } from '@/components/Others/button/button';\nimport { DoubleContainer, FieldWrapper, Heading } from './Address.style';\nimport { useLoginForm } from \"@/hooks/useLoginForm\";\nimport { InformationBox } from \"@/features/checkouts/checkout.style\"; // Shape of form values\n\nimport { useDispatch } from \"react-redux\";\nimport { setDeliveryAddress } from \"@/redux/actions/shopActions\";\nexport var checkIfValueIsNotEmpty = function checkIfValueIsNotEmpty(value) {\n  if (!value || value === '') {\n    return false;\n  }\n\n  return true;\n};\n\nvar UpdateAddress = function UpdateAddress(props) {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useLoginForm = useLoginForm(),\n      inputs = _useLoginForm.inputs,\n      handleInputChange = _useLoginForm.handleInputChange;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (checkIfValueIsNotEmpty(inputs === null || inputs === void 0 ? void 0 : inputs.address1) || checkIfValueIsNotEmpty(inputs === null || inputs === void 0 ? void 0 : inputs.address2) || checkIfValueIsNotEmpty(inputs === null || inputs === void 0 ? void 0 : inputs.city) || checkIfValueIsNotEmpty(inputs === null || inputs === void 0 ? void 0 : inputs.county)) {\n      dispatch(setDeliveryAddress(inputs));\n      props.next();\n    } else {\n      alert(\"Please ensure you've filled all the values\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(InformationBox, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Delivery Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"Address Line 1 \",\n        label: \"Address Line 1\",\n        name: \"address1\",\n        onChange: handleInputChange,\n        value: inputs.address1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"Address Line 2 \",\n        label: \"Address Line 2\",\n        name: \"address2\",\n        onChange: handleInputChange,\n        value: inputs.address2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"City\",\n        label: \"City\",\n        name: \"city\",\n        onChange: handleInputChange,\n        value: inputs.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(DoubleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"County \",\n        label: \"County\",\n        name: \"county\",\n        onChange: handleInputChange,\n        value: inputs.county\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"PostCode\",\n        name: \"postcode\",\n        label: \"Postcode\",\n        onChange: handleInputChange,\n        value: inputs.postcode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      type: \"submit\",\n      style: {\n        width: '100%',\n        height: '44px'\n      },\n      children: \"Save Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, _this);\n};\n\n_s(UpdateAddress, \"wMW/04KT2hJUF1Q9Y5nDeZheAwQ=\", false, function () {\n  return [useDispatch, useLoginForm];\n});\n\n_c = UpdateAddress;\nexport default UpdateAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateAddress\");","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/features/checkouts/Address.tsx"],"names":["React","TextField","Button","DoubleContainer","FieldWrapper","Heading","useLoginForm","InformationBox","useDispatch","setDeliveryAddress","checkIfValueIsNotEmpty","value","UpdateAddress","props","dispatch","inputs","handleInputChange","handleSubmit","e","preventDefault","address1","address2","city","county","next","alert","postcode","width","height"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\r\nimport TextField from '@/components/Others/forms/text-field';\r\nimport {Button} from '@/components/Others/button/button';\r\nimport {DoubleContainer, FieldWrapper, Heading} from './Address.style';\r\nimport {useLoginForm} from \"@/hooks/useLoginForm\";\r\nimport {InformationBox} from \"@/features/checkouts/checkout.style\";\r\n// Shape of form values\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setDeliveryAddress} from \"@/redux/actions/shopActions\";\r\nexport const checkIfValueIsNotEmpty=(value)=>{\r\n    if(!value || value===''){\r\n        return false\r\n    }\r\n    return true\r\n}\r\nconst UpdateAddress = (props:any) => {\r\n    const dispatch=useDispatch()\r\n    const {inputs, handleInputChange} = useLoginForm();\r\n\r\n    const handleSubmit =  (e) => {\r\n        e.preventDefault()\r\n        if(checkIfValueIsNotEmpty(inputs?.address1)||checkIfValueIsNotEmpty(inputs?.address2)||checkIfValueIsNotEmpty(inputs?.city)\r\n            ||checkIfValueIsNotEmpty(inputs?.county )){\r\n            dispatch(setDeliveryAddress(inputs))\r\n            props.next()\r\n        }\r\n        else{\r\n            alert(\"Please ensure you've filled all the values\")\r\n        }\r\n    };\r\n    return (\r\n            <InformationBox>\r\n                <Heading>\r\n                    Delivery Address\r\n                </Heading>\r\n            <FieldWrapper>\r\n                <TextField\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Address Line 1 \"\r\n                    label={\"Address Line 1\"}\r\n                    name={\"address1\"}\r\n                    onChange={handleInputChange} value={inputs.address1}\r\n                />\r\n            </FieldWrapper>\r\n            <FieldWrapper>\r\n                <TextField\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Address Line 2 \"\r\n                    label={\"Address Line 2\"}\r\n                    name={\"address2\"}\r\n                    onChange={handleInputChange} value={inputs.address2}\r\n                />\r\n            </FieldWrapper>\r\n            <FieldWrapper>\r\n                <TextField\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    label={\"City\"}\r\n                    name={\"city\"}\r\n                    onChange={handleInputChange} value={inputs.city}\r\n                />\r\n            </FieldWrapper>\r\n            <DoubleContainer>\r\n                <TextField\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"County \"\r\n                    label={\"County\"}\r\n                    name={\"county\"}\r\n                    onChange={handleInputChange} value={inputs.county}\r\n                />\r\n                <TextField\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"PostCode\"\r\n                    name={\"postcode\"}\r\n                    label={\"Postcode\"}\r\n                    onChange={handleInputChange} value={inputs.postcode}\r\n                />\r\n            </DoubleContainer>\r\n            <Button\r\n                onClick={handleSubmit}\r\n                type=\"submit\"\r\n                style={{width: '100%', height: '44px'}}\r\n            >\r\n                Save Address\r\n            </Button>\r\n            </InformationBox>\r\n    );\r\n};\r\n\r\nexport default UpdateAddress\r\n"]},"metadata":{},"sourceType":"module"}