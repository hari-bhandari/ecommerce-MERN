{"ast":null,"code":"import { GLOBAL, FORM, AUTH } from \"../defines\";\nimport axios from \"axios\";\nimport setAuthToken from \"../setAuthToken\";\nimport { URL } from \"../../../APILocation\";\nexport const setGlobalCurrency = cur => ({\n  type: GLOBAL.SET_CURRENCY,\n  cur\n});\nexport const setGlobalCategory = category => ({\n  type: GLOBAL.SET_CATEGORY,\n  category\n});\nexport const setCurrentForm = form => ({\n  type: FORM.SET_CURRENT_FORM,\n  form\n});\nexport const setGlobalSearch = keyword => ({\n  type: GLOBAL.SET_SEARCH,\n  keyword\n});\nexport const login = (email, password) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/v1/auth/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: AUTH.LOG_IN,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    localStorage.setItem('token', JSON.stringify(data.token));\n    await loadUser();\n  } catch (error) {\n    dispatch({\n      type: AUTH.LOG_IN_ERROR,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('persist:root');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  localStorage.removeItem('token');\n  dispatch({\n    type: AUTH.LOG_OUT\n  });\n  document.location.href = '/';\n};\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    const token = localStorage.token.replaceAll('\"', ''); //sending token to headers\n\n    setAuthToken(token);\n  }\n\n  try {\n    const res = await axios.get(`${URL}/api/v1/auth/me`);\n    dispatch({\n      type: AUTH.LOAD_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH.LOAD_USER_FAIL,\n      payload: err.response.data.error\n    });\n  }\n};\nexport const createOrder = order => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${URL}/api/orders`, order, config);\n    dispatch({\n      type: AUTH.ORDER_SUCCESS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('persist:root');\n  } catch (error) {\n    const messages = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (messages === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n  }\n};\nexport const register = (firstName, lastName, email, password, role) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${URL}/api/v1/auth/register`, {\n      firstName,\n      lastName,\n      email,\n      password,\n      role\n    }, config);\n    dispatch({\n      type: AUTH.SIGN_UP,\n      payload: data\n    });\n    await loadUser();\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    localStorage.setItem('token', JSON.stringify(data.token));\n  } catch (error) {\n    error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: AUTH.SIGN_UP_ERROR,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/redux/actions/globalActions.ts"],"names":["GLOBAL","FORM","AUTH","axios","setAuthToken","URL","setGlobalCurrency","cur","type","SET_CURRENCY","setGlobalCategory","category","SET_CATEGORY","setCurrentForm","form","SET_CURRENT_FORM","setGlobalSearch","keyword","SET_SEARCH","login","email","password","dispatch","config","headers","data","post","LOG_IN","payload","localStorage","setItem","JSON","stringify","token","loadUser","error","LOG_IN_ERROR","response","message","logout","removeItem","LOG_OUT","document","location","href","replaceAll","res","get","LOAD_USER","err","LOAD_USER_FAIL","createOrder","order","ORDER_SUCCESS","messages","register","firstName","lastName","role","SIGN_UP","SIGN_UP_ERROR"],"mappings":"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","sourcesContent":["import {GLOBAL, FORM, AUTH} from \"../defines\";\nimport axios from \"axios\";\nimport setAuthToken from \"../setAuthToken\";\nimport {URL} from \"../../../APILocation\";\n\nexport const setGlobalCurrency = (cur:string) => ({\n    type: GLOBAL.SET_CURRENCY,\n    cur,\n});\n\nexport const setGlobalCategory = (category:string) => ({\n    type: GLOBAL.SET_CATEGORY,\n    category,\n});\nexport const setCurrentForm = (form:string) => ({\n    type: FORM.SET_CURRENT_FORM,\n    form,\n});\n\nexport const setGlobalSearch = (keyword:string) => ({\n    type: GLOBAL.SET_SEARCH,\n    keyword,\n});\n\n\nexport const login = (email:string, password:string) => async (dispatch:any) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        const {data} = await axios.post(\n            'http://localhost:5000/api/v1/auth/login',\n            {email, password},\n            config\n        )\n\n        dispatch({\n            type: AUTH.LOG_IN,\n            payload: data,\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        localStorage.setItem('token', JSON.stringify(data.token))\n        await loadUser()\n\n    } catch (error) {\n        dispatch({\n            type: AUTH.LOG_IN_ERROR,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\nexport const logout = () => (dispatch:any) => {\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('cartItems')\n    localStorage.removeItem('persist:root')\n    localStorage.removeItem('shippingAddress')\n    localStorage.removeItem('paymentMethod')\n    localStorage.removeItem('token')\n    dispatch({type: AUTH.LOG_OUT})\n    document.location.href = '/'\n}\nexport const loadUser = () => async (dispatch:any) => {\n    if (localStorage.token) {\n        const token=localStorage.token.replaceAll('\"','')\n        //sending token to headers\n        setAuthToken(token)\n    }\n    try {\n        const res = await axios.get(`${URL}/api/v1/auth/me`);\n        dispatch({\n            type: AUTH.LOAD_USER,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: AUTH.LOAD_USER_FAIL,\n            payload: err.response.data.error\n        })\n    }\n};\nexport const createOrder = (order:object) => async (dispatch:any) => {\n    try {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n\n        const { data } = await axios.post(`${URL}/api/orders`, order, config)\n\n        dispatch({\n            type:AUTH.ORDER_SUCCESS,\n            payload: data,\n        })\n\n        localStorage.removeItem('cartItems')\n        localStorage.removeItem('persist:root')\n    } catch (error) {\n        const messages =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (messages === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n    }\n}\n\nexport const register = (firstName:string,lastName:string, email:string, password:string, role:any) => async (dispatch:any) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        const {data} = await axios.post(\n            `${URL}/api/v1/auth/register`,\n            {firstName,lastName, email, password, role},\n            config\n        )\n\n        dispatch({\n            type: AUTH.SIGN_UP,\n            payload: data,\n        })\n        await loadUser()\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        localStorage.setItem('token', JSON.stringify(data.token))\n    } catch (error) {\n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n\n        dispatch({\n            type: AUTH.SIGN_UP_ERROR,\n\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}