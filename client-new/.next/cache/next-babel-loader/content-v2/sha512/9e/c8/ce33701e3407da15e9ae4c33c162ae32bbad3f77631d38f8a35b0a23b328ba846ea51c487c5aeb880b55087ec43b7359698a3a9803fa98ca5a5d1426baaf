{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/hari/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/features/carts/cart-popup.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .cartPopup {\\n    top: auto !important;\\n    left: auto !important;\\n    bottom: 50px !important;\\n    right: 50px !important;\\n    box-shadow: 3px 3px 5px 6px #23ff00;;\\n    transform-origin: bottom right;\\n\\n\\n    @media (max-width: 580px) {\\n      max-width: none !important;\\n      width: 100% !important;\\n      bottom: 0 !important;\\n      left: 0 !important;\\n      background: \", \";\\n      overflow: initial !important;\\n      transform-origin: bottom center;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport CartPopupButton, { BoxedCartButton } from '@/components/cart/popup/cart-popup-button';\nimport { CartSlidePopup } from './cart.style';\nimport { useSelector } from \"react-redux\";\nimport { calculateTotalPrice } from \"../../utils/cartUtils\";\nvar CartPopupStyle = createGlobalStyle(_templateObject(), themeGet('colors.white', '#ffffff'));\n_c = CartPopupStyle;\n\nvar CartPopUp = function CartPopUp(_ref) {\n  _s();\n\n  var _ref$deviceType = _ref.deviceType,\n      mobile = _ref$deviceType.mobile,\n      tablet = _ref$deviceType.tablet,\n      desktop = _ref$deviceType.desktop;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var cartState = useSelector(function (state) {\n    return state.cartReducer;\n  });\n\n  var handleModal = function handleModal() {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40\n        }\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: function closeComponent() {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, _this);\n      },\n      componentProps: {\n        onCloseBtnClick: closeModal,\n        scrollbarHeight: 330\n      }\n    });\n  };\n\n  var cartSliderClass = isOpen ? 'cartPopupFixed' : '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: mobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartPopupStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(CartPopupButton, {\n        className: \"product-cart\",\n        itemCount: cartState.length,\n        itemPostfix: cartState.length > 1 ? \"items\" : \"item\",\n        price: calculateTotalPrice(cartState),\n        pricePrefix: \"\\xA3\",\n        onClick: handleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CartSlidePopup, {\n        className: cartSliderClass,\n        children: isOpen && /*#__PURE__*/_jsxDEV(Cart, {\n          onCloseBtnClick: function onCloseBtnClick() {\n            setIsOpen(false);\n          },\n          scrollbarHeight: \"100vh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(BoxedCartButton, {\n        className: \"product-cart\",\n        itemCount: cartState.length,\n        itemPostfix: cartState.length > 1 ? 'items' : \"item\",\n        price: calculateTotalPrice(cartState),\n        pricePrefix: \"Â£\",\n        onClick: function onClick() {\n          setIsOpen(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(CartPopUp, \"6IsG5vVgIMWv43n5XvKXNsVUD18=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = CartPopUp;\nexport default CartPopUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartPopupStyle\");\n$RefreshReg$(_c2, \"CartPopUp\");","map":{"version":3,"sources":["/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/features/carts/cart-popup.tsx"],"names":["React","useState","createGlobalStyle","themeGet","openModal","closeModal","Cart","CartPopupButton","BoxedCartButton","CartSlidePopup","useSelector","calculateTotalPrice","CartPopupStyle","CartPopUp","deviceType","mobile","tablet","desktop","isOpen","setIsOpen","cartState","state","cartReducer","handleModal","show","config","className","width","height","enableResizing","disableDragging","transition","tension","friction","closeOnClickOutside","component","closeComponent","componentProps","onCloseBtnClick","scrollbarHeight","cartSliderClass","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport Cart from './cart';\nimport CartPopupButton, {\n  BoxedCartButton,\n} from '@/components/cart/popup/cart-popup-button';\nimport { CartSlidePopup } from './cart.style';\nimport {useSelector} from \"react-redux\";\nimport {calculateTotalPrice} from \"../../utils/cartUtils\";\nconst CartPopupStyle = createGlobalStyle`\n  .cartPopup {\n    top: auto !important;\n    left: auto !important;\n    bottom: 50px !important;\n    right: 50px !important;\n    box-shadow: 3px 3px 5px 6px #23ff00;;\n    transform-origin: bottom right;\n\n\n    @media (max-width: 580px) {\n      max-width: none !important;\n      width: 100% !important;\n      bottom: 0 !important;\n      left: 0 !important;\n      background: ${themeGet('colors.white', '#ffffff')};\n      overflow: initial !important;\n      transform-origin: bottom center;\n    }\n  }\n`;\n\ntype CartProps = {\n  deviceType: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst CartPopUp: React.FC<CartProps> = ({\n                                          deviceType: { mobile, tablet, desktop },\n                                        }) => {\n  const [isOpen,setIsOpen]=useState(false);\n  const cartState = useSelector((state:any) => state.cartReducer);\n\n  const handleModal = () => {\n    openModal({\n      show: true,\n      config: {\n        className: 'cartPopup',\n        width: 'auto',\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        transition: {\n          tension: 360,\n          friction: 40,\n        },\n      },\n      closeOnClickOutside: true,\n      component: Cart,\n      closeComponent: () => <div />,\n      componentProps: { onCloseBtnClick: closeModal, scrollbarHeight: 330 },\n    });\n  };\n\n  let cartSliderClass = isOpen ? 'cartPopupFixed' : '';\n\n  return (\n      <>\n        {mobile ? (\n            <>\n              <CartPopupStyle />\n              <CartPopupButton\n                  className='product-cart'\n                  itemCount={cartState.length}\n                  itemPostfix={\n                    cartState.length > 1 ? (\n                        \"items\"\n                    ) : (\n                        \"item\"\n                    )\n                  }\n                  price={calculateTotalPrice(cartState)}\n                  pricePrefix='Â£'\n                  onClick={handleModal}\n              />\n            </>\n        ) : (\n            <>\n              <CartSlidePopup className={cartSliderClass}>\n                {isOpen && (\n                    <Cart onCloseBtnClick={()=>{setIsOpen(false)}} scrollbarHeight='100vh' />\n                )}\n              </CartSlidePopup>\n\n              <BoxedCartButton\n                  className='product-cart'\n                  itemCount={cartState.length}\n                  itemPostfix={\n                    cartState.length > 1 ? (\n                        'items'                    ) : (\n                        \"item\"\n                    )\n                  }\n                  price={calculateTotalPrice(cartState)}\n                  pricePrefix={\"Â£\"}\n                  onClick={()=>{setIsOpen(true)}}\n              />\n            </>\n        )}\n      </>\n  );\n};\n\nexport default CartPopUp;\n"]},"metadata":{},"sourceType":"module"}