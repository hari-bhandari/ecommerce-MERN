{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\2012b\\\\WebstormProjects\\\\ecommerce-MERN\\\\client-new\\\\src\\\\components\\\\Layout\\\\header\\\\search\\\\suggestionPopup.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from \"@/components/Layout/popover/useOnClickOutside\";\nimport PopoverWrapper from \"./popup.style\";\n\nconst SuggestionPopup = ({\n  className,\n  handler,\n  content,\n  direction\n}) => {\n  // Popover State\n  const {\n    0: state,\n    1: setState\n  } = useState(false); // Ref\n\n  const ref = useRef(); // Add all classs to an array\n\n  const addAllClasses = ['popover-wrapper']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  } // Add direction class on popover content\n\n\n  if (direction) {\n    addAllClasses.push(direction);\n  } // Toggle Popover content\n\n\n  const handleToggle = e => {\n    e.stopPropagation();\n    setState(state => !state);\n  }; // Handle document click\n\n\n  const handleDocumentClick = e => {\n    e.stopPropagation();\n\n    if (state) {\n      handleToggle(e);\n    }\n  }; // Handle window event listener\n\n\n  useEffect(() => {\n    window.addEventListener('click', handleDocumentClick);\n    return () => {\n      window.removeEventListener('click', handleDocumentClick);\n    };\n  }); // Close popover on click outside\n\n  useOnClickOutside(ref, () => setState(state => false));\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    _jsxDEV(PopoverWrapper, {\n      className: addAllClasses.join(' '),\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popover-handler\",\n        onClick: handleToggle,\n        children: handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), state && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popover-content\",\n        children: content && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner-wrap\",\n          onClick: handleToggle,\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  );\n};\n\nexport default SuggestionPopup;","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/components/Layout/header/search/suggestionPopup.tsx"],"names":["React","useState","useEffect","useRef","useOnClickOutside","PopoverWrapper","SuggestionPopup","className","handler","content","direction","state","setState","ref","addAllClasses","push","handleToggle","e","stopPropagation","handleDocumentClick","window","addEventListener","removeEventListener","join"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,iBAAP,MAA8B,+CAA9B;AACA,OAAOC,cAAP,MAA2B,eAA3B;;AAUA,MAAMC,eAAuC,GAAG,CAAC;AACJC,EAAAA,SADI;AAEJC,EAAAA,OAFI;AAGJC,EAAAA,OAHI;AAIJC,EAAAA;AAJI,CAAD,KAKD;AAC3C;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,KAAD,CAAlC,CAF2C,CAI3C;;AACA,QAAMY,GAAG,GAAGV,MAAM,EAAlB,CAL2C,CAO3C;;AACA,QAAMW,aAAuB,GAAG,CAAC,iBAAD,CAAhC,CAR2C,CAU3C;;AACA,MAAIP,SAAJ,EAAe;AACXO,IAAAA,aAAa,CAACC,IAAd,CAAmBR,SAAnB;AACH,GAb0C,CAe3C;;;AACA,MAAIG,SAAJ,EAAe;AACXI,IAAAA,aAAa,CAACC,IAAd,CAAmBL,SAAnB;AACH,GAlB0C,CAoB3C;;;AACA,QAAMM,YAAY,GAAIC,CAAD,IAAW;AAC5BA,IAAAA,CAAC,CAACC,eAAF;AACAN,IAAAA,QAAQ,CAAED,KAAD,IAAW,CAACA,KAAb,CAAR;AACH,GAHD,CArB2C,CA0B3C;;;AACA,QAAMQ,mBAAmB,GAAIF,CAAD,IAAyC;AACjEA,IAAAA,CAAC,CAACC,eAAF;;AACA,QAAIP,KAAJ,EAAW;AACPK,MAAAA,YAAY,CAACC,CAAD,CAAZ;AACH;AACJ,GALD,CA3B2C,CAkC3C;;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,mBAAjC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,mBAApC;AACH,KAFD;AAGH,GALQ,CAAT,CAnC2C,CA0C3C;;AACAf,EAAAA,iBAAiB,CAACS,GAAD,EAAM,MAAMD,QAAQ,CAAED,KAAD,IAAW,KAAZ,CAApB,CAAjB;AAEA;AAAA;AACI;AAEA,YAAC,cAAD;AAAgB,MAAA,SAAS,EAAEG,aAAa,CAACS,IAAd,CAAmB,GAAnB,CAA3B;AAAoD,MAAA,GAAG,EAAEV,GAAzD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,OAAO,EAAEG,YAA1C;AAAA,kBACKR;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKG,KAAK,iBACF;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACKF,OAAO,iBACJ;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,OAAO,EAAEO,YAArC;AAAA,oBACKP;AADL;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAkBH,CApED;;AAsEA,eAAeH,eAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport useOnClickOutside from \"@/components/Layout/popover/useOnClickOutside\";\r\nimport PopoverWrapper from \"./popup.style\";\r\n\r\ntype PopoverProps = {\r\n    className?: string;\r\n    handler: React.ReactNode;\r\n    content: React.ReactNode;\r\n    direction?: 'left' | 'right';\r\n    handleToggle?: () => void;\r\n};\r\n\r\nconst SuggestionPopup: React.FC<PopoverProps> = ({\r\n                                             className,\r\n                                             handler,\r\n                                             content,\r\n                                             direction,\r\n                                         }) => {\r\n    // Popover State\r\n    const [state, setState] = useState(false);\r\n\r\n    // Ref\r\n    const ref = useRef();\r\n\r\n    // Add all classs to an array\r\n    const addAllClasses: string[] = ['popover-wrapper'];\r\n\r\n    // className prop checking\r\n    if (className) {\r\n        addAllClasses.push(className);\r\n    }\r\n\r\n    // Add direction class on popover content\r\n    if (direction) {\r\n        addAllClasses.push(direction);\r\n    }\r\n\r\n    // Toggle Popover content\r\n    const handleToggle = (e:any) => {\r\n        e.stopPropagation();\r\n        setState((state) => !state);\r\n    };\r\n\r\n    // Handle document click\r\n    const handleDocumentClick = (e: { stopPropagation: () => void; }) => {\r\n        e.stopPropagation();\r\n        if (state) {\r\n            handleToggle(e);\r\n        }\r\n    };\r\n\r\n    // Handle window event listener\r\n    useEffect(() => {\r\n        window.addEventListener('click', handleDocumentClick);\r\n        return () => {\r\n            window.removeEventListener('click', handleDocumentClick);\r\n        };\r\n    });\r\n\r\n    // Close popover on click outside\r\n    useOnClickOutside(ref, () => setState((state) => false));\r\n\r\n    return (\r\n        // @ts-ignore\r\n\r\n        <PopoverWrapper className={addAllClasses.join(' ')} ref={ref}>\r\n            <div className=\"popover-handler\" onClick={handleToggle}>\r\n                {handler}\r\n            </div>\r\n            {state && (\r\n                <div className=\"popover-content\">\r\n                    {content && (\r\n                        <div className=\"inner-wrap\" onClick={handleToggle}>\r\n                            {content}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </PopoverWrapper>\r\n    );\r\n};\r\n\r\nexport default SuggestionPopup;\r\n\r\n"]},"metadata":{},"sourceType":"module"}