{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/header/sidebar/sidebar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Sticky from 'react-stickynode';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Popover from 'components/popover/popover';\nimport { ArrowDropDown } from 'assets/icons/ArrowDropDown';\nimport { CategoryIcon } from 'assets/icons/CategoryIcon';\nimport { SidebarMobileLoader, SidebarLoader } from 'components/placeholder/placeholder';\nimport { CategoryWrapper, TreeWrapper, PopoverHandler, PopoverWrapper, SidebarWrapper } from './sidebar.style';\nimport { SIDEBAR_DATA } from '../site-navigation';\nimport { TreeMenu } from 'components/tree-menu/tree-menu';\n\nconst SidebarCategory = ({\n  deviceType: {\n    mobile,\n    tablet,\n    desktop\n  },\n  type\n}) => {\n  const router = useRouter();\n  const data = SIDEBAR_DATA;\n  const {\n    pathname,\n    query\n  } = router;\n  const selectedQueries = query.category;\n\n  const onCategoryClick = slug => {\n    const {\n      type\n    } = query,\n          rest = _objectWithoutProperties(query, [\"type\"]);\n\n    if (type) {\n      router.push({\n        pathname,\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          category: slug\n        })\n      }, {\n        pathname: `/${type}`,\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          category: slug\n        })\n      });\n    } else {\n      router.push({\n        pathname,\n        query: _objectSpread(_objectSpread({}, rest), {}, {\n          category: slug\n        })\n      });\n    }\n  };\n\n  const isSidebarSticky = true;\n\n  if (!data) {\n    if (mobile || tablet) {\n      return /*#__PURE__*/_jsxDEV(SidebarMobileLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(SidebarLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CategoryWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(PopoverWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Popover, {\n        handler: /*#__PURE__*/_jsxDEV(PopoverHandler, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CategoryIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), \"Select your Category\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ArrowDropDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this),\n        className: \"category-popover\",\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TreeMenu, {\n            data: data,\n            onClick: onCategoryClick,\n            active: selectedQueries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SidebarWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Sticky, {\n        enabled: isSidebarSticky,\n        top: 110,\n        children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n          universal: true,\n          autoHide: true,\n          autoHeight: true,\n          autoHeightMax: 688,\n          renderView: props => /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n            style: _objectSpread(_objectSpread({}, props.style), {}, {\n              marginLeft: props.style.marginRight,\n              marginRight: props.style.marginRight\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(TreeWrapper, {\n            children: /*#__PURE__*/_jsxDEV(TreeMenu, {\n              data: data,\n              onClick: onCategoryClick,\n              active: selectedQueries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n};\n\nexport default SidebarCategory;","map":{"version":3,"sources":["/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/header/sidebar/sidebar.tsx"],"names":["React","useRouter","Sticky","Scrollbars","Popover","ArrowDropDown","CategoryIcon","SidebarMobileLoader","SidebarLoader","CategoryWrapper","TreeWrapper","PopoverHandler","PopoverWrapper","SidebarWrapper","SIDEBAR_DATA","TreeMenu","SidebarCategory","deviceType","mobile","tablet","desktop","type","router","data","pathname","query","selectedQueries","category","onCategoryClick","slug","rest","push","isSidebarSticky","props","style","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Sticky from 'react-stickynode';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Popover from 'components/popover/popover';\nimport { ArrowDropDown } from 'assets/icons/ArrowDropDown';\nimport { CategoryIcon } from 'assets/icons/CategoryIcon';\nimport {\n  SidebarMobileLoader,\n  SidebarLoader,\n} from 'components/placeholder/placeholder';\nimport {\n  CategoryWrapper,\n  TreeWrapper,\n  PopoverHandler,\n  PopoverWrapper,\n  SidebarWrapper,\n  RequestMedicine,\n} from './sidebar.style';\nimport {SIDEBAR_DATA} from '../site-navigation'\nimport { TreeMenu } from 'components/tree-menu/tree-menu';\nimport {REQUEST_MEDICINE_MENU_ITEM} from \"../site-navigation\";\n\n\ntype SidebarCategoryProps = {\n  deviceType: {\n    mobile: string;\n    tablet: string;\n    desktop: boolean;\n  };\n  type: string;\n};\n\nconst SidebarCategory: React.FC<SidebarCategoryProps> = ({\n                                                           deviceType: { mobile, tablet, desktop },\n                                                           type,\n                                                         }) => {\n  const router = useRouter();\n  const data=SIDEBAR_DATA\n\n  const { pathname, query } = router;\n  const selectedQueries = query.category;\n\n\n  const onCategoryClick = (slug: string) => {\n    const { type, ...rest } = query;\n    if (type) {\n      router.push(\n          {\n            pathname,\n            query: { ...rest, category: slug },\n          },\n          {\n            pathname: `/${type}`,\n            query: { ...rest, category: slug },\n          }\n      );\n    } else {\n      router.push({\n        pathname,\n        query: { ...rest, category: slug },\n      });\n    }\n  };\n  const isSidebarSticky = true\n\n  if (!data) {\n    if (mobile || tablet) {\n      return <SidebarMobileLoader />;\n    }\n    return <SidebarLoader />;\n  }\n  return (\n      <CategoryWrapper>\n        <PopoverWrapper>\n          <Popover\n              handler={\n                <PopoverHandler>\n                  <div>\n                    <CategoryIcon />\n                    Select your Category\n                  </div>\n                  <div>\n                    <ArrowDropDown />\n                  </div>\n                </PopoverHandler>\n              }\n              className=\"category-popover\"\n              content={\n                <>\n                  <TreeMenu\n                      data={data}\n                      onClick={onCategoryClick}\n                      active={selectedQueries}\n                  />\n                </>\n              }\n          />\n        </PopoverWrapper>\n\n        <SidebarWrapper>\n          <Sticky enabled={isSidebarSticky} top={110}>\n            <Scrollbars\n                universal\n                autoHide\n                autoHeight\n                autoHeightMax={688}\n                renderView={(props) => (\n                    <div\n                        {...props}\n                        style={{\n                          ...props.style,\n                          marginLeft: props.style.marginRight ,\n                          marginRight: props.style.marginRight,\n                        }}\n                    />\n                )}\n            >\n              <TreeWrapper>\n                <TreeMenu\n                    data={data}\n                    onClick={onCategoryClick}\n                    active={selectedQueries}\n                />\n              </TreeWrapper>\n            </Scrollbars>\n          </Sticky>\n        </SidebarWrapper>\n      </CategoryWrapper>\n  );\n};\n\nexport default SidebarCategory;\n"]},"metadata":{},"sourceType":"module"}