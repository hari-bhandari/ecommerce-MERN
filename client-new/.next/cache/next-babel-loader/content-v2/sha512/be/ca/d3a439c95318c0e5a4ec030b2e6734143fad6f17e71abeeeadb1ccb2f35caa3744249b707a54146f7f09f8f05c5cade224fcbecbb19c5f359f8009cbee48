{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\2012b\\\\WebstormProjects\\\\ecommerce-MERN\\\\client-new\\\\src\\\\features\\\\checkouts\\\\BillingInfo.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\nimport MaskedInput from 'react-text-mask';\nimport { Button } from '@/components/Others/button/button';\nimport { FieldWrapper, Heading } from './Billing.style';\nimport { useLoginForm } from \"@/hooks/useLoginForm\";\nimport TextField from \"@/components/Others/forms/text-field\";\nimport { InformationBox } from \"@/features/checkouts/checkout.style\";\nimport { setBilling } from \"@/redux/actions/shopActions\";\nimport { checkIfValueIsNotEmpty } from \"@/features/checkouts/Address\";\nimport { useDispatch } from \"react-redux\";\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst CreateOrUpdateContact = props => {\n  const {\n    inputs,\n    handleInputChange\n  } = useLoginForm();\n  const dispatch = useDispatch();\n\n  const handleNext = e => {\n    e.preventDefault();\n\n    if (checkIfValueIsNotEmpty(inputs === null || inputs === void 0 ? void 0 : inputs.name) && checkIfValueIsNotEmpty(inputs === null || inputs === void 0 ? void 0 : inputs.number) || inputs.number === '+44') {\n      dispatch(setBilling(inputs));\n      props.next();\n      alert(JSON.stringify(inputs));\n    } else {\n      alert(\"Please ensure you've filled all the values\");\n    }\n  };\n\n  const handlePrev = e => {\n    e.preventDefault();\n    props.prev();\n  };\n\n  return /*#__PURE__*/_jsxDEV(InformationBox, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Select Your Contact Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(FieldWrapper, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"name\",\n          type: \"text\",\n          placeholder: \"Full Name \",\n          label: \"Name\",\n          name: \"name\",\n          onChange: handleInputChange,\n          value: inputs.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n        children: /*#__PURE__*/_jsxDEV(MaskedInput, {\n          mask: ['+', '4', '4', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n          className: \"form-control\",\n          placeholder: \"Enter a phone number\",\n          guide: false,\n          id: \"my-input-id\",\n          name: \"number\",\n          onChange: handleInputChange,\n          value: inputs.number,\n          render: (ref, props) => /*#__PURE__*/_jsxDEV(StyledInput, _objectSpread({\n            ref: ref\n          }, props), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          width: '40%',\n          onClick: handlePrev,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleNext,\n          style: {\n            float: 'right'\n          },\n          width: '40%',\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\nexport default CreateOrUpdateContact;\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: ${themeGet('radii.base', '6px')};\n  font-family: ${themeGet('fonts.body', 'Lato, sans-serif')};\n  border: 1px solid ${themeGet('colors.gray.700', '#e6e6e6')};\n  color: ${themeGet('colors.text.bold', '#0D1136')};\n  font-size: 16px;\n  line-height: 19px;\n  font-weight: ${themeGet('fontWeights.regular', '400')};\n  padding: 0 18px;\n  box-sizing: border-box;\n  transition: border-color 0.25s ease;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n  }\n\n  &:focus {\n    border-color: ${themeGet('colors.primary.regular', '#009e7f')};\n  }\n\n  &::placeholder {\n    color: ${themeGet('colors.text.regular', '#77798C')};\n  }\n`;\nconst StyledError = styled.div`\n  color: red;\n  padding-bottom: 10px;\n  margin-top: -5px;\n`;","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/features/checkouts/BillingInfo.tsx"],"names":["React","styled","themeGet","MaskedInput","Button","FieldWrapper","Heading","useLoginForm","TextField","InformationBox","setBilling","checkIfValueIsNotEmpty","useDispatch","ButtonContainer","div","CreateOrUpdateContact","props","inputs","handleInputChange","dispatch","handleNext","e","preventDefault","name","number","next","alert","JSON","stringify","handlePrev","prev","ref","float","StyledInput","input","StyledError"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {themeGet} from '@styled-system/theme-get';\r\nimport MaskedInput from 'react-text-mask';\r\nimport {Button} from '@/components/Others/button/button';\r\nimport {FieldWrapper, Heading} from './Billing.style';\r\nimport {useLoginForm} from \"@/hooks/useLoginForm\";\r\nimport TextField from \"@/components/Others/forms/text-field\";\r\nimport {InformationBox} from \"@/features/checkouts/checkout.style\";\r\nimport {setBilling} from \"@/redux/actions/shopActions\";\r\nimport {checkIfValueIsNotEmpty} from \"@/features/checkouts/Address\";\r\nimport {useDispatch} from \"react-redux\";\r\nexport const ButtonContainer=styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\n\r\nconst CreateOrUpdateContact = (props:any) => {\r\n\r\n    const {inputs, handleInputChange} = useLoginForm();\r\n    const dispatch = useDispatch()\r\n\r\n    const handleNext =  (e) => {\r\n        e.preventDefault()\r\n        if(checkIfValueIsNotEmpty(inputs?.name)&&checkIfValueIsNotEmpty(inputs?.number)||inputs.number==='+44' ){\r\n            dispatch(setBilling(inputs))\r\n            props.next()\r\n            alert(JSON.stringify(inputs))\r\n\r\n        }\r\n        else{\r\n            alert(\"Please ensure you've filled all the values\")\r\n\r\n        }\r\n    };\r\n    const handlePrev=(e)=>{\r\n        e.preventDefault()\r\n        props.prev()\r\n    }\r\n    return (\r\n        <InformationBox>\r\n            <Heading>\r\n                Select Your Contact Number\r\n            </Heading>\r\n            <form>\r\n            <FieldWrapper>\r\n                <TextField\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Full Name \"\r\n                    label={\"Name\"}\r\n                    name={\"name\"}\r\n                    onChange={handleInputChange} value={inputs.name}\r\n                />\r\n            </FieldWrapper>\r\n\r\n                <FieldWrapper>\r\n                    <MaskedInput\r\n                        mask={[\r\n                            '+', '4', '4',\r\n                            /\\d/,\r\n                            /\\d/,\r\n                            /\\d/,\r\n                            /\\d/,\r\n                            /\\d/,\r\n                            /\\d/,\r\n                            /\\d/,\r\n                            /\\d/,\r\n                            /\\d/,\r\n                            /\\d/,\r\n                        ]}\r\n                        className='form-control'\r\n                        placeholder='Enter a phone number'\r\n                        guide={false}\r\n                        id='my-input-id'\r\n                        name='number'\r\n                        onChange={handleInputChange} value={inputs.number}\r\n                        render={(ref: any, props: {}) => (\r\n                            <StyledInput ref={ref} {...props} />\r\n                        )}\r\n                    />\r\n                </FieldWrapper>\r\n\r\n                <ButtonContainer>\r\n                        <Button\r\n                            width={'40%'}\r\n                            onClick={handlePrev}>\r\n                            Previous\r\n                        </Button>\r\n                        <Button\r\n                            onClick={handleNext}\r\n                            style={{float: 'right'}}\r\n                            width={'40%'}\r\n                        >\r\n                            Next\r\n                        </Button>\r\n                </ButtonContainer>\r\n            </form>\r\n        </InformationBox>\r\n    );\r\n};\r\n\r\nexport default CreateOrUpdateContact;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  height: 54px;\r\n  border-radius: ${themeGet('radii.base', '6px')};\r\n  font-family: ${themeGet('fonts.body', 'Lato, sans-serif')};\r\n  border: 1px solid ${themeGet('colors.gray.700', '#e6e6e6')};\r\n  color: ${themeGet('colors.text.bold', '#0D1136')};\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  font-weight: ${themeGet('fontWeights.regular', '400')};\r\n  padding: 0 18px;\r\n  box-sizing: border-box;\r\n  transition: border-color 0.25s ease;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n\r\n  &:focus {\r\n    border-color: ${themeGet('colors.primary.regular', '#009e7f')};\r\n  }\r\n\r\n  &::placeholder {\r\n    color: ${themeGet('colors.text.regular', '#77798C')};\r\n  }\r\n`;\r\n\r\nconst StyledError = styled.div`\r\n  color: red;\r\n  padding-bottom: 10px;\r\n  margin-top: -5px;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}