{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/search-box/search-box.tsx\";\nimport React, { useState } from 'react';\nimport { StyledForm, StyledInput, StyledSearchButton } from './search-box.style';\nimport { SearchIcon } from 'assets/icons/SearchIcon';\nimport CategorySearchSwitcher from \"@/header/menu/left-menu/CategorySearchSwitcher\";\nimport SuggestionPopup from \"@/header/search/suggestionPopup\";\nimport { MenuItem } from \"@/header/menu/currency-switcher/CurrencySwitcherStyles\";\nimport useFetch from \"@/hooks/useFetch\";\nimport { API_BASE_URL, transformCloudinaryImage } from \"@/utils/config\";\nimport { CategoryIcon } from \"@/header/menu/left-menu/LeftMenu\"; // @ts-ignore\n\nconst ItemsMenu = ({\n  onClick,\n  text,\n  category\n}) => {\n  const textQuery = text === '' ? `text=${text}` : '';\n  const categoryQuery = category ? `category=${category}` : '';\n  const [data, isLoading, error, reFetch] = useFetch(`${API_BASE_URL}/api/v1/products/autocomplete/?${textQuery}&${categoryQuery}`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClick,\n      value: item.id,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(CategoryIcon, {\n          link: transformCloudinaryImage(data.thumbImage, 25, 25),\n          height: \"25px\",\n          width: \"25px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), item.name]\n    }, item._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n};\n\nexport const SearchBox = props => {\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    0: category,\n    1: setCategory\n  } = useState(null);\n  const {\n    name,\n    minimal,\n    buttonText,\n    className,\n    showButtonText = true,\n    shadow\n  } = props;\n\n  const handleOnChange = e => {\n    const {\n      value\n    } = e.target;\n    setSearch(value);\n  };\n\n  const onSearch = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledForm, {\n    onSubmit: () => {},\n    className: className,\n    boxShadow: shadow,\n    minimal: minimal,\n    children: minimal ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CategorySearchSwitcher, {\n        setCategory: setCategory,\n        category: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(SuggestionPopup, {\n        content: /*#__PURE__*/_jsxDEV(ItemsMenu, {\n          onClick: () => {},\n          text: search,\n          category: category === null || category === void 0 ? void 0 : category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this),\n        handler: /*#__PURE__*/_jsxDEV(StyledInput, {\n          type: \"search\",\n          onChange: handleOnChange,\n          value: search,\n          name: name,\n          autoComplete: 'off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n        style: {\n          marginLeft: 16,\n          marginRight: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n        type: \"search\",\n        onChange: handleOnChange,\n        value: search,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(StyledSearchButton, {\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), showButtonText && buttonText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n};","map":{"version":3,"sources":["/Users/hari/WebstormProjects/ecommerce-MERN/client-new/src/components/search-box/search-box.tsx"],"names":["React","useState","StyledForm","StyledInput","StyledSearchButton","SearchIcon","CategorySearchSwitcher","SuggestionPopup","MenuItem","useFetch","API_BASE_URL","transformCloudinaryImage","CategoryIcon","ItemsMenu","onClick","text","category","textQuery","categoryQuery","data","isLoading","error","reFetch","map","item","id","thumbImage","name","_id","SearchBox","props","search","setSearch","setCategory","minimal","buttonText","className","showButtonText","shadow","handleOnChange","e","value","target","onSearch","preventDefault","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {\n  StyledForm,\n  StyledInput,\n  StyledSearchButton,\n} from './search-box.style';\nimport { SearchIcon } from 'assets/icons/SearchIcon';\nimport CategorySearchSwitcher from \"@/header/menu/left-menu/CategorySearchSwitcher\";\nimport SuggestionPopup from \"@/header/search/suggestionPopup\";\nimport {MenuItem} from \"@/header/menu/currency-switcher/CurrencySwitcherStyles\";\ninterface Props {\n  name: string;\n  minimal?: boolean;\n  className?: string;\n  showButtonText?: boolean;\n  shadow?: string;\n  [key: string]: unknown;\n}\n\nimport useFetch from \"@/hooks/useFetch\";\nimport {API_BASE_URL, transformCloudinaryImage} from \"@/utils/config\";\nimport {CategoryIcon} from \"@/header/menu/left-menu/LeftMenu\";\n// @ts-ignore\nconst ItemsMenu = ({ onClick,text,category }) => {\n  const textQuery=text===''?`text=${text}`:''\n  const categoryQuery=category?`category=${category}`:''\n  const [data, isLoading, error, reFetch]=useFetch(`${API_BASE_URL}/api/v1/products/autocomplete/?${textQuery}&${categoryQuery}`)\n\n  return (\n      <>\n        {data?.map((item) => (\n            <MenuItem onClick={onClick} key={item._id} value={item.id}>\n          <span>\n            <CategoryIcon link={transformCloudinaryImage(data.thumbImage,25,25)} height={\"25px\"} width={\"25px\"}/>\n          </span>\n              {item.name}\n            </MenuItem>\n        ))}\n      </>\n  );\n};\nexport interface ActiveSearchFilter{\n  id:string,\n  name: string,\n  image?:string,\n}\nexport const SearchBox: React.FC<Props> = (props) => {\n  const [search,setSearch]=useState<string>('')\n  const [category,setCategory]=useState<ActiveSearchFilter|null>(null)\n  const {\n    name,\n    minimal,\n    buttonText,\n    className,\n    showButtonText = true,\n    shadow,\n  } = props\n  const handleOnChange = (e: { target: { value: any; }; }) => {\n    const { value } = e.target;\n    setSearch(value)\n  };\n  const onSearch = (e: { preventDefault: () => void; }) => {\n    e.preventDefault();\n  };\n  return (\n      <StyledForm\n          onSubmit={()=>{}}\n          className={className}\n          boxShadow={shadow}\n          minimal={minimal}\n      >\n        {minimal ? (\n            <>\n              <CategorySearchSwitcher setCategory={setCategory} category={category}/>\n              <SuggestionPopup content={\n                <ItemsMenu onClick={() => {\n                }} text={search} category={category?.name}/>} handler={\n                <StyledInput\n                    type='search'\n                    onChange={handleOnChange}\n                    value={search}\n                    name={name}\n                    autoComplete={'off'}/>\n              }\n              />\n\n              <SearchIcon style={{marginLeft: 16, marginRight: 16}}/>\n\n            </>\n        ) : (\n            <>\n              <StyledInput\n                  type='search'\n                  onChange={handleOnChange}\n                  value={search}\n                  name={name}\n              />\n              <StyledSearchButton>\n                <SearchIcon style={{marginRight: 10}}/>\n                {showButtonText && buttonText}\n              </StyledSearchButton>\n            </>\n        )}\n      </StyledForm>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}