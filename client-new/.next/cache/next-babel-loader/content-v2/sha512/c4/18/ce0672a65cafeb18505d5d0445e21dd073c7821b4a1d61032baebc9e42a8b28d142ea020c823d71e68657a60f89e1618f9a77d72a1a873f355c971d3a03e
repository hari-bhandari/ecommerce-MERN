{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\2012b\\\\WebstormProjects\\\\ecommerce-MERN\\\\client-new\\\\src\\\\features\\\\checkouts\\\\StripePaymentForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from \"axios\";\nimport { API_BASE_URL } from \"@/utils/config\";\nimport StripeFormWrapper, { Heading, FieldWrapper } from './stripe.style';\nimport { useSelector } from \"react-redux\";\nvar stripePromise = loadStripe('pk_test_51HR1HeEbiqPmtL9pHZqB2BQzFzjisQybiUnf6wzJHj1UD4stgUOuzQLLfcxowVS0c8RhEAAIRVO643Mu4QSsE3jk007D69CHI7');\n\nvar StripeForm = function StripeForm(_ref) {\n  _s();\n\n  var buttonText = _ref.buttonText,\n      getToken = _ref.getToken;\n  // Get a reference to Stripe or Elements using hooks.\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var token, _yield$stripe$confirm, paymentIntent, _yield$axios$put, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!stripe || !elements)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.next = 4;\n              return getToken();\n\n            case 4:\n              token = _context.sent;\n              _context.next = 7;\n              return stripe.confirmCardPayment(token.token, {\n                payment_method: {\n                  card: elements.getElement(CardElement),\n                  billing_details: {\n                    email: '2012bhandari.ha@gmail.com'\n                  }\n                }\n              });\n\n            case 7:\n              _yield$stripe$confirm = _context.sent;\n              paymentIntent = _yield$stripe$confirm.paymentIntent;\n\n              if (!(paymentIntent.status === \"succeeded\")) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return axios.put(\"\".concat(API_BASE_URL, \"/api/v1/order/\").concat(token.createdOrder._id, \"/pay\"), {});\n\n            case 12:\n              _yield$axios$put = _context.sent;\n              data = _yield$axios$put.data;\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(StripeFormWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Enter card info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(FieldWrapper, {\n      children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleSubmit,\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(StripeForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = StripeForm;\n\nvar StripePaymentForm = function StripePaymentForm(_ref3) {\n  _s2();\n\n  var _ref3$item = _ref3.item,\n      price = _ref3$item.price,\n      buttonText = _ref3$item.buttonText;\n  var billing = useSelector(function (state) {\n    return state.shopReducer;\n  });\n  var cartState = useSelector(function (state) {\n    return state.cartReducer;\n  });\n  var config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  var sendTokenToServer = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"\".concat(API_BASE_URL, \"/api/v1/order/\"), {\n                orderItems: cartState,\n                paymentMethod: \"card\",\n                itemsPrice: 500,\n                taxPrice: 20,\n                shippingPrice: 4,\n                totalPrice: price,\n                shippingAddress: billing.address,\n                name: billing.billing.name,\n                number: billing.billing.number\n              }, config);\n\n            case 2:\n              _yield$axios$post = _context2.sent;\n              data = _yield$axios$post.data;\n              return _context2.abrupt(\"return\", data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function sendTokenToServer() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(StripeForm, {\n      getToken: function getToken() {\n        return sendTokenToServer();\n      },\n      buttonText: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, _this);\n};\n\n_s2(StripePaymentForm, \"2T4hsfZnr45ZU3Ilgy14icb2SUQ=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c2 = StripePaymentForm;\nexport default StripePaymentForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StripeForm\");\n$RefreshReg$(_c2, \"StripePaymentForm\");","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/features/checkouts/StripePaymentForm.tsx"],"names":["React","loadStripe","Elements","CardElement","useStripe","useElements","axios","API_BASE_URL","StripeFormWrapper","Heading","FieldWrapper","useSelector","stripePromise","StripeForm","buttonText","getToken","stripe","elements","handleSubmit","token","confirmCardPayment","payment_method","card","getElement","billing_details","email","paymentIntent","status","put","createdOrder","_id","data","StripePaymentForm","item","price","billing","state","shopReducer","cartState","cartReducer","config","headers","sendTokenToServer","post","orderItems","paymentMethod","itemsPrice","taxPrice","shippingPrice","totalPrice","shippingAddress","address","name","number"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SACIC,QADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,WAJJ,QAKO,yBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAOC,iBAAP,IAA2BC,OAA3B,EAAoCC,YAApC,QAAuD,gBAAvD;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,IAAMC,aAAa,GAAGX,UAAU,CAAC,6GAAD,CAAhC;;AAEA,IAAMY,UAAU,GAAG,SAAbA,UAAa,OAA4B;AAAA;;AAAA,MAA1BC,UAA0B,QAA1BA,UAA0B;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAC3C;AACA,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,MAAMa,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,MAAMa,YAAY;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACb,CAACF,MAAD,IAAW,CAACC,QADC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,qBAUGF,QAAQ,EAVX;;AAAA;AAUXI,cAAAA,KAVW;AAAA;AAAA,qBAWaH,MAAM,CAACI,kBAAP,CAA0BD,KAAK,CAACA,KAAhC,EAAuC;AAC7DE,gBAAAA,cAAc,EAAE;AACZC,kBAAAA,IAAI,EAAEL,QAAQ,CAACM,UAAT,CAAoBpB,WAApB,CADM;AAEZqB,kBAAAA,eAAe,EAAE;AACbC,oBAAAA,KAAK,EAAE;AADM;AAFL;AAD6C,eAAvC,CAXb;;AAAA;AAAA;AAWVC,cAAAA,aAXU,yBAWVA,aAXU;;AAAA,oBAoBdA,aAAa,CAACC,MAAd,KAAuB,WApBT;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAqBQrB,KAAK,CAACsB,GAAN,WACdrB,YADc,2BACeY,KAAK,CAACU,YAAN,CAAmBC,GADlC,WAEjB,EAFiB,CArBR;;AAAA;AAAA;AAqBNC,cAAAA,IArBM,oBAqBNA,IArBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZb,YAAY;AAAA;AAAA;AAAA,KAAlB;;AA6BA,sBACI,QAAC,iBAAD;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,YAAD;AAAA,6BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFJ,eAKI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEA,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAWH,CA5CD;;GAAML,U;UAEaT,S,EACEC,W;;;KAHfQ,U;;AAmDN,IAAMmB,iBAAiB,GAAG,SAApBA,iBAAoB,QAAuC;AAAA;;AAAA,yBAArCC,IAAqC;AAAA,MAA9BC,KAA8B,cAA9BA,KAA8B;AAAA,MAAvBpB,UAAuB,cAAvBA,UAAuB;AAC7D,MAAMqB,OAAO,GAAGxB,WAAW,CAAC,UAACyB,KAAD;AAAA,WAAgBA,KAAK,CAACC,WAAtB;AAAA,GAAD,CAA3B;AACA,MAAMC,SAAS,GAAG3B,WAAW,CAAC,UAACyB,KAAD;AAAA,WAAgBA,KAAK,CAACG,WAAtB;AAAA,GAAD,CAA7B;AACA,MAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;;AAKA,MAAMC,iBAAiB;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDpC,KAAK,CAACqC,IAAN,WACdpC,YADc,qBAEjB;AACIqC,gBAAAA,UAAU,EAAEN,SADhB;AAC2BO,gBAAAA,aAAa,EAAE,MAD1C;AAEIC,gBAAAA,UAAU,EAAE,GAFhB;AAGIC,gBAAAA,QAAQ,EAAE,EAHd;AAIIC,gBAAAA,aAAa,EAAE,CAJnB;AAKIC,gBAAAA,UAAU,EAAEf,KALhB;AAMIgB,gBAAAA,eAAe,EAACf,OAAO,CAACgB,OAN5B;AAOIC,gBAAAA,IAAI,EAACjB,OAAO,CAACA,OAAR,CAAgBiB,IAPzB;AAQIC,gBAAAA,MAAM,EAAClB,OAAO,CAACA,OAAR,CAAgBkB;AAR3B,eAFiB,EAajBb,MAbiB,CADC;;AAAA;AAAA;AACfT,cAAAA,IADe,qBACfA,IADe;AAAA,gDAgBfA,IAhBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBW,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AAmBA,sBACI,QAAC,QAAD;AAAU,IAAA,MAAM,EAAE9B,aAAlB;AAAA,2BACI,QAAC,UAAD;AACI,MAAA,QAAQ,EAAE;AAAA,eAAM8B,iBAAiB,EAAvB;AAAA,OADd;AAEI,MAAA,UAAU,EAAE5B;AAFhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAnCD;;IAAMkB,iB;UACcrB,W,EACEA,W;;;MAFhBqB,iB;AAqCN,eAAeA,iBAAf","sourcesContent":["import React, {useContext} from 'react';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport {\r\n    Elements,\r\n    CardElement,\r\n    useStripe,\r\n    useElements,\r\n} from '@stripe/react-stripe-js';\r\nimport axios from \"axios\";\r\nimport {API_BASE_URL} from \"@/utils/config\";\r\nimport StripeFormWrapper, {Heading, FieldWrapper} from './stripe.style';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst stripePromise = loadStripe('pk_test_51HR1HeEbiqPmtL9pHZqB2BQzFzjisQybiUnf6wzJHj1UD4stgUOuzQLLfcxowVS0c8RhEAAIRVO643Mu4QSsE3jk007D69CHI7');\r\n\r\nconst StripeForm = ({buttonText, getToken}) => {\r\n    // Get a reference to Stripe or Elements using hooks.\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const handleSubmit = async () => {\r\n        if (!stripe || !elements) {\r\n            // Stripe.js has not loaded yet. Make sure to disable\r\n            // form submission until Stripe.js has loaded.\r\n            return;\r\n        }\r\n        // Use elements.getElement to get a reference to the mounted Element.\r\n\r\n        // Pass the Element directly to other Stripe.js methods:\r\n        // e.g. createToken - https://stripe.com/docs/js/tokens_sources/create_token?type=cardElement\r\n        const token = await getToken()\r\n        const {paymentIntent} = await stripe.confirmCardPayment(token.token, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardElement),\r\n                    billing_details: {\r\n                        email: '2012bhandari.ha@gmail.com',\r\n                    },\r\n                },\r\n            }\r\n        )\r\n        if(paymentIntent.status===\"succeeded\"){\r\n            const {data} = await axios.put(\r\n                `${API_BASE_URL}/api/v1/order/${token.createdOrder._id}/pay`,\r\n                {\r\n\r\n\r\n                })\r\n        }\r\n    }\r\n    return (\r\n        <StripeFormWrapper>\r\n            <Heading>Enter card info</Heading>\r\n            <FieldWrapper>\r\n                <CardElement/>\r\n            </FieldWrapper>\r\n            <button type=\"button\" onClick={handleSubmit}>\r\n                Pay Now\r\n            </button>\r\n        </StripeFormWrapper>\r\n    );\r\n};\r\ntype Item = {\r\n    item: {\r\n        price: any;\r\n        buttonText: string;\r\n    };\r\n};\r\nconst StripePaymentForm = ({item: {price, buttonText}}: Item) => {\r\n    const billing = useSelector((state: any) => state.shopReducer);\r\n    const cartState = useSelector((state: any) => state.cartReducer);\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    }\r\n    const sendTokenToServer = async () => {\r\n        const {data} = await axios.post(\r\n            `${API_BASE_URL}/api/v1/order/`,\r\n            {\r\n                orderItems: cartState, paymentMethod: \"card\",\r\n                itemsPrice: 500,\r\n                taxPrice: 20,\r\n                shippingPrice: 4,\r\n                totalPrice: price,\r\n                shippingAddress:billing.address ,\r\n                name:billing.billing.name,\r\n                number:billing.billing.number\r\n\r\n            },\r\n            config\r\n        )\r\n        return data\r\n    };\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <StripeForm\r\n                getToken={() => sendTokenToServer()}\r\n                buttonText={buttonText}\r\n            />\r\n        </Elements>\r\n    );\r\n};\r\n\r\nexport default StripePaymentForm;\r\n"]},"metadata":{},"sourceType":"module"}