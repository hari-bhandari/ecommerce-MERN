{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/withReduxStore.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { initializeStore } from \"../redux/store\";\nconst isServer = true;\nconst __NEXT_REDUX_STORE__ = \"__NEXT_REDUX_STORE__\";\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default function withReduxStor(App) {\n  return class AppWithRedux extends React.Component {\n    static async getInitialProps(appContext) {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      const reduxStore = getOrCreateStore(); // Provide the store to getInitialProps of pages\n\n      appContext.ctx.reduxStore = reduxStore;\n      let appProps = {};\n\n      if (typeof App.getInitialProps === \"function\") {\n        appProps = await App.getInitialProps(appContext);\n      }\n\n      return _objectSpread(_objectSpread({}, appProps), {}, {\n        initialReduxState: reduxStore.getState()\n      });\n    }\n\n    constructor(props) {\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(App, _objectSpread(_objectSpread({}, this.props), {}, {\n        reduxStore: this.reduxStore\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    }\n\n  };\n}\n;","map":{"version":3,"sources":["/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/withReduxStore.js"],"names":["initializeStore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","withReduxStor","App","AppWithRedux","React","Component","getInitialProps","appContext","reduxStore","ctx","appProps","initialReduxState","getState","constructor","props","render"],"mappings":";;;;;;;;;AAAA,SAASA,eAAT,QAAgC,gBAAhC;AAEA,MAAMC,QAAQ,OAAd;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC;AACA,MAAIH,QAAJ,EAAc;AACZ,WAAOD,eAAe,CAACI,YAAD,CAAtB;AACD,GAJqC,CAMtC;;;AACA,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AACjCG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,eAAe,CAACI,YAAD,CAA9C;AACD;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACD;;AAED,eAAe,SAASI,aAAT,CAAuBC,GAAvB,EAA4B;AACzC,SAAO,MAAMC,YAAN,SAA2BC,KAAK,CAACC,SAAjC,CAA2C;AAChD,iBAAaC,eAAb,CAA6BC,UAA7B,EAAyC;AACvC;AACA;AACA,YAAMC,UAAU,GAAGV,gBAAgB,EAAnC,CAHuC,CAKvC;;AACAS,MAAAA,UAAU,CAACE,GAAX,CAAeD,UAAf,GAA4BA,UAA5B;AAEA,UAAIE,QAAQ,GAAG,EAAf;;AACA,UAAI,OAAOR,GAAG,CAACI,eAAX,KAA+B,UAAnC,EAA+C;AAC7CI,QAAAA,QAAQ,GAAG,MAAMR,GAAG,CAACI,eAAJ,CAAoBC,UAApB,CAAjB;AACD;;AAED,6CACKG,QADL;AAEEC,QAAAA,iBAAiB,EAAEH,UAAU,CAACI,QAAX;AAFrB;AAID;;AAEDC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKN,UAAL,GAAkBV,gBAAgB,CAACgB,KAAK,CAACH,iBAAP,CAAlC;AACD;;AAEDI,IAAAA,MAAM,GAAG;AACP,0BAAO,QAAC,GAAD,kCAAS,KAAKD,KAAd;AAAqB,QAAA,UAAU,EAAE,KAAKN;AAAtC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AA3B+C,GAAlD;AA6BD;AAAA","sourcesContent":["import { initializeStore } from \"../redux/store\";\n\nconst isServer = typeof window === \"undefined\";\nconst __NEXT_REDUX_STORE__ = \"__NEXT_REDUX_STORE__\";\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState);\n  }\n\n  // Create store if unavailable on the client and set it on the window object\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default function withReduxStor(App) {\n  return class AppWithRedux extends React.Component {\n    static async getInitialProps(appContext) {\n      // Get or Create the store with `undefined` as initialState\n      // This allows you to set a custom default initialState\n      const reduxStore = getOrCreateStore();\n\n      // Provide the store to getInitialProps of pages\n      appContext.ctx.reduxStore = reduxStore;\n\n      let appProps = {};\n      if (typeof App.getInitialProps === \"function\") {\n        appProps = await App.getInitialProps(appContext);\n      }\n\n      return {\n        ...appProps,\n        initialReduxState: reduxStore.getState(),\n      };\n    }\n\n    constructor(props) {\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      return <App {...this.props} reduxStore={this.reduxStore} />;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}