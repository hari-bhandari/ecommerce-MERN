{"ast":null,"code":"import axios from 'axios';\nvar instance = axios.create({\n  baseURL: '/'\n});\n\nvar requestHandler = function requestHandler(config) {\n  // Modify config here\n  // if (auth.getToken()) {\n  //   // config.headers['Authorization'] = `Bearer ${auth.getToken()}`;\n  // }\n  config.timeout = 30000;\n  return config;\n};\n\ninstance.interceptors.request.use(requestHandler);\ninstance.interceptors.response.use(undefined, function (error) {\n  var _error$response, _error$response$data;\n\n  // handle error\n  if (axios.isCancel(error)) {\n    console.log(\"request cancelled\");\n  }\n\n  return Promise.reject((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error);\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/hooks/httpInstance.ts"],"names":["axios","instance","create","baseURL","requestHandler","config","timeout","interceptors","request","use","response","undefined","error","isCancel","console","log","Promise","reject","data"],"mappings":"AACA,OAAOA,KAAP,MAAqE,OAArE;AAEA,IAAMC,QAAuB,GAAGD,KAAK,CAACE,MAAN,CAAa;AACzCC,EAAAA,OAAO,EAAE;AADgC,CAAb,CAAhC;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAgC;AACnD;AACA;AACA;AACA;AAEAA,EAAAA,MAAM,CAACC,OAAP,GAAiB,KAAjB;AACA,SAAOD,MAAP;AACH,CARD;;AAUAJ,QAAQ,CAACM,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCL,cAAlC;AACAH,QAAQ,CAACM,YAAT,CAAsBG,QAAtB,CAA+BD,GAA/B,CAAmCE,SAAnC,EAA8C,UAACC,KAAD,EAAuB;AAAA;;AACjE;AACA,MAAIZ,KAAK,CAACa,QAAN,CAAeD,KAAf,CAAJ,EAA2B;AACvBE,IAAAA,OAAO,CAACC,GAAR;AACH;;AACD,SAAOC,OAAO,CAACC,MAAR,oBAAeL,KAAK,CAACF,QAArB,4EAAe,gBAAgBQ,IAA/B,yDAAe,qBAAsBN,KAArC,CAAP;AACH,CAND;AAQA,eAAeX,QAAf","sourcesContent":["\r\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosError } from 'axios';\r\n\r\nconst instance: AxiosInstance = axios.create({\r\n    baseURL: '/',\r\n});\r\n\r\nconst requestHandler = (config: AxiosRequestConfig) => {\r\n    // Modify config here\r\n    // if (auth.getToken()) {\r\n    //   // config.headers['Authorization'] = `Bearer ${auth.getToken()}`;\r\n    // }\r\n\r\n    config.timeout = 30000;\r\n    return config;\r\n};\r\n\r\ninstance.interceptors.request.use(requestHandler);\r\ninstance.interceptors.response.use(undefined, (error: AxiosError) => {\r\n    // handle error\r\n    if (axios.isCancel(error)) {\r\n        console.log(`request cancelled`);\r\n    }\r\n    return Promise.reject(error.response?.data?.error);\r\n});\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}