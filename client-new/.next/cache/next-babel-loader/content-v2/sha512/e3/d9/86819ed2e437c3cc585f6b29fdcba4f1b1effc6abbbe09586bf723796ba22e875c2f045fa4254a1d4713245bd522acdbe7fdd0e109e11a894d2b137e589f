{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CART } from \"../defines\";\nconst initialState = [];\nexport default function cartReducer(state = initialState, action) {\n  const cartItem = state.find(item => item.cartId === action.cartId);\n  const cartItemIndex = cartItem && state.indexOf(cartItem);\n\n  switch (action.type) {\n    case CART.ADD_TO_CART:\n      const pVaration = action.product.variation || action.product.variation && action.product.variation.length > 0;\n      const pSize = action.product.size || action.product.size && action.product.size.length > 0;\n\n      if (!pVaration && !pSize) {\n        const addedCartItem = state.find(item => item.id === action.product.id);\n        const addedCartItemIndex = addedCartItem && state.indexOf(addedCartItem);\n\n        if (!addedCartItem) {\n          return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n            cartQuantity: action.quantity || 1,\n            cartId: uuidv4()\n          })];\n        } else {\n          return [...state.slice(0, addedCartItemIndex), _objectSpread(_objectSpread({}, addedCartItem), {}, {\n            cartQuantity: action.quantity ? addedCartItem.cartQuantity + action.quantity : addedCartItem.cartQuantity + 1\n          }), ...state.slice(addedCartItemIndex + 1)];\n        }\n      } else {\n        if (pVaration && !pSize) {\n          const addedCartItemColor = state.find(item => item.id === action.product.id && item.selectedColor && item.selectedColor === action.color);\n          const addedCartItemColorIndex = addedCartItemColor && state.indexOf(addedCartItemColor);\n\n          if (!action.color || action.color === \"none\") {\n            if (!addedCartItemColor) {\n              return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n                selectedColor: \"none\",\n                cartQuantity: action.quantity || 1,\n                cartId: uuidv4()\n              })];\n            } else {\n              return [...state.slice(0, addedCartItemColorIndex), _objectSpread(_objectSpread({}, addedCartItemColor), {}, {\n                cartQuantity: action.quantity ? addedCartItemColor.cartQuantity + action.quantity : addedCartItemColor.cartQuantity + 1\n              }), ...state.slice(addedCartItemColorIndex + 1)];\n            }\n          } else {\n            if (!addedCartItemColor) {\n              return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n                cartQuantity: action.quantity || 1,\n                selectedColor: action.color,\n                cartId: uuidv4()\n              })];\n            } else {\n              return [...state.slice(0, addedCartItemColorIndex), _objectSpread(_objectSpread({}, addedCartItemColor), {}, {\n                cartQuantity: action.quantity ? addedCartItemColor.cartQuantity + action.quantity : addedCartItemColor.cartQuantity + 1\n              }), ...state.slice(addedCartItemColorIndex + 1)];\n            }\n          }\n        } else if (!pVaration && pSize) {\n          const addedCartItemSize = state.find(item => item.id === action.product.id && item.selectedSize && item.selectedSize === action.size);\n          const addedCartItemSizeIndex = addedCartItemSize && state.indexOf(addedCartItemSize);\n\n          if (!action.size || action.size === \"none\") {\n            if (!addedCartItemSize) {\n              return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n                selectedSize: \"none\",\n                cartQuantity: action.quantity || 1,\n                cartId: uuidv4()\n              })];\n            } else {\n              return [...state.slice(0, addedCartItemSizeIndex), _objectSpread(_objectSpread({}, addedCartItemSize), {}, {\n                cartQuantity: action.quantity ? addedCartItemSize.cartQuantity + action.quantity : addedCartItemSize.cartQuantity + 1\n              }), ...state.slice(addedCartItemSizeIndex + 1)];\n            }\n          } else {\n            if (!addedCartItemSize) {\n              return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n                cartQuantity: action.quantity || 1,\n                selectedSize: action.size,\n                cartId: uuidv4()\n              })];\n            } else {\n              return [...state.slice(0, addedCartItemSizeIndex), _objectSpread(_objectSpread({}, addedCartItemSize), {}, {\n                cartQuantity: action.quantity ? addedCartItemSize.cartQuantity + action.quantity : addedCartItemSize.cartQuantity + 1\n              }), ...state.slice(addedCartItemSizeIndex + 1)];\n            }\n          }\n        } else if (pVaration && pSize) {\n          const addedCartItemSizeColor = state.find(item => item.id === action.product.id && item.selectedSize && item.selectedSize === action.size && item.selectedColor && item.selectedColor === action.color);\n          const addedCartItemSizeColorIndex = addedCartItemSizeColor && state.indexOf(addedCartItemSizeColor);\n\n          if ((!action.color || action.color === \"none\") && (!action.size || action.size === \"none\")) {\n            if (!addedCartItemSizeColor) {\n              return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n                selectedColor: \"none\",\n                selectedSize: \"none\",\n                cartQuantity: action.quantity || 1,\n                cartId: uuidv4()\n              })];\n            } else {\n              return [...state.slice(0, addedCartItemSizeColorIndex), _objectSpread(_objectSpread({}, addedCartItemSizeColor), {}, {\n                cartQuantity: action.quantity ? addedCartItemSizeColor.cartQuantity + action.quantity : addedCartItemSizeColor.cartQuantity + 1\n              }), ...state.slice(addedCartItemSizeColorIndex + 1)];\n            }\n          } else if (action.color && (!action.size || action.size === \"none\")) {\n            if (!addedCartItemSizeColor) {\n              return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n                cartQuantity: action.quantity || 1,\n                selectedColor: action.color,\n                selectedSize: \"none\",\n                cartId: uuidv4()\n              })];\n            } else {\n              return [...state.slice(0, addedCartItemSizeColorIndex), _objectSpread(_objectSpread({}, addedCartItemSizeColor), {}, {\n                cartQuantity: action.quantity ? addedCartItemSizeColor.cartQuantity + action.quantity : addedCartItemSizeColor.cartQuantity + 1\n              }), ...state.slice(addedCartItemSizeColorIndex + 1)];\n            }\n          } else if (action.size && (!action.color || action.color === \"none\")) {\n            if (!addedCartItemSizeColor) {\n              return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n                cartQuantity: action.quantity || 1,\n                selectedColor: \"none\",\n                selectedSize: action.size,\n                cartId: uuidv4()\n              })];\n            } else {\n              return [...state.slice(0, addedCartItemSizeColorIndex), _objectSpread(_objectSpread({}, addedCartItemSizeColor), {}, {\n                cartQuantity: action.quantity ? addedCartItemSizeColor.cartQuantity + action.quantity : addedCartItemSizeColor.cartQuantity + 1\n              }), ...state.slice(addedCartItemSizeColorIndex + 1)];\n            }\n          } else {\n            if (!addedCartItemSizeColor) {\n              return [...state, _objectSpread(_objectSpread({}, action.product), {}, {\n                cartQuantity: action.quantity || 1,\n                selectedColor: action.color,\n                selectedSize: action.size,\n                cartId: uuidv4()\n              })];\n            } else {\n              return [...state.slice(0, addedCartItemSizeColorIndex), _objectSpread(_objectSpread({}, addedCartItemSizeColor), {}, {\n                cartQuantity: action.quantity ? addedCartItemSizeColor.cartQuantity + action.quantity : addedCartItemSizeColor.cartQuantity + 1\n              }), ...state.slice(addedCartItemSizeColorIndex + 1)];\n            }\n          }\n\n          return;\n        }\n      }\n\n    case CART.REMOVE_FROM_CART:\n      return [...state.slice(0, cartItemIndex), ...state.slice(cartItemIndex + 1)];\n\n    case CART.REMOVE_ALL_FROM_CART:\n      return [];\n\n    case CART.INCREASE_QUANTITY_CART:\n      return [...state.slice(0, cartItemIndex), _objectSpread(_objectSpread({}, cartItem), {}, {\n        cartQuantity: cartItem.cartQuantity + 1\n      }), ...state.slice(cartItemIndex + 1)];\n\n    case CART.DECREASE_QUANTITY_CART:\n      if (cartItem.cartQuantity < 2) {\n        return;\n      }\n\n      return [...state.slice(0, cartItemIndex), _objectSpread(_objectSpread({}, cartItem), {}, {\n        cartQuantity: cartItem.cartQuantity - 1\n      }), ...state.slice(cartItemIndex + 1)];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/hari/WebstormProjects/ecommerce-MERN/client-new/src/redux/reducers/cartReducer.js"],"names":["v4","uuidv4","CART","initialState","cartReducer","state","action","cartItem","find","item","cartId","cartItemIndex","indexOf","type","ADD_TO_CART","pVaration","product","variation","length","pSize","size","addedCartItem","id","addedCartItemIndex","cartQuantity","quantity","slice","addedCartItemColor","selectedColor","color","addedCartItemColorIndex","addedCartItemSize","selectedSize","addedCartItemSizeIndex","addedCartItemSizeColor","addedCartItemSizeColorIndex","REMOVE_FROM_CART","REMOVE_ALL_FROM_CART","INCREASE_QUANTITY_CART","DECREASE_QUANTITY_CART"],"mappings":";;;;;;AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,SAASC,IAAT,QAAqB,YAArB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGF,YAA7B,EAA2CG,MAA3C,EAAmD;AAChE,QAAMC,QAAQ,GAAGF,KAAK,CAACG,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBJ,MAAM,CAACI,MAA5C,CAAjB;AACA,QAAMC,aAAa,GAAGJ,QAAQ,IAAIF,KAAK,CAACO,OAAN,CAAcL,QAAd,CAAlC;;AACA,UAAQD,MAAM,CAACO,IAAf;AACE,SAAKX,IAAI,CAACY,WAAV;AACE,YAAMC,SAAS,GACbT,MAAM,CAACU,OAAP,CAAeC,SAAf,IACCX,MAAM,CAACU,OAAP,CAAeC,SAAf,IAA4BX,MAAM,CAACU,OAAP,CAAeC,SAAf,CAAyBC,MAAzB,GAAkC,CAFjE;AAGA,YAAMC,KAAK,GACTb,MAAM,CAACU,OAAP,CAAeI,IAAf,IACCd,MAAM,CAACU,OAAP,CAAeI,IAAf,IAAuBd,MAAM,CAACU,OAAP,CAAeI,IAAf,CAAoBF,MAApB,GAA6B,CAFvD;;AAGA,UAAI,CAACH,SAAD,IAAc,CAACI,KAAnB,EAA0B;AACxB,cAAME,aAAa,GAAGhB,KAAK,CAACG,IAAN,CACnBC,IAAD,IAAUA,IAAI,CAACa,EAAL,KAAYhB,MAAM,CAACU,OAAP,CAAeM,EADjB,CAAtB;AAGA,cAAMC,kBAAkB,GACtBF,aAAa,IAAIhB,KAAK,CAACO,OAAN,CAAcS,aAAd,CADnB;;AAEA,YAAI,CAACA,aAAL,EAAoB;AAClB,iBAAO,CACL,GAAGhB,KADE,kCAGAC,MAAM,CAACU,OAHP;AAIHQ,YAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,IAAmB,CAJ9B;AAKHf,YAAAA,MAAM,EAAET,MAAM;AALX,aAAP;AAQD,SATD,MASO;AACL,iBAAO,CACL,GAAGI,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAeH,kBAAf,CADE,kCAGAF,aAHA;AAIHG,YAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,GACVJ,aAAa,CAACG,YAAd,GAA6BlB,MAAM,CAACmB,QAD1B,GAEVJ,aAAa,CAACG,YAAd,GAA6B;AAN9B,cAQL,GAAGnB,KAAK,CAACqB,KAAN,CAAYH,kBAAkB,GAAG,CAAjC,CARE,CAAP;AAUD;AACF,OA3BD,MA2BO;AACL,YAAIR,SAAS,IAAI,CAACI,KAAlB,EAAyB;AACvB,gBAAMQ,kBAAkB,GAAGtB,KAAK,CAACG,IAAN,CACxBC,IAAD,IACEA,IAAI,CAACa,EAAL,KAAYhB,MAAM,CAACU,OAAP,CAAeM,EAA3B,IACAb,IAAI,CAACmB,aADL,IAEAnB,IAAI,CAACmB,aAAL,KAAuBtB,MAAM,CAACuB,KAJP,CAA3B;AAMA,gBAAMC,uBAAuB,GAC3BH,kBAAkB,IAAItB,KAAK,CAACO,OAAN,CAAce,kBAAd,CADxB;;AAEA,cAAI,CAACrB,MAAM,CAACuB,KAAR,IAAiBvB,MAAM,CAACuB,KAAP,KAAiB,MAAtC,EAA8C;AAC5C,gBAAI,CAACF,kBAAL,EAAyB;AACvB,qBAAO,CACL,GAAGtB,KADE,kCAGAC,MAAM,CAACU,OAHP;AAIHY,gBAAAA,aAAa,EAAE,MAJZ;AAKHJ,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,IAAmB,CAL9B;AAMHf,gBAAAA,MAAM,EAAET,MAAM;AANX,iBAAP;AASD,aAVD,MAUO;AACL,qBAAO,CACL,GAAGI,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAeI,uBAAf,CADE,kCAGAH,kBAHA;AAIHH,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,GACVE,kBAAkB,CAACH,YAAnB,GAAkClB,MAAM,CAACmB,QAD/B,GAEVE,kBAAkB,CAACH,YAAnB,GAAkC;AANnC,kBAQL,GAAGnB,KAAK,CAACqB,KAAN,CAAYI,uBAAuB,GAAG,CAAtC,CARE,CAAP;AAUD;AACF,WAvBD,MAuBO;AACL,gBAAI,CAACH,kBAAL,EAAyB;AACvB,qBAAO,CACL,GAAGtB,KADE,kCAGAC,MAAM,CAACU,OAHP;AAIHQ,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,IAAmB,CAJ9B;AAKHG,gBAAAA,aAAa,EAAEtB,MAAM,CAACuB,KALnB;AAMHnB,gBAAAA,MAAM,EAAET,MAAM;AANX,iBAAP;AASD,aAVD,MAUO;AACL,qBAAO,CACL,GAAGI,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAeI,uBAAf,CADE,kCAGAH,kBAHA;AAIHH,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,GACVE,kBAAkB,CAACH,YAAnB,GAAkClB,MAAM,CAACmB,QAD/B,GAEVE,kBAAkB,CAACH,YAAnB,GAAkC;AANnC,kBAQL,GAAGnB,KAAK,CAACqB,KAAN,CAAYI,uBAAuB,GAAG,CAAtC,CARE,CAAP;AAUD;AACF;AACF,SAxDD,MAwDO,IAAI,CAACf,SAAD,IAAcI,KAAlB,EAAyB;AAC9B,gBAAMY,iBAAiB,GAAG1B,KAAK,CAACG,IAAN,CACvBC,IAAD,IACEA,IAAI,CAACa,EAAL,KAAYhB,MAAM,CAACU,OAAP,CAAeM,EAA3B,IACAb,IAAI,CAACuB,YADL,IAEAvB,IAAI,CAACuB,YAAL,KAAsB1B,MAAM,CAACc,IAJP,CAA1B;AAMA,gBAAMa,sBAAsB,GAC1BF,iBAAiB,IAAI1B,KAAK,CAACO,OAAN,CAAcmB,iBAAd,CADvB;;AAEA,cAAI,CAACzB,MAAM,CAACc,IAAR,IAAgBd,MAAM,CAACc,IAAP,KAAgB,MAApC,EAA4C;AAC1C,gBAAI,CAACW,iBAAL,EAAwB;AACtB,qBAAO,CACL,GAAG1B,KADE,kCAGAC,MAAM,CAACU,OAHP;AAIHgB,gBAAAA,YAAY,EAAE,MAJX;AAKHR,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,IAAmB,CAL9B;AAMHf,gBAAAA,MAAM,EAAET,MAAM;AANX,iBAAP;AASD,aAVD,MAUO;AACL,qBAAO,CACL,GAAGI,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAeO,sBAAf,CADE,kCAGAF,iBAHA;AAIHP,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,GACVM,iBAAiB,CAACP,YAAlB,GAAiClB,MAAM,CAACmB,QAD9B,GAEVM,iBAAiB,CAACP,YAAlB,GAAiC;AANlC,kBAQL,GAAGnB,KAAK,CAACqB,KAAN,CAAYO,sBAAsB,GAAG,CAArC,CARE,CAAP;AAUD;AACF,WAvBD,MAuBO;AACL,gBAAI,CAACF,iBAAL,EAAwB;AACtB,qBAAO,CACL,GAAG1B,KADE,kCAGAC,MAAM,CAACU,OAHP;AAIHQ,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,IAAmB,CAJ9B;AAKHO,gBAAAA,YAAY,EAAE1B,MAAM,CAACc,IALlB;AAMHV,gBAAAA,MAAM,EAAET,MAAM;AANX,iBAAP;AASD,aAVD,MAUO;AACL,qBAAO,CACL,GAAGI,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAeO,sBAAf,CADE,kCAGAF,iBAHA;AAIHP,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,GACVM,iBAAiB,CAACP,YAAlB,GAAiClB,MAAM,CAACmB,QAD9B,GAEVM,iBAAiB,CAACP,YAAlB,GAAiC;AANlC,kBAQL,GAAGnB,KAAK,CAACqB,KAAN,CAAYO,sBAAsB,GAAG,CAArC,CARE,CAAP;AAUD;AACF;AACF,SAxDM,MAwDA,IAAIlB,SAAS,IAAII,KAAjB,EAAwB;AAC7B,gBAAMe,sBAAsB,GAAG7B,KAAK,CAACG,IAAN,CAC5BC,IAAD,IACEA,IAAI,CAACa,EAAL,KAAYhB,MAAM,CAACU,OAAP,CAAeM,EAA3B,IACAb,IAAI,CAACuB,YADL,IAEAvB,IAAI,CAACuB,YAAL,KAAsB1B,MAAM,CAACc,IAF7B,IAGAX,IAAI,CAACmB,aAHL,IAIAnB,IAAI,CAACmB,aAAL,KAAuBtB,MAAM,CAACuB,KANH,CAA/B;AAQA,gBAAMM,2BAA2B,GAC/BD,sBAAsB,IAAI7B,KAAK,CAACO,OAAN,CAAcsB,sBAAd,CAD5B;;AAEA,cACE,CAAC,CAAC5B,MAAM,CAACuB,KAAR,IAAiBvB,MAAM,CAACuB,KAAP,KAAiB,MAAnC,MACC,CAACvB,MAAM,CAACc,IAAR,IAAgBd,MAAM,CAACc,IAAP,KAAgB,MADjC,CADF,EAGE;AACA,gBAAI,CAACc,sBAAL,EAA6B;AAC3B,qBAAO,CACL,GAAG7B,KADE,kCAGAC,MAAM,CAACU,OAHP;AAIHY,gBAAAA,aAAa,EAAE,MAJZ;AAKHI,gBAAAA,YAAY,EAAE,MALX;AAMHR,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,IAAmB,CAN9B;AAOHf,gBAAAA,MAAM,EAAET,MAAM;AAPX,iBAAP;AAUD,aAXD,MAWO;AACL,qBAAO,CACL,GAAGI,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAeS,2BAAf,CADE,kCAGAD,sBAHA;AAIHV,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,GACVS,sBAAsB,CAACV,YAAvB,GAAsClB,MAAM,CAACmB,QADnC,GAEVS,sBAAsB,CAACV,YAAvB,GAAsC;AANvC,kBAQL,GAAGnB,KAAK,CAACqB,KAAN,CAAYS,2BAA2B,GAAG,CAA1C,CARE,CAAP;AAUD;AACF,WA3BD,MA2BO,IAAI7B,MAAM,CAACuB,KAAP,KAAiB,CAACvB,MAAM,CAACc,IAAR,IAAgBd,MAAM,CAACc,IAAP,KAAgB,MAAjD,CAAJ,EAA8D;AACnE,gBAAI,CAACc,sBAAL,EAA6B;AAC3B,qBAAO,CACL,GAAG7B,KADE,kCAGAC,MAAM,CAACU,OAHP;AAIHQ,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,IAAmB,CAJ9B;AAKHG,gBAAAA,aAAa,EAAEtB,MAAM,CAACuB,KALnB;AAMHG,gBAAAA,YAAY,EAAE,MANX;AAOHtB,gBAAAA,MAAM,EAAET,MAAM;AAPX,iBAAP;AAUD,aAXD,MAWO;AACL,qBAAO,CACL,GAAGI,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAeS,2BAAf,CADE,kCAGAD,sBAHA;AAIHV,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,GACVS,sBAAsB,CAACV,YAAvB,GAAsClB,MAAM,CAACmB,QADnC,GAEVS,sBAAsB,CAACV,YAAvB,GAAsC;AANvC,kBAQL,GAAGnB,KAAK,CAACqB,KAAN,CAAYS,2BAA2B,GAAG,CAA1C,CARE,CAAP;AAUD;AACF,WAxBM,MAwBA,IACL7B,MAAM,CAACc,IAAP,KACC,CAACd,MAAM,CAACuB,KAAR,IAAiBvB,MAAM,CAACuB,KAAP,KAAiB,MADnC,CADK,EAGL;AACA,gBAAI,CAACK,sBAAL,EAA6B;AAC3B,qBAAO,CACL,GAAG7B,KADE,kCAGAC,MAAM,CAACU,OAHP;AAIHQ,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,IAAmB,CAJ9B;AAKHG,gBAAAA,aAAa,EAAE,MALZ;AAMHI,gBAAAA,YAAY,EAAE1B,MAAM,CAACc,IANlB;AAOHV,gBAAAA,MAAM,EAAET,MAAM;AAPX,iBAAP;AAUD,aAXD,MAWO;AACL,qBAAO,CACL,GAAGI,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAeS,2BAAf,CADE,kCAGAD,sBAHA;AAIHV,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,GACVS,sBAAsB,CAACV,YAAvB,GAAsClB,MAAM,CAACmB,QADnC,GAEVS,sBAAsB,CAACV,YAAvB,GAAsC;AANvC,kBAQL,GAAGnB,KAAK,CAACqB,KAAN,CAAYS,2BAA2B,GAAG,CAA1C,CARE,CAAP;AAUD;AACF,WA3BM,MA2BA;AACL,gBAAI,CAACD,sBAAL,EAA6B;AAC3B,qBAAO,CACL,GAAG7B,KADE,kCAGAC,MAAM,CAACU,OAHP;AAIHQ,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,IAAmB,CAJ9B;AAKHG,gBAAAA,aAAa,EAAEtB,MAAM,CAACuB,KALnB;AAMHG,gBAAAA,YAAY,EAAE1B,MAAM,CAACc,IANlB;AAOHV,gBAAAA,MAAM,EAAET,MAAM;AAPX,iBAAP;AAUD,aAXD,MAWO;AACL,qBAAO,CACL,GAAGI,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAeS,2BAAf,CADE,kCAGAD,sBAHA;AAIHV,gBAAAA,YAAY,EAAElB,MAAM,CAACmB,QAAP,GACVS,sBAAsB,CAACV,YAAvB,GAAsClB,MAAM,CAACmB,QADnC,GAEVS,sBAAsB,CAACV,YAAvB,GAAsC;AANvC,kBAQL,GAAGnB,KAAK,CAACqB,KAAN,CAAYS,2BAA2B,GAAG,CAA1C,CARE,CAAP;AAUD;AACF;;AACD;AACD;AACF;;AACH,SAAKjC,IAAI,CAACkC,gBAAV;AACE,aAAO,CACL,GAAG/B,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAef,aAAf,CADE,EAEL,GAAGN,KAAK,CAACqB,KAAN,CAAYf,aAAa,GAAG,CAA5B,CAFE,CAAP;;AAIF,SAAKT,IAAI,CAACmC,oBAAV;AACE,aAAO,EAAP;;AACF,SAAKnC,IAAI,CAACoC,sBAAV;AACE,aAAO,CACL,GAAGjC,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAef,aAAf,CADE,kCAEAJ,QAFA;AAEUiB,QAAAA,YAAY,EAAEjB,QAAQ,CAACiB,YAAT,GAAwB;AAFhD,UAGL,GAAGnB,KAAK,CAACqB,KAAN,CAAYf,aAAa,GAAG,CAA5B,CAHE,CAAP;;AAKF,SAAKT,IAAI,CAACqC,sBAAV;AACE,UAAIhC,QAAQ,CAACiB,YAAT,GAAwB,CAA5B,EAA+B;AAC7B;AACD;;AACD,aAAO,CACL,GAAGnB,KAAK,CAACqB,KAAN,CAAY,CAAZ,EAAef,aAAf,CADE,kCAEAJ,QAFA;AAEUiB,QAAAA,YAAY,EAAEjB,QAAQ,CAACiB,YAAT,GAAwB;AAFhD,UAGL,GAAGnB,KAAK,CAACqB,KAAN,CAAYf,aAAa,GAAG,CAA5B,CAHE,CAAP;;AAKF;AACE,aAAON,KAAP;AAhSJ;AAkSD","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nimport { CART } from \"../defines\";\n\nconst initialState = [];\n\nexport default function cartReducer(state = initialState, action) {\n  const cartItem = state.find((item) => item.cartId === action.cartId);\n  const cartItemIndex = cartItem && state.indexOf(cartItem);\n  switch (action.type) {\n    case CART.ADD_TO_CART:\n      const pVaration =\n        action.product.variation ||\n        (action.product.variation && action.product.variation.length > 0);\n      const pSize =\n        action.product.size ||\n        (action.product.size && action.product.size.length > 0);\n      if (!pVaration && !pSize) {\n        const addedCartItem = state.find(\n          (item) => item.id === action.product.id\n        );\n        const addedCartItemIndex =\n          addedCartItem && state.indexOf(addedCartItem);\n        if (!addedCartItem) {\n          return [\n            ...state,\n            {\n              ...action.product,\n              cartQuantity: action.quantity || 1,\n              cartId: uuidv4(),\n            },\n          ];\n        } else {\n          return [\n            ...state.slice(0, addedCartItemIndex),\n            {\n              ...addedCartItem,\n              cartQuantity: action.quantity\n                ? addedCartItem.cartQuantity + action.quantity\n                : addedCartItem.cartQuantity + 1,\n            },\n            ...state.slice(addedCartItemIndex + 1),\n          ];\n        }\n      } else {\n        if (pVaration && !pSize) {\n          const addedCartItemColor = state.find(\n            (item) =>\n              item.id === action.product.id &&\n              item.selectedColor &&\n              item.selectedColor === action.color\n          );\n          const addedCartItemColorIndex =\n            addedCartItemColor && state.indexOf(addedCartItemColor);\n          if (!action.color || action.color === \"none\") {\n            if (!addedCartItemColor) {\n              return [\n                ...state,\n                {\n                  ...action.product,\n                  selectedColor: \"none\",\n                  cartQuantity: action.quantity || 1,\n                  cartId: uuidv4(),\n                },\n              ];\n            } else {\n              return [\n                ...state.slice(0, addedCartItemColorIndex),\n                {\n                  ...addedCartItemColor,\n                  cartQuantity: action.quantity\n                    ? addedCartItemColor.cartQuantity + action.quantity\n                    : addedCartItemColor.cartQuantity + 1,\n                },\n                ...state.slice(addedCartItemColorIndex + 1),\n              ];\n            }\n          } else {\n            if (!addedCartItemColor) {\n              return [\n                ...state,\n                {\n                  ...action.product,\n                  cartQuantity: action.quantity || 1,\n                  selectedColor: action.color,\n                  cartId: uuidv4(),\n                },\n              ];\n            } else {\n              return [\n                ...state.slice(0, addedCartItemColorIndex),\n                {\n                  ...addedCartItemColor,\n                  cartQuantity: action.quantity\n                    ? addedCartItemColor.cartQuantity + action.quantity\n                    : addedCartItemColor.cartQuantity + 1,\n                },\n                ...state.slice(addedCartItemColorIndex + 1),\n              ];\n            }\n          }\n        } else if (!pVaration && pSize) {\n          const addedCartItemSize = state.find(\n            (item) =>\n              item.id === action.product.id &&\n              item.selectedSize &&\n              item.selectedSize === action.size\n          );\n          const addedCartItemSizeIndex =\n            addedCartItemSize && state.indexOf(addedCartItemSize);\n          if (!action.size || action.size === \"none\") {\n            if (!addedCartItemSize) {\n              return [\n                ...state,\n                {\n                  ...action.product,\n                  selectedSize: \"none\",\n                  cartQuantity: action.quantity || 1,\n                  cartId: uuidv4(),\n                },\n              ];\n            } else {\n              return [\n                ...state.slice(0, addedCartItemSizeIndex),\n                {\n                  ...addedCartItemSize,\n                  cartQuantity: action.quantity\n                    ? addedCartItemSize.cartQuantity + action.quantity\n                    : addedCartItemSize.cartQuantity + 1,\n                },\n                ...state.slice(addedCartItemSizeIndex + 1),\n              ];\n            }\n          } else {\n            if (!addedCartItemSize) {\n              return [\n                ...state,\n                {\n                  ...action.product,\n                  cartQuantity: action.quantity || 1,\n                  selectedSize: action.size,\n                  cartId: uuidv4(),\n                },\n              ];\n            } else {\n              return [\n                ...state.slice(0, addedCartItemSizeIndex),\n                {\n                  ...addedCartItemSize,\n                  cartQuantity: action.quantity\n                    ? addedCartItemSize.cartQuantity + action.quantity\n                    : addedCartItemSize.cartQuantity + 1,\n                },\n                ...state.slice(addedCartItemSizeIndex + 1),\n              ];\n            }\n          }\n        } else if (pVaration && pSize) {\n          const addedCartItemSizeColor = state.find(\n            (item) =>\n              item.id === action.product.id &&\n              item.selectedSize &&\n              item.selectedSize === action.size &&\n              item.selectedColor &&\n              item.selectedColor === action.color\n          );\n          const addedCartItemSizeColorIndex =\n            addedCartItemSizeColor && state.indexOf(addedCartItemSizeColor);\n          if (\n            (!action.color || action.color === \"none\") &&\n            (!action.size || action.size === \"none\")\n          ) {\n            if (!addedCartItemSizeColor) {\n              return [\n                ...state,\n                {\n                  ...action.product,\n                  selectedColor: \"none\",\n                  selectedSize: \"none\",\n                  cartQuantity: action.quantity || 1,\n                  cartId: uuidv4(),\n                },\n              ];\n            } else {\n              return [\n                ...state.slice(0, addedCartItemSizeColorIndex),\n                {\n                  ...addedCartItemSizeColor,\n                  cartQuantity: action.quantity\n                    ? addedCartItemSizeColor.cartQuantity + action.quantity\n                    : addedCartItemSizeColor.cartQuantity + 1,\n                },\n                ...state.slice(addedCartItemSizeColorIndex + 1),\n              ];\n            }\n          } else if (action.color && (!action.size || action.size === \"none\")) {\n            if (!addedCartItemSizeColor) {\n              return [\n                ...state,\n                {\n                  ...action.product,\n                  cartQuantity: action.quantity || 1,\n                  selectedColor: action.color,\n                  selectedSize: \"none\",\n                  cartId: uuidv4(),\n                },\n              ];\n            } else {\n              return [\n                ...state.slice(0, addedCartItemSizeColorIndex),\n                {\n                  ...addedCartItemSizeColor,\n                  cartQuantity: action.quantity\n                    ? addedCartItemSizeColor.cartQuantity + action.quantity\n                    : addedCartItemSizeColor.cartQuantity + 1,\n                },\n                ...state.slice(addedCartItemSizeColorIndex + 1),\n              ];\n            }\n          } else if (\n            action.size &&\n            (!action.color || action.color === \"none\")\n          ) {\n            if (!addedCartItemSizeColor) {\n              return [\n                ...state,\n                {\n                  ...action.product,\n                  cartQuantity: action.quantity || 1,\n                  selectedColor: \"none\",\n                  selectedSize: action.size,\n                  cartId: uuidv4(),\n                },\n              ];\n            } else {\n              return [\n                ...state.slice(0, addedCartItemSizeColorIndex),\n                {\n                  ...addedCartItemSizeColor,\n                  cartQuantity: action.quantity\n                    ? addedCartItemSizeColor.cartQuantity + action.quantity\n                    : addedCartItemSizeColor.cartQuantity + 1,\n                },\n                ...state.slice(addedCartItemSizeColorIndex + 1),\n              ];\n            }\n          } else {\n            if (!addedCartItemSizeColor) {\n              return [\n                ...state,\n                {\n                  ...action.product,\n                  cartQuantity: action.quantity || 1,\n                  selectedColor: action.color,\n                  selectedSize: action.size,\n                  cartId: uuidv4(),\n                },\n              ];\n            } else {\n              return [\n                ...state.slice(0, addedCartItemSizeColorIndex),\n                {\n                  ...addedCartItemSizeColor,\n                  cartQuantity: action.quantity\n                    ? addedCartItemSizeColor.cartQuantity + action.quantity\n                    : addedCartItemSizeColor.cartQuantity + 1,\n                },\n                ...state.slice(addedCartItemSizeColorIndex + 1),\n              ];\n            }\n          }\n          return;\n        }\n      }\n    case CART.REMOVE_FROM_CART:\n      return [\n        ...state.slice(0, cartItemIndex),\n        ...state.slice(cartItemIndex + 1),\n      ];\n    case CART.REMOVE_ALL_FROM_CART:\n      return [];\n    case CART.INCREASE_QUANTITY_CART:\n      return [\n        ...state.slice(0, cartItemIndex),\n        { ...cartItem, cartQuantity: cartItem.cartQuantity + 1 },\n        ...state.slice(cartItemIndex + 1),\n      ];\n    case CART.DECREASE_QUANTITY_CART:\n      if (cartItem.cartQuantity < 2) {\n        return;\n      }\n      return [\n        ...state.slice(0, cartItemIndex),\n        { ...cartItem, cartQuantity: cartItem.cartQuantity - 1 },\n        ...state.slice(cartItemIndex + 1),\n      ];\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}