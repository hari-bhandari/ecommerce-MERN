{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\2012b\\\\WebstormProjects\\\\ecommerce-MERN\\\\client-new\\\\src\\\\components\\\\Product\\\\grid\\\\ProductGrid.tsx\";\nimport React, { useState } from 'react';\nimport ProductCard from '../card/ProductItem';\nimport { useRouter } from 'next/router';\nimport { Button } from './loadmore-button';\nimport { Box } from './box'; // import { Button } from './button';\n\nimport { Grid } from './ProductGridStyles';\nimport { API_BASE_URL } from \"@/utils/config\";\nexport const ProductGrid = ({\n  style,\n  type,\n  loadMore = true,\n  fetchLimit = 16\n}) => {\n  var _data;\n\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const url = () => {\n    if (!router.query.category || !router.query.query) {\n      return `${API_BASE_URL}/api/v1/products/similar/sas`;\n    } else {\n      return `${API_BASE_URL}/api/v1/products/?category=mobile-phone`;\n    }\n  }; // const { data, error } = useProducts({\n  //     type,\n  //     text: router.query.text,\n  //     category: router.query.category,\n  //     offset: 0,\n  //     limit: fetchLimit,\n  // });\n\n\n  if (!data) return null;\n\n  const handleLoadMore = async () => {\n    setLoading(true); // await fetchMore(Number(data.length), fetchLimit);\n\n    setLoading(false);\n  }; // const { items, hasMore } = data.products;\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      style: style,\n      children: data.map((product, idx) => /*#__PURE__*/_jsxDEV(ProductCard, {\n        data: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), loadMore && ((_data = data) === null || _data === void 0 ? void 0 : _data.hasMore) && /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        textAlign: 'center'\n      },\n      mt: '2rem',\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoadMore,\n        loading: loading,\n        variant: \"secondary\",\n        style: {\n          fontSize: 14,\n          display: 'inline-flex'\n        },\n        border: \"1px solid #f1f1f1\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/components/Product/grid/ProductGrid.tsx"],"names":["React","useState","ProductCard","useRouter","Button","Box","Grid","API_BASE_URL","ProductGrid","style","type","loadMore","fetchLimit","router","loading","setLoading","url","query","category","data","handleLoadMore","map","product","idx","id","hasMore","textAlign","fontSize","display"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAyB,qBAAzB;AAGA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,GAAT,QAAoB,OAApB,C,CAEA;;AAEA,SAAQC,IAAR,QAAmB,qBAAnB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAQA,OAAO,MAAMC,WAAW,GAAG,CAAC;AACIC,EAAAA,KADJ;AAEIC,EAAAA,IAFJ;AAGIC,EAAAA,QAAQ,GAAG,IAHf;AAIIC,EAAAA,UAAU,GAAG;AAJjB,CAAD,KAKc;AAAA;;AACrC,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMe,GAAG,GAAC,MAAI;AACV,QAAI,CAACH,MAAM,CAACI,KAAP,CAAaC,QAAd,IAAwB,CAACL,MAAM,CAACI,KAAP,CAAaA,KAA1C,EAAgD;AAC5C,aAAQ,GAAEV,YAAa,8BAAvB;AACH,KAFD,MAGI;AACA,aAAQ,GAAEA,YAAa,yCAAvB;AACH;AACJ,GAPD,CAHqC,CAYrC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAI,CAACY,IAAL,EAAW,OAAO,IAAP;;AACX,QAAMC,cAAc,GAAG,YAAY;AAC/BL,IAAAA,UAAU,CAAC,IAAD,CAAV,CAD+B,CAE/B;;AACAA,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAJD,CArBqC,CA0BrC;;;AACA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,KAAb;AAAA,gBACKU,IAAI,CAACE,GAAL,CAAS,CAACC,OAAD,EAAUC,GAAV,kBACN,QAAC,WAAD;AAAa,QAAA,IAAI,EAAED;AAAnB,SAAiCA,OAAO,CAACE,EAAzC;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,EAOKb,QAAQ,cAAIQ,IAAJ,0CAAI,MAAMM,OAAV,CAAR,iBACG,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAqC,MAAA,EAAE,EAAE,MAAzC;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,OAAO,EAAEN,cADb;AAEI,QAAA,OAAO,EAAEN,OAFb;AAGI,QAAA,OAAO,EAAC,WAHZ;AAII,QAAA,KAAK,EAAE;AACHa,UAAAA,QAAQ,EAAE,EADP;AAEHC,UAAAA,OAAO,EAAE;AAFN,SAJX;AAQI,QAAA,MAAM,EAAC,mBARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA1DM","sourcesContent":["import React, { useState } from 'react';\r\nimport ProductCard  from '../card/ProductItem';\r\nimport styled from 'styled-components';\r\nimport css from '@styled-system/css';\r\nimport { useRouter } from 'next/router';\r\nimport { Button } from './loadmore-button';\r\nimport { Box } from './box';\r\n\r\n// import { Button } from './button';\r\n\r\nimport {Grid} from './ProductGridStyles'\r\nimport {API_BASE_URL} from \"@/utils/config\";\r\ninterface Props {\r\n    type: string;\r\n    loadMore?: boolean;\r\n    fetchLimit?: number;\r\n    style?: any;\r\n}\r\n\r\nexport const ProductGrid = ({\r\n                                style,\r\n                                type,\r\n                                loadMore = true,\r\n                                fetchLimit = 16,\r\n                            }: Props) => {\r\n    const router = useRouter();\r\n    const [loading, setLoading] = useState(false);\r\n    const url=()=>{\r\n        if (!router.query.category||!router.query.query){\r\n            return `${API_BASE_URL}/api/v1/products/similar/sas`\r\n        }\r\n        else{\r\n            return `${API_BASE_URL}/api/v1/products/?category=mobile-phone`\r\n        }\r\n    }\r\n\r\n    // const { data, error } = useProducts({\r\n    //     type,\r\n    //     text: router.query.text,\r\n    //     category: router.query.category,\r\n    //     offset: 0,\r\n    //     limit: fetchLimit,\r\n    // });\r\n\r\n    if (!data) return null;\r\n    const handleLoadMore = async () => {\r\n        setLoading(true);\r\n        // await fetchMore(Number(data.length), fetchLimit);\r\n        setLoading(false);\r\n    };\r\n    // const { items, hasMore } = data.products;\r\n    return (\r\n        <section>\r\n            <Grid style={style}>\r\n                {data.map((product, idx) => (\r\n                    <ProductCard data={product} key={product.id} />\r\n                ))}\r\n            </Grid>\r\n\r\n            {loadMore && data?.hasMore && (\r\n                <Box style={{ textAlign: 'center' }} mt={'2rem'}>\r\n                    <Button\r\n                        onClick={handleLoadMore}\r\n                        loading={loading}\r\n                        variant='secondary'\r\n                        style={{\r\n                            fontSize: 14,\r\n                            display: 'inline-flex',\r\n                        }}\r\n                        border='1px solid #f1f1f1'\r\n                    >\r\n                        Load More\r\n                    </Button>\r\n                </Box>\r\n            )}\r\n        </section>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}