{"ast":null,"code":"export const calculateTotalPrice = arr => {\n  let total = 0;\n  arr.forEach(item => {\n    if (item.discount) {\n      total += item.cartQuantity ? (item.price - item.discount) * item.cartQuantity : item.price - item.discount;\n    } else {\n      total += item.cartQuantity ? item.price * item.cartQuantity : item.price;\n    }\n  });\n  return total;\n};\nexport const isInCart = (arr, id) => {\n  return arr.some(item => item.id === id);\n};\nexport const getItemCartQty = (arr, id) => {\n  const item = arr.find(item => item.id === id);\n  return item !== null && item !== void 0 && item.cartQuantity ? item.cartQuantity : null;\n};","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/utils/cartUtils.ts"],"names":["calculateTotalPrice","arr","total","forEach","item","discount","cartQuantity","price","isInCart","id","some","getItemCartQty","find"],"mappings":"AAEA,OAAO,MAAMA,mBAAmB,GAAIC,GAAD,IAAe;AAC9C,MAAIC,KAAK,GAAG,CAAZ;AACAD,EAAAA,GAAG,CAACE,OAAJ,CAAaC,IAAD,IAAU;AAClB,QAAIA,IAAI,CAACC,QAAT,EAAmB;AACfH,MAAAA,KAAK,IAAIE,IAAI,CAACE,YAAL,GACH,CAACF,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACC,QAAnB,IAA+BD,IAAI,CAACE,YADjC,GAEHF,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACC,QAFxB;AAGH,KAJD,MAIO;AACHH,MAAAA,KAAK,IAAIE,IAAI,CAACE,YAAL,GAAoBF,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACE,YAAtC,GAAqDF,IAAI,CAACG,KAAnE;AACH;AACJ,GARD;AASA,SAAOL,KAAP;AACH,CAZM;AAaP,OAAO,MAAMM,QAAQ,GAAC,CAACP,GAAD,EAAWQ,EAAX,KAAgB;AAClC,SAAOR,GAAG,CAACS,IAAJ,CAAUN,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYA,EAA/B,CAAP;AACH,CAFM;AAGP,OAAO,MAAME,cAAc,GAAG,CAACV,GAAD,EAAWQ,EAAX,KAAyB;AACnD,QAAML,IAAI,GAACH,GAAG,CAACW,IAAJ,CAAUR,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYA,EAA/B,CAAX;AACA,SAAOL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAEE,YAAN,GAAmBF,IAAI,CAACE,YAAxB,GAAqC,IAA5C;AACH,CAHM","sourcesContent":["import {string} from \"prop-types\";\r\n\r\nexport const calculateTotalPrice = (arr:[any]) => {\r\n    let total = 0;\r\n    arr.forEach((item) => {\r\n        if (item.discount) {\r\n            total += item.cartQuantity\r\n                ? (item.price - item.discount) * item.cartQuantity\r\n                : item.price - item.discount;\r\n        } else {\r\n            total += item.cartQuantity ? item.price * item.cartQuantity : item.price;\r\n        }\r\n    });\r\n    return total;\r\n};\r\nexport const isInCart=(arr:[any],id)=>{\r\n    return arr.some((item) => item.id === id);\r\n}\r\nexport const getItemCartQty = (arr:[any],id:string) => {\r\n    const item=arr.find((item) => item.id === id);\r\n    return item?.cartQuantity?item.cartQuantity:null\r\n};"]},"metadata":{},"sourceType":"module"}