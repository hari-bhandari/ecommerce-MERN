{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\2012b\\\\WebstormProjects\\\\ecommerce-MERN\\\\client-new\\\\src\\\\components\\\\Layout\\\\search-box\\\\search-box.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport { StyledForm, StyledInput, StyledSearchButton } from './search-box.style';\nimport { useRouter } from \"next/router\";\nimport { SearchIcon } from '@/assets/icons/SearchIcon';\nimport CategorySearchSwitcher from \"@/components/Layout/header/menu/left-menu/CategorySearchSwitcher\";\nimport SuggestionPopup from \"@/components/Layout/header/search/suggestionPopup\";\nimport { MenuItem } from \"@/components/Layout/header/menu/currency-switcher/CurrencySwitcherStyles\";\nimport useFetch from \"@/hooks/useFetch\";\nimport { API_BASE_URL } from \"@/utils/config\";\nimport { CategoryIcon } from \"@/components/Layout/header/menu/left-menu/LeftMenu\"; // @ts-ignore\n\nconst ItemsMenu = ({\n  onClick,\n  text,\n  category\n}) => {\n  var _data$data;\n\n  const textQuery = text === '' ? `text=${text}` : '';\n  const categoryQuery = category ? `category=${category}` : '';\n  const [data, isLoading, error, reFetch] = useFetch(`${API_BASE_URL}/api/v1/products/autocomplete/?${textQuery}&${categoryQuery}`);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: onClick,\n      value: item.id,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(CategoryIcon, {\n          link: item.thumbImage,\n          height: \"25px\",\n          width: \"25px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), item.name]\n    }, item._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n};\n\nexport const SearchBox = props => {\n  const router = useRouter();\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    0: category,\n    1: setCategory\n  } = useState(null);\n  const {\n    name,\n    minimal,\n    buttonText,\n    className,\n    showButtonText = true,\n    shadow\n  } = props;\n\n  const handleOnChange = e => {\n    const {\n      value\n    } = e.target;\n    setSearch(value);\n  };\n\n  const onSearch = e => {\n    e.preventDefault();\n    const {\n      pathname,\n      query\n    } = router;\n\n    const {\n      type\n    } = query,\n          rest = _objectWithoutProperties(query, [\"type\"]);\n\n    if (type) {\n      router.push({\n        pathname,\n        query: {\n          query: search\n        }\n      }, {\n        pathname: `/`,\n        query: {\n          query: search\n        }\n      });\n    } else {\n      router.push({\n        pathname,\n        query: {\n          query: search\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledForm, {\n    onSubmit: handleOnChange,\n    className: className,\n    boxShadow: shadow,\n    minimal: minimal,\n    children: minimal ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CategorySearchSwitcher, {\n        setCategory: setCategory,\n        category: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(SuggestionPopup, {\n        content: /*#__PURE__*/_jsxDEV(ItemsMenu, {\n          onClick: () => {},\n          text: search,\n          category: category === null || category === void 0 ? void 0 : category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this),\n        handler: /*#__PURE__*/_jsxDEV(StyledInput, {\n          type: \"search\",\n          onChange: handleOnChange,\n          value: search,\n          name: name,\n          autoComplete: 'off'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {\n        style: {\n          marginLeft: 16,\n          marginRight: 16\n        },\n        onClick: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n        type: \"search\",\n        onChange: handleOnChange,\n        value: search,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(StyledSearchButton, {\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), showButtonText && buttonText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/2012b/WebstormProjects/ecommerce-MERN/client-new/src/components/Layout/search-box/search-box.tsx"],"names":["React","useState","StyledForm","StyledInput","StyledSearchButton","useRouter","SearchIcon","CategorySearchSwitcher","SuggestionPopup","MenuItem","useFetch","API_BASE_URL","CategoryIcon","ItemsMenu","onClick","text","category","textQuery","categoryQuery","data","isLoading","error","reFetch","map","item","id","thumbImage","name","_id","SearchBox","props","router","search","setSearch","setCategory","minimal","buttonText","className","showButtonText","shadow","handleOnChange","e","value","target","onSearch","preventDefault","pathname","query","type","rest","push","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n  StyledForm,\r\n  StyledInput,\r\n  StyledSearchButton,\r\n} from './search-box.style';\r\nimport {useRouter} from \"next/router\";\r\nimport { SearchIcon } from '@/assets/icons/SearchIcon';\r\nimport CategorySearchSwitcher from \"@/components/Layout/header/menu/left-menu/CategorySearchSwitcher\";\r\nimport SuggestionPopup from \"@/components/Layout/header/search/suggestionPopup\";\r\nimport {MenuItem} from \"@/components/Layout/header/menu/currency-switcher/CurrencySwitcherStyles\";\r\ninterface Props {\r\n  name: string;\r\n  minimal?: boolean;\r\n  className?: string;\r\n  showButtonText?: boolean;\r\n  shadow?: string;\r\n  [key: string]: unknown;\r\n}\r\n\r\nimport useFetch from \"@/hooks/useFetch\";\r\nimport {API_BASE_URL, transformCloudinaryImage} from \"@/utils/config\";\r\nimport {CategoryIcon} from \"@/components/Layout/header/menu/left-menu/LeftMenu\";\r\n// @ts-ignore\r\nconst ItemsMenu = ({ onClick,text,category }) => {\r\n  const textQuery=text===''?`text=${text}`:''\r\n  const categoryQuery=category?`category=${category}`:''\r\n  const [data, isLoading, error, reFetch]=useFetch(`${API_BASE_URL}/api/v1/products/autocomplete/?${textQuery}&${categoryQuery}`)\r\n\r\n  return (\r\n      <>\r\n        {data?.data?.map((item) => (\r\n            <MenuItem onClick={onClick} key={item._id} value={item.id}>\r\n          <span>\r\n            <CategoryIcon link={item.thumbImage} height={\"25px\"} width={\"25px\"}/>\r\n          </span>\r\n              {item.name}\r\n            </MenuItem>\r\n        ))}\r\n      </>\r\n  );\r\n};\r\nexport interface ActiveSearchFilter{\r\n  id:string,\r\n  name: string,\r\n  image?:string,\r\n}\r\nexport const SearchBox: React.FC<Props> = (props) => {\r\n  const router=useRouter()\r\n\r\n  const [search,setSearch]=useState<string>('')\r\n  const [category,setCategory]=useState<ActiveSearchFilter|null>(null)\r\n  const {\r\n    name,\r\n    minimal,\r\n    buttonText,\r\n    className,\r\n    showButtonText = true,\r\n    shadow,\r\n  } = props\r\n  const handleOnChange = (e: { target: { value: any; }; }) => {\r\n    const { value } = e.target;\r\n    setSearch(value)\r\n  };\r\n  const onSearch = (e: { preventDefault: () => void; }) => {\r\n    e.preventDefault();\r\n    const { pathname, query } = router;\r\n    const { type, ...rest } = query;\r\n      if (type) {\r\n        router.push(\r\n            {\r\n              pathname,\r\n              query: {query:search },\r\n            },\r\n            {\r\n              pathname: `/`,\r\n              query: {query:search },\r\n            }\r\n        );\r\n      }\r\n      else {\r\n        router.push({\r\n          pathname,\r\n          query: {query:search },\r\n        });\r\n      }}\r\n  return (\r\n      <StyledForm\r\n          onSubmit={handleOnChange}\r\n          className={className}\r\n          boxShadow={shadow}\r\n          minimal={minimal}\r\n      >\r\n        {minimal ? (\r\n            <>\r\n              <CategorySearchSwitcher setCategory={setCategory} category={category}/>\r\n              <SuggestionPopup content={\r\n                <ItemsMenu onClick={() => {\r\n                }} text={search} category={category?.name}/>} handler={\r\n                <StyledInput\r\n                    type='search'\r\n                    onChange={handleOnChange}\r\n                    value={search}\r\n                    name={name}\r\n                    autoComplete={'off'}/>\r\n              }\r\n              />\r\n\r\n              <SearchIcon style={{marginLeft: 16, marginRight: 16}} onClick={onSearch} />\r\n\r\n            </>\r\n        ) : (\r\n            <>\r\n              <StyledInput\r\n                  type='search'\r\n                  onChange={handleOnChange}\r\n                  value={search}\r\n                  name={name}\r\n              />\r\n              <StyledSearchButton>\r\n                <SearchIcon style={{marginRight: 10}}/>\r\n                {showButtonText && buttonText}\r\n              </StyledSearchButton>\r\n            </>\r\n        )}\r\n      </StyledForm>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}